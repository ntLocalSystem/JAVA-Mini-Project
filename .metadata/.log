!SESSION 2018-09-26 21:08:40.055 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\Rohit Mutalik\Desktop\JAVA mini project\.metadata\.bak_1.log
Created Time: 2018-09-26 22:43:18.229

!ENTRY org.eclipse.ui 4 0 2018-09-26 22:43:18.232
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy20.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor164.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.wb.internal.draw2d.EventManager$8.invoke(EventManager.java:325)
	... 28 more
Caused by: java.lang.NullPointerException
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.FigureUtils.translateFigureToCanvas(FigureUtils.java:100)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.getTargetFigure(PaletteComposite.java:1167)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.access$6(PaletteComposite.java:1164)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.move_showFeedback(PaletteComposite.java:831)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.access$12(PaletteComposite.java:827)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure$2.mouseMove(PaletteComposite.java:793)
	at org.eclipse.wb.internal.draw2d.EventManager$4.invokeListener(EventManager.java:267)
	at org.eclipse.wb.internal.draw2d.EventManager.sendEvent(EventManager.java:205)
	at org.eclipse.wb.internal.draw2d.EventManager.handleMouseEvent(EventManager.java:191)
	at org.eclipse.wb.internal.draw2d.EventManager.mouseMove(EventManager.java:184)
	... 32 more

!ENTRY org.eclipse.ui 4 0 2018-09-26 22:43:18.237
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy20.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor164.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.wb.internal.draw2d.EventManager$8.invoke(EventManager.java:325)
	... 28 more
Caused by: java.lang.NullPointerException
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.FigureUtils.translateFigureToCanvas(FigureUtils.java:100)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.getTargetFigure(PaletteComposite.java:1167)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.access$6(PaletteComposite.java:1164)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.move_showFeedback(PaletteComposite.java:831)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.access$12(PaletteComposite.java:827)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure$2.mouseMove(PaletteComposite.java:793)
	at org.eclipse.wb.internal.draw2d.EventManager$4.invokeListener(EventManager.java:267)
	at org.eclipse.wb.internal.draw2d.EventManager.sendEvent(EventManager.java:205)
	at org.eclipse.wb.internal.draw2d.EventManager.handleMouseEvent(EventManager.java:191)
	at org.eclipse.wb.internal.draw2d.EventManager.mouseMove(EventManager.java:184)
	... 32 more

!ENTRY org.eclipse.ui 4 0 2018-09-26 22:43:18.244
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy20.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor164.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.wb.internal.draw2d.EventManager$8.invoke(EventManager.java:325)
	... 28 more
Caused by: java.lang.NullPointerException
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.FigureUtils.translateFigureToCanvas(FigureUtils.java:100)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.getTargetFigure(PaletteComposite.java:1167)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.access$6(PaletteComposite.java:1164)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.move_showFeedback(PaletteComposite.java:831)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.access$12(PaletteComposite.java:827)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure$2.mouseMove(PaletteComposite.java:793)
	at org.eclipse.wb.internal.draw2d.EventManager$4.invokeListener(EventManager.java:267)
	at org.eclipse.wb.internal.draw2d.EventManager.sendEvent(EventManager.java:205)
	at org.eclipse.wb.internal.draw2d.EventManager.handleMouseEvent(EventManager.java:191)
	at org.eclipse.wb.internal.draw2d.EventManager.mouseMove(EventManager.java:184)
	... 32 more

!ENTRY org.eclipse.ui 4 0 2018-09-26 22:43:18.252
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy20.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor164.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.wb.internal.draw2d.EventManager$8.invoke(EventManager.java:325)
	... 28 more
Caused by: java.lang.NullPointerException
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.FigureUtils.translateFigureToCanvas(FigureUtils.java:100)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.getTargetFigure(PaletteComposite.java:1167)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.access$6(PaletteComposite.java:1164)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.move_showFeedback(PaletteComposite.java:831)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.access$12(PaletteComposite.java:827)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure$2.mouseMove(PaletteComposite.java:793)
	at org.eclipse.wb.internal.draw2d.EventManager$4.invokeListener(EventManager.java:267)
	at org.eclipse.wb.internal.draw2d.EventManager.sendEvent(EventManager.java:205)
	at org.eclipse.wb.internal.draw2d.EventManager.handleMouseEvent(EventManager.java:191)
	at org.eclipse.wb.internal.draw2d.EventManager.mouseMove(EventManager.java:184)
	... 32 more

!ENTRY org.eclipse.ui 4 0 2018-09-26 22:43:18.260
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy20.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor164.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.wb.internal.draw2d.EventManager$8.invoke(EventManager.java:325)
	... 28 more
Caused by: java.lang.NullPointerException
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.Figure.getFigureCanvas(Figure.java:372)
	at org.eclipse.wb.draw2d.FigureUtils.translateFigureToCanvas(FigureUtils.java:100)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.getTargetFigure(PaletteComposite.java:1167)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.access$6(PaletteComposite.java:1164)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.move_showFeedback(PaletteComposite.java:831)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure.access$12(PaletteComposite.java:827)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$EntryFigure$2.mouseMove(PaletteComposite.java:793)
	at org.eclipse.wb.internal.draw2d.EventManager$4.invokeListener(EventManager.java:267)
	at org.eclipse.wb.internal.draw2d.EventManager.sendEvent(EventManager.java:205)
	at org.eclipse.wb.internal.draw2d.EventManager.handleMouseEvent(EventManager.java:191)
	at org.eclipse.wb.internal.draw2d.EventManager.mouseMove(EventManager.java:184)
	... 32 more
!SESSION 2018-09-27 07:08:33.120 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-09-27 07:08:47.953
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-09-27 09:45:34.030 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-09-27 09:46:09.646
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-09-27 18:48:15.969 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-09-27 18:48:39.767
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-09-29 21:04:16.773 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-09-29 21:04:37.508
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-09-30 16:16:37.370 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-09-30 16:17:00.736
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-09-30 22:31:01.285 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-09-30 22:31:12.331
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-01 12:39:19.263 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2018-10-01 12:39:25.501
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.egit.ui 2 0 2018-10-01 12:39:36.841
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-01 13:15:41.680 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-01 13:15:58.792
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-01 13:16:45.198 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-01 13:16:57.598
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-01 23:23:27.478 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-01 23:23:48.564
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.epp.logging.aeri.ide 2 17 2018-10-01 23:23:51.465
!MESSAGE Server ‘org.eclipse.epp.logging.aeri.ide.server’ failed with exception: Connect to dev.eclipse.org:443 [dev.eclipse.org/198.41.30.200] failed: Read timed out. ; version: 2.0.7.v20180504-0806
!STACK 0
org.apache.http.conn.ConnectTimeoutException: Connect to dev.eclipse.org:443 [dev.eclipse.org/198.41.30.200] failed: Read timed out
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:381)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:111)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.apache.http.client.fluent.Request.internalExecute(Request.java:173)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:262)
	at org.eclipse.epp.internal.logging.aeri.ide.server.mars.IO.request(IO.java:170)
	at org.eclipse.epp.internal.logging.aeri.ide.server.mars.IO.refreshConfiguration(IO.java:64)
	at org.eclipse.epp.internal.logging.aeri.ide.server.mars.ServerConnection.startUp(ServerConnection.java:124)
	at com.google.common.util.concurrent.AbstractIdleService$DelegateService$1.run(AbstractIdleService.java:62)
	at com.google.common.util.concurrent.Callables$4.run(Callables.java:122)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(Unknown Source)
	at java.net.SocketInputStream.read(Unknown Source)
	at java.net.SocketInputStream.read(Unknown Source)
	at sun.security.ssl.InputRecord.readFully(Unknown Source)
	at sun.security.ssl.InputRecord.read(Unknown Source)
	at sun.security.ssl.SSLSocketImpl.readRecord(Unknown Source)
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(Unknown Source)
	at sun.security.ssl.SSLSocketImpl.startHandshake(Unknown Source)
	at sun.security.ssl.SSLSocketImpl.startHandshake(Unknown Source)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.createLayeredSocket(SSLConnectionSocketFactory.java:396)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:355)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 17 more
!SESSION 2018-10-02 13:08:57.026 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-02 13:09:10.231
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-02 17:26:59.421 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2018-10-02 17:27:13.270
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.egit.ui 2 0 2018-10-02 17:27:29.675
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-02 20:32:49.656 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-02 20:33:05.837
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-02 21:48:33.722 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-02 21:48:45.148
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-02 21:50:30.747 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-02 21:50:41.191
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-03 12:18:19.906 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-03 12:18:47.050
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:18:47.726
!MESSAGE Connection to http://download.eclipse.org/oomph/updates/milestone/latest/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(Unknown Source)
	at java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:18:48.004
!MESSAGE Unknown Host: http://download.eclipse.org/oomph/updates/milestone/latest/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:18:48.103
!MESSAGE Connection to http://download.eclipse.org/eclipse/updates/4.9/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:18:48.349
!MESSAGE Unknown Host: http://download.eclipse.org/eclipse/updates/4.9/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:18:48.389
!MESSAGE Connection to http://download.eclipse.org/technology/epp/packages/2018-09/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:18:48.634
!MESSAGE Connection to http://download.eclipse.org/technology/epp/packages/2018-09/content.xml.xz failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:18:48.853
!MESSAGE Unknown Host: http://download.eclipse.org/technology/epp/packages/2018-09/content.xml.xz
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:18:48.868
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:18:49.103
!MESSAGE Unknown Host: http://download.eclipse.org/releases/2018-09/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:18:49.946
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/201809191002/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:18:50.150
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/201809191002/content.xml.xz failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:18:50.372
!MESSAGE Unknown Host: http://download.eclipse.org/releases/2018-09/201809191002/content.xml.xz
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2018-10-03 12:40:17.899 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-03 12:41:21.379
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:41:23.086
!MESSAGE Connection to http://download.eclipse.org/oomph/updates/milestone/latest/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(Unknown Source)
	at java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:41:23.531
!MESSAGE Unknown Host: http://download.eclipse.org/oomph/updates/milestone/latest/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:41:23.605
!MESSAGE Connection to http://download.eclipse.org/eclipse/updates/4.9/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:41:23.852
!MESSAGE Unknown Host: http://download.eclipse.org/eclipse/updates/4.9/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:41:23.884
!MESSAGE Connection to http://download.eclipse.org/technology/epp/packages/2018-09/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:41:24.157
!MESSAGE Connection to http://download.eclipse.org/technology/epp/packages/2018-09/content.xml.xz failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:41:24.383
!MESSAGE Unknown Host: http://download.eclipse.org/technology/epp/packages/2018-09/content.xml.xz
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:41:24.407
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:41:24.657
!MESSAGE Unknown Host: http://download.eclipse.org/releases/2018-09/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:41:26.379
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/201809191002/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 12:41:26.669
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/201809191002/content.xml.xz failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 12:41:26.970
!MESSAGE Unknown Host: http://download.eclipse.org/releases/2018-09/201809191002/content.xml.xz
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2018-10-03 15:27:32.185 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-03 15:28:13.880
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 15:28:15.486
!MESSAGE Connection to http://download.eclipse.org/oomph/updates/milestone/latest/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(Unknown Source)
	at java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 15:28:15.785
!MESSAGE Unknown Host: http://download.eclipse.org/oomph/updates/milestone/latest/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 15:28:15.843
!MESSAGE Connection to http://download.eclipse.org/eclipse/updates/4.9/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 15:28:16.140
!MESSAGE Unknown Host: http://download.eclipse.org/eclipse/updates/4.9/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 15:28:16.174
!MESSAGE Connection to http://download.eclipse.org/technology/epp/packages/2018-09/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 15:28:16.483
!MESSAGE Connection to http://download.eclipse.org/technology/epp/packages/2018-09/content.xml.xz failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 15:28:16.712
!MESSAGE Unknown Host: http://download.eclipse.org/technology/epp/packages/2018-09/content.xml.xz
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 15:28:16.763
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 15:28:17.121
!MESSAGE Unknown Host: http://download.eclipse.org/releases/2018-09/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 15:28:18.613
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/201809191002/p2.index failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2018-10-03 15:28:18.871
!MESSAGE Connection to http://download.eclipse.org/releases/2018-09/201809191002/content.xml.xz failed on download.eclipse.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2018-10-03 15:28:19.115
!MESSAGE Unknown Host: http://download.eclipse.org/releases/2018-09/201809191002/content.xml.xz
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1084)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1075)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1071)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2018-10-03 21:50:23.569 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-03 21:50:55.759
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-05 01:24:26.198 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-05 01:24:51.054
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.wb.core 4 4 2018-10-05 02:59:52.302
!MESSAGE Designer [1.10.0.201809061025.201810050259]: Execution flow problem. {
  initialize();
}
 expected, but {
  frame=new JFrame();
  frame.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      frameevent(e);
    }
  }
);
  frame.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    MouseEvent evt){
      mouseevent(evt);
    }
  }
);
  frame.setResizable(false);
  frame.setUndecorated(true);
  frame.setBounds(100,100,1650,1000);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  Cursor cur=new Cursor(Cursor.HAND_CURSOR);
  CardLayout cl5=new CardLayout(0,0);
  CardLayout cl4=new CardLayout(0,0);
  String[] dayarr=new String[31];
  for (int i=1; i < 32; i++) {
    dayarr[i - 1]=Integer.toString(i);
  }
  String monarr[]=new String[12];
  for (int i=1; i < 13; i++) {
    monarr[i - 1]=Integer.toString(i);
  }
  String yeararr[]=new String[78];
  for (int j=1940, k=0; j < 2018; j++, k++) {
    yeararr[k]=Integer.toString(j);
  }
  ButtonGroup btngrp1=new ButtonGroup();
  ImageIcon icon11=new ImageIcon("/java_project/src/images/VIR INSURANCE_cropped.jpg");
  frame.setIconImage(icon11.getImage());
  ButtonGroup btngrp=new ButtonGroup();
  frame.getContentPane().setLayout(null);
  JPanel panel=new JPanel();
  panel.setBounds(0,0,1650,188);
  panel.setBackground(Color.DARK_GRAY);
  frame.getContentPane().add(panel);
  panel.setLayout(null);
  JLabel lblNewLabel=new JLabel("New label");
  lblNewLabel.setIcon(new ImageIcon(main_p.class.getResource("/images/VIR INSURANCE.jpg")));
  lblNewLabel.setBounds(0,0,518,188);
  panel.add(lblNewLabel);
  JLabel lblNewLabel_2=new JLabel("resiz");
  lblNewLabel_2.setIcon(new ImageIcon(main_p.class.getResource("/images/security_agent_add_2_190x142.png")));
  lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
  lblNewLabel_2.setBounds(501,0,178,142);
  panel.add(lblNewLabel_2);
  JButton btnNewButton=new JButton("Add Agent");
  btnNewButton.setCursor(cur);
  btnNewButton.setBackground(new Color(241,57,83));
  btnNewButton.setForeground(Color.WHITE);
  btnNewButton.setBounds(501,142,178,46);
  panel.add(btnNewButton);
  JLabel label_10=new JLabel("resiz");
  label_10.setIcon(new ImageIcon(main_p.class.getResource("/images/Online_Agent_New_190x142.jpg")));
  label_10.setHorizontalAlignment(SwingConstants.CENTER);
  label_10.setBounds(701,0,178,142);
  panel.add(label_10);
  JButton btnViewagent=new JButton("View Agents");
  btnViewagent.setCursor(cur);
  btnViewagent.setForeground(Color.WHITE);
  btnViewagent.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewagent.setBackground(new Color(241,57,83));
  btnViewagent.setBounds(701,142,178,46);
  panel.add(btnViewagent);
  JPanel grandfatherpanel=new JPanel();
  grandfatherpanel.setBounds(0,189,1632,764);
  frame.getContentPane().add(grandfatherpanel);
  CardLayout cl=new CardLayout(0,0);
  grandfatherpanel.setLayout(cl);
  JPanel viewagentpanel=new JPanel();
  grandfatherpanel.add(viewagentpanel,"name_19239332734906");
  viewagentpanel.setLayout(null);
  JLabel lblagentDetails=new JLabel("<html><u>Agent Details <u><html>");
  lblagentDetails.setBounds(490,22,652,72);
  lblagentDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblagentDetails.setForeground(new Color(241,57,83));
  lblagentDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblagentDetails.setBackground(Color.WHITE);
  viewagentpanel.add(lblagentDetails);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setBounds(84,165,1480,556);
  viewagentpanel.add(scrollPane);
  table_4=new JTable();
  table_4.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  table_4.setRowHeight(50);
  scrollPane.setViewportView(table_4);
  JButton tablerefreshbtn=new JButton("Load Agent Details");
  tablerefreshbtn.setCursor(cur);
  tablerefreshbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  tablerefreshbtn.setBackground(new Color(241,57,83));
  tablerefreshbtn.setForeground(Color.WHITE);
  tablerefreshbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String tablepopulate="select * from agentinfo";
        PreparedStatement stmt=con.prepareStatement(tablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_4.setModel(DbUtils.resultSetToTableModel(rs));
        viewagentpanel.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  tablerefreshbtn.setBounds(1287,93,277,48);
  viewagentpanel.add(tablerefreshbtn);
  JPanel addagentpanel=new JPanel();
  addagentpanel.setForeground(new Color(241,57,83));
  grandfatherpanel.add(addagentpanel,"name_19239371696803");
  addagentpanel.setLayout(null);
  JLabel label=new JLabel("<html><u>Agent Details & Policies Sold<u><html>");
  label.setHorizontalAlignment(SwingConstants.CENTER);
  label.setForeground(new Color(241,57,83));
  label.setFont(new Font("Tahoma",Font.BOLD,45));
  label.setBackground(Color.WHITE);
  label.setBounds(488,13,664,98);
  addagentpanel.add(label);
  JLabel label_1=new JLabel("Name :");
  label_1.setForeground(new Color(241,57,83));
  label_1.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_1.setBounds(41,129,194,41);
  addagentpanel.add(label_1);
  nametf=new JTextField();
  nametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  nametf.setColumns(10);
  nametf.setBounds(41,169,319,41);
  addagentpanel.add(nametf);
  JLabel label_2=new JLabel("Gender :");
  label_2.setForeground(new Color(241,57,83));
  label_2.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_2.setBounds(41,242,194,41);
  addagentpanel.add(label_2);
  JLabel label_3=new JLabel("Date Of Birth :");
  label_3.setForeground(new Color(241,57,83));
  label_3.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_3.setBounds(41,363,194,41);
  addagentpanel.add(label_3);
  JLabel label_4=new JLabel("Address :");
  label_4.setForeground(new Color(241,57,83));
  label_4.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_4.setBounds(41,483,194,41);
  addagentpanel.add(label_4);
  JRadioButton malerd=new JRadioButton("Male");
  malerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent malerdevent){
      malerdbtn();
    }
  }
);
  malerd.setForeground(Color.DARK_GRAY);
  malerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerd.setBounds(41,290,142,41);
  addagentpanel.add(malerd);
  JRadioButton femalerd=new JRadioButton("Female");
  femalerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleevent){
      femalerdbtn();
    }
  }
);
  femalerd.setForeground(Color.DARK_GRAY);
  femalerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerd.setBounds(206,290,142,41);
  addagentpanel.add(femalerd);
  JComboBox datecb=new JComboBox(dayarr);
  datecb.setBounds(41,415,70,41);
  addagentpanel.add(datecb);
  JComboBox monthcb=new JComboBox(monarr);
  monthcb.setBounds(137,415,70,41);
  addagentpanel.add(monthcb);
  JComboBox yearcb=new JComboBox(yeararr);
  yearcb.setBounds(229,415,103,41);
  addagentpanel.add(yearcb);
  JTextArea addressta=new JTextArea();
  addressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  addressta.setBounds(41,535,319,165);
  addagentpanel.add(addressta);
  JLabel label_5=new JLabel("Work Experience (Yrs) :");
  label_5.setForeground(new Color(241,57,83));
  label_5.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_5.setBounds(488,129,295,41);
  addagentpanel.add(label_5);
  worketf=new JTextField();
  worketf.setFont(new Font("Tahoma",Font.PLAIN,17));
  worketf.setColumns(10);
  worketf.setBounds(488,169,319,41);
  addagentpanel.add(worketf);
  JLabel lblTelephone=new JLabel("Telephone :");
  lblTelephone.setForeground(new Color(241,57,83));
  lblTelephone.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblTelephone.setBounds(488,252,194,41);
  addagentpanel.add(lblTelephone);
  mobiletf=new JTextField();
  mobiletf.setFont(new Font("Tahoma",Font.PLAIN,17));
  mobiletf.setColumns(10);
  mobiletf.setBounds(488,291,319,41);
  addagentpanel.add(mobiletf);
  JLabel label_7=new JLabel("Email :");
  label_7.setForeground(new Color(241,57,83));
  label_7.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_7.setBounds(488,374,194,41);
  addagentpanel.add(label_7);
  emailtf=new JTextField();
  emailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  emailtf.setColumns(10);
  emailtf.setBounds(488,412,319,41);
  addagentpanel.add(emailtf);
  JLabel label_8=new JLabel("Policy Details");
  label_8.setHorizontalAlignment(SwingConstants.CENTER);
  label_8.setForeground(new Color(241,57,83));
  label_8.setFont(new Font("Tahoma",Font.BOLD,35));
  label_8.setBounds(1015,99,310,53);
  addagentpanel.add(label_8);
  JPanel insurancespanel=new JPanel();
  insurancespanel.setLayout(null);
  insurancespanel.setForeground(Color.WHITE);
  insurancespanel.setBounds(890,169,231,198);
  addagentpanel.add(insurancespanel);
  JButton button_1=new JButton("Child Plan Insurance");
  button_1.setCursor(cur);
  button_1.setForeground(Color.WHITE);
  button_1.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_1.setBackground(new Color(241,57,83));
  button_1.setBounds(0,79,231,42);
  insurancespanel.add(button_1);
  JButton button_2=new JButton("Whole Life Insurance");
  button_2.setCursor(cur);
  button_2.setForeground(Color.WHITE);
  button_2.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_2.setBackground(new Color(241,57,83));
  button_2.setBounds(0,156,231,42);
  insurancespanel.add(button_2);
  JButton btnTermLifeInsurance=new JButton("Term Life Insurance");
  btnTermLifeInsurance.setCursor(cur);
  btnTermLifeInsurance.setForeground(Color.WHITE);
  btnTermLifeInsurance.setFont(new Font("Tahoma",Font.PLAIN,15));
  btnTermLifeInsurance.setBackground(new Color(241,57,83));
  btnTermLifeInsurance.setBounds(0,0,231,42);
  insurancespanel.add(btnTermLifeInsurance);
  JPanel parentpanel=new JPanel();
  parentpanel.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanel.setBounds(1150,170,434,480);
  addagentpanel.add(parentpanel);
  CardLayout cl3=new CardLayout(0,0);
  parentpanel.setLayout(cl3);
  JPanel lifelinsurancepanel=new JPanel();
  parentpanel.add(lifelinsurancepanel,"name_131091957135037");
  lifelinsurancepanel.setLayout(null);
  JLabel lblWholeLife=new JLabel("* Whole Life Insurance is selected.");
  lblWholeLife.setForeground(new Color(241,57,83));
  lblWholeLife.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblWholeLife.setBackground(Color.WHITE);
  lblWholeLife.setBounds(0,420,430,56);
  lifelinsurancepanel.add(lblWholeLife);
  JPanel childinsurancepanel=new JPanel();
  parentpanel.add(childinsurancepanel,"name_130839478752224");
  childinsurancepanel.setLayout(null);
  JPanel terminsurancepanel=new JPanel();
  parentpanel.add(terminsurancepanel,"name_130515214938554");
  terminsurancepanel.setLayout(null);
  JPanel redundantpanel2=new JPanel();
  parentpanel.add(redundantpanel2,"name_63847240216221");
  cl3.show(parentpanel,"name_63847240216221");
  JComboBox datecb1=new JComboBox(dayarr);
  datecb1.setBounds(488,516,70,41);
  addagentpanel.add(datecb1);
  JComboBox monthcb1=new JComboBox(monarr);
  monthcb1.setBounds(585,516,70,41);
  addagentpanel.add(monthcb1);
  JComboBox yearcb1=new JComboBox(yeararr);
  yearcb1.setBounds(680,516,103,41);
  addagentpanel.add(yearcb1);
  JLabel label_9=new JLabel("Date Of Joining :");
  label_9.setForeground(new Color(241,57,83));
  label_9.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_9.setBounds(488,464,194,41);
  addagentpanel.add(label_9);
  String column[]={"AGE","TERM","SUM ASSURESD","PREMIMUM"};
  String data[][]={{"AGE","TERM","SUM ASSURESD","PREMIMUM"},{"25 Years","40 Years","Rs . 1 Cr."," Rs . 10,500"},{"35 Years","30 Years","Rs . 25 Lakhs","Rs . 8,800"}};
  String column1[]={"TERM","SUM ASSURED","PREMIUM"};
  String data1[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.3 Lakhs","Rs.10,000"},{"35 Years","Rs.4 Lakhs","Rs.18,000"}};
  String column2[]={"TERM","SUM ASSURED","PREMIUM"};
  String data2[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.18 Lakhs","Rs.1 Lakh"},{"35 Years","Rs.40 Lakhs","Rs.4 Lakhs"}};
  table_3=new JTable();
  table_3.setRowHeight(210);
  table_3.setBounds(0,0,430,420);
  lifelinsurancepanel.add(table_3);
  table=new JTable();
  table.setBounds(0,0,430,420);
  table.setRowHeight(210);
  terminsurancepanel.add(table);
  JLabel lblNewLabel_1=new JLabel("* Term Life Insurance is selected.");
  lblNewLabel_1.setForeground(new Color(241,57,83));
  lblNewLabel_1.setBackground(Color.WHITE);
  lblNewLabel_1.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblNewLabel_1.setBounds(0,420,430,56);
  terminsurancepanel.add(lblNewLabel_1);
  table_2=new JTable();
  table_2.setBounds(0,0,430,420);
  table_2.setRowHeight(210);
  childinsurancepanel.add(table_2);
  JLabel lblChildPlan=new JLabel("* Child Plan Insurance is selected.");
  lblChildPlan.setForeground(new Color(241,57,83));
  lblChildPlan.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblChildPlan.setBackground(Color.WHITE);
  lblChildPlan.setBounds(0,420,430,56);
  childinsurancepanel.add(lblChildPlan);
  JLabel lblAgentId=new JLabel("Agent ID :");
  lblAgentId.setForeground(new Color(241,57,83));
  lblAgentId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblAgentId.setBounds(488,568,194,41);
  addagentpanel.add(lblAgentId);
  aidtf=new JTextField();
  aidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  aidtf.setColumns(10);
  aidtf.setBounds(488,620,319,41);
  addagentpanel.add(aidtf);
  JButton submitbtn=new JButton("SUBMIT");
  submitbtn.setCursor(cur);
  submitbtn.setForeground(Color.WHITE);
  submitbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  submitbtn.setBackground(new Color(241,57,83));
  submitbtn.setBounds(532,687,231,42);
  addagentpanel.add(submitbtn);
  CardLayout cl2=new CardLayout(0,0);
  JPanel panel_1=new JPanel();
  panel_1.setBounds(890,687,461,53);
  addagentpanel.add(panel_1);
  panel_1.setLayout(cl2);
  JPanel panel_3=new JPanel();
  panel_1.add(panel_3,"name_11001346500172");
  panel_3.setLayout(null);
  JLabel lblNewLabel_3=new JLabel("* Agent details have been submitted.");
  lblNewLabel_3.setForeground(new Color(241,57,83));
  lblNewLabel_3.setFont(new Font("Tahoma",Font.BOLD,17));
  lblNewLabel_3.setBounds(0,0,451,53);
  panel_3.add(lblNewLabel_3);
  JPanel panel_4=new JPanel();
  panel_1.add(panel_4,"name_11082648641670");
  cl2.show(panel_1,"name_11082648641670");
  JLabel warninglabel=new JLabel("(8 Digit Number)");
  warninglabel.setForeground(new Color(241,57,83));
  warninglabel.setFont(new Font("Tahoma",Font.PLAIN,14));
  warninglabel.setBounds(488,336,224,20);
  addagentpanel.add(warninglabel);
  JPanel buttonpanel=new JPanel();
  buttonpanel.setBounds(890,415,231,218);
  addagentpanel.add(buttonpanel);
  buttonpanel.setLayout(new CardLayout(0,0));
  JPanel cibtnpanel=new JPanel();
  buttonpanel.add(cibtnpanel,"name_94240132484303");
  cibtnpanel.setLayout(null);
  JPanel tibtnpanel=new JPanel();
  buttonpanel.add(tibtnpanel,"name_94280454630953");
  JPanel libtnpanel=new JPanel();
  buttonpanel.add(libtnpanel,"name_94295818881193");
  JPanel redundantpanel=new JPanel();
  grandfatherpanel.add(redundantpanel,"name_19239387057142");
  JPanel addcustomerpanel=new JPanel();
  addcustomerpanel.setForeground(Color.WHITE);
  grandfatherpanel.add(addcustomerpanel,"name_19239433071790");
  addcustomerpanel.setLayout(null);
  JLabel label_11=new JLabel("Name :");
  label_11.setForeground(new Color(241,57,83));
  label_11.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_11.setBounds(34,206,194,41);
  addcustomerpanel.add(label_11);
  JLabel lblcustomerDetails=new JLabel("<html><u>Customer Details<u><html>");
  lblcustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblcustomerDetails.setForeground(new Color(241,57,83));
  lblcustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcustomerDetails.setBackground(Color.WHITE);
  lblcustomerDetails.setBounds(532,0,664,98);
  addcustomerpanel.add(lblcustomerDetails);
  cnametf=new JTextField();
  cnametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cnametf.setColumns(10);
  cnametf.setBounds(34,249,319,41);
  addcustomerpanel.add(cnametf);
  JLabel label_12=new JLabel("Gender :");
  label_12.setForeground(new Color(241,57,83));
  label_12.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_12.setBounds(34,314,194,41);
  addcustomerpanel.add(label_12);
  JRadioButton malerdbtn1=new JRadioButton("Male");
  malerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent maleactionc){
      malerdbtn1();
    }
  }
);
  malerdbtn1.setForeground(Color.DARK_GRAY);
  malerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerdbtn1.setBounds(34,348,142,41);
  addcustomerpanel.add(malerdbtn1);
  JRadioButton femalerdbtn1=new JRadioButton("Female");
  femalerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleaction1){
      femalerdbtn1();
    }
  }
);
  femalerdbtn1.setForeground(Color.DARK_GRAY);
  femalerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerdbtn1.setBounds(195,348,142,41);
  addcustomerpanel.add(femalerdbtn1);
  btngrp1.add(malerdbtn1);
  btngrp1.add(femalerdbtn1);
  JLabel label_13=new JLabel("Date Of Birth :");
  label_13.setForeground(new Color(241,57,83));
  label_13.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_13.setBounds(34,390,194,41);
  addcustomerpanel.add(label_13);
  JComboBox cdatecb=new JComboBox(dayarr);
  cdatecb.setBounds(34,444,70,41);
  addcustomerpanel.add(cdatecb);
  JComboBox cmonthcb=new JComboBox(monarr);
  cmonthcb.setBounds(131,444,70,41);
  addcustomerpanel.add(cmonthcb);
  JComboBox cyearcb=new JComboBox(yeararr);
  cyearcb.setBounds(222,444,103,41);
  addcustomerpanel.add(cyearcb);
  JLabel label_14=new JLabel("Address :");
  label_14.setForeground(new Color(241,57,83));
  label_14.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_14.setBounds(34,498,194,41);
  addcustomerpanel.add(label_14);
  JTextArea caddressta=new JTextArea();
  caddressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  caddressta.setBounds(34,537,319,165);
  addcustomerpanel.add(caddressta);
  JLabel label_15=new JLabel("Telephone :");
  label_15.setForeground(new Color(241,57,83));
  label_15.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_15.setBounds(438,113,194,41);
  addcustomerpanel.add(label_15);
  cmobtf=new JTextField();
  cmobtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cmobtf.setColumns(10);
  cmobtf.setBounds(438,152,319,41);
  addcustomerpanel.add(cmobtf);
  JLabel label_16=new JLabel("Email :");
  label_16.setForeground(new Color(241,57,83));
  label_16.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_16.setBounds(438,236,194,41);
  addcustomerpanel.add(label_16);
  cemailtf=new JTextField();
  cemailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cemailtf.setColumns(10);
  cemailtf.setBounds(438,274,319,41);
  addcustomerpanel.add(cemailtf);
  JLabel lblSalary=new JLabel("Salary :");
  lblSalary.setForeground(new Color(241,57,83));
  lblSalary.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblSalary.setBounds(438,346,194,41);
  addcustomerpanel.add(lblSalary);
  csalarytf=new JTextField();
  csalarytf.setFont(new Font("Tahoma",Font.PLAIN,17));
  csalarytf.setColumns(10);
  csalarytf.setBounds(438,384,319,41);
  addcustomerpanel.add(csalarytf);
  JLabel lblEnterYourAgent=new JLabel("Enter Your Agent ID :");
  lblEnterYourAgent.setForeground(new Color(241,57,83));
  lblEnterYourAgent.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblEnterYourAgent.setBounds(438,466,319,41);
  addcustomerpanel.add(lblEnterYourAgent);
  caidtf=new JTextField();
  caidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  caidtf.setColumns(10);
  caidtf.setBounds(438,510,319,41);
  addcustomerpanel.add(caidtf);
  JButton btnCheckInsurance=new JButton("Check Insurance");
  btnCheckInsurance.setCursor(cur);
  btnCheckInsurance.setForeground(Color.WHITE);
  btnCheckInsurance.setFont(new Font("Tahoma",Font.BOLD,20));
  btnCheckInsurance.setBackground(new Color(241,57,83));
  btnCheckInsurance.setBounds(438,576,319,55);
  addcustomerpanel.add(btnCheckInsurance);
  JPanel parentpanelc=new JPanel();
  parentpanelc.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanelc.setBounds(897,152,689,540);
  addcustomerpanel.add(parentpanelc);
  parentpanelc.setLayout(cl4);
  JPanel tinsurancepanel=new JPanel();
  parentpanelc.add(tinsurancepanel,"name_73735057972235");
  tinsurancepanel.setLayout(null);
  JScrollPane scrollPane_3=new JScrollPane();
  scrollPane_3.setBounds(0,0,685,466);
  tinsurancepanel.add(scrollPane_3);
  tinsurancetable=new JTable();
  scrollPane_3.setViewportView(tinsurancetable);
  JLabel tinsurancelabel=new JLabel("* Term Insurance has been selected.");
  tinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  tinsurancelabel.setForeground(new Color(241,57,83));
  tinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  tinsurancelabel.setBounds(0,466,685,70);
  tinsurancepanel.add(tinsurancelabel);
  JPanel cinsurancepanel=new JPanel();
  parentpanelc.add(cinsurancepanel,"name_73791843709339");
  cinsurancepanel.setLayout(null);
  JScrollPane scrollPane_2=new JScrollPane();
  scrollPane_2.setBounds(0,0,685,466);
  cinsurancepanel.add(scrollPane_2);
  cinsurancetable=new JTable();
  scrollPane_2.setViewportView(cinsurancetable);
  JLabel cinsurancelabel=new JLabel("* Child Plan Insurance has been selected.");
  cinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  cinsurancelabel.setForeground(new Color(241,57,83));
  cinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  cinsurancelabel.setBounds(0,466,685,70);
  cinsurancepanel.add(cinsurancelabel);
  JPanel winsurancepanel=new JPanel();
  parentpanelc.add(winsurancepanel,"name_73812949494419");
  winsurancepanel.setLayout(null);
  JScrollPane scrollPane_1=new JScrollPane();
  scrollPane_1.setBounds(0,0,685,466);
  winsurancepanel.add(scrollPane_1);
  winsurancetable=new JTable();
  scrollPane_1.setViewportView(winsurancetable);
  JLabel lblWholeLife_1=new JLabel("* Whole Life Insurance has been selected.");
  lblWholeLife_1.setHorizontalAlignment(SwingConstants.CENTER);
  lblWholeLife_1.setForeground(new Color(241,57,83));
  lblWholeLife_1.setFont(new Font("Tahoma",Font.ITALIC,20));
  lblWholeLife_1.setBounds(0,466,685,70);
  winsurancepanel.add(lblWholeLife_1);
  JPanel credundantpanel=new JPanel();
  parentpanelc.add(credundantpanel,"name_73862456257256");
  cl4.show(parentpanelc,"name_73862456257256");
  JButton btnSubmitDetails=new JButton("Submit Details");
  btnSubmitDetails.setCursor(cur);
  btnSubmitDetails.setForeground(Color.WHITE);
  btnSubmitDetails.setFont(new Font("Tahoma",Font.BOLD,20));
  btnSubmitDetails.setBackground(new Color(241,57,83));
  btnSubmitDetails.setBounds(438,662,319,55);
  addcustomerpanel.add(btnSubmitDetails);
  JLabel lblCustomerId=new JLabel("Customer ID :");
  lblCustomerId.setForeground(new Color(241,57,83));
  lblCustomerId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblCustomerId.setBounds(34,113,194,41);
  addcustomerpanel.add(lblCustomerId);
  ccidtf=new JTextField();
  ccidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  ccidtf.setColumns(10);
  ccidtf.setBounds(34,152,319,41);
  addcustomerpanel.add(ccidtf);
  JPanel messagedisplaypanel=new JPanel();
  messagedisplaypanel.setBounds(897,706,508,31);
  addcustomerpanel.add(messagedisplaypanel);
  messagedisplaypanel.setLayout(cl5);
  JPanel messagedisplay=new JPanel();
  messagedisplaypanel.add(messagedisplay,"name_4659622588556");
  messagedisplay.setLayout(null);
  JLabel lblNewLabel_4=new JLabel("* Details have been submitted.");
  lblNewLabel_4.setFont(new Font("Tahoma",Font.PLAIN,17));
  lblNewLabel_4.setForeground(new Color(241,57,83));
  lblNewLabel_4.setBounds(0,0,508,29);
  messagedisplay.add(lblNewLabel_4);
  JPanel messageredundantpanel=new JPanel();
  messagedisplaypanel.add(messageredundantpanel,"name_4667681966752");
  cl5.show(messagedisplaypanel,"name_4667681966752");
  cl.show(grandfatherpanel,"name_19239387057142");
  JPanel viewcustomerpanel=new JPanel();
  grandfatherpanel.add(viewcustomerpanel,"name_7105952272002");
  viewcustomerpanel.setLayout(null);
  JScrollPane scrollPane_4=new JScrollPane();
  scrollPane_4.setBounds(26,150,1575,585);
  viewcustomerpanel.add(scrollPane_4);
  custdetailstb=new JTable();
  custdetailstb.setRowHeight(50);
  scrollPane_4.setViewportView(custdetailstb);
  custdetailstb.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  JLabel lblviewCustomerDetails=new JLabel("<html><u>View Customer Details<u><html>");
  lblviewCustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblviewCustomerDetails.setForeground(new Color(241,57,83));
  lblviewCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblviewCustomerDetails.setBackground(Color.WHITE);
  lblviewCustomerDetails.setBounds(481,0,664,98);
  viewcustomerpanel.add(lblviewCustomerDetails);
  JButton btnLoadCustomerDetails=new JButton("Load Customer Details");
  btnLoadCustomerDetails.setCursor(cur);
  btnLoadCustomerDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent loadcustdetails){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from customerinfo";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        custdetailstb.setModel(DbUtils.resultSetToTableModel(rs));
        viewcustomerpanel.revalidate();
        frame.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  btnLoadCustomerDetails.setForeground(Color.WHITE);
  btnLoadCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,15));
  btnLoadCustomerDetails.setBackground(new Color(241,57,83));
  btnLoadCustomerDetails.setBounds(1271,85,277,48);
  viewcustomerpanel.add(btnLoadCustomerDetails);
  JPanel contactuspanel=new JPanel();
  grandfatherpanel.add(contactuspanel,"name_38683474436453");
  contactuspanel.setLayout(null);
  JLabel lblcontactUss=new JLabel("<html><u>Contact Us<u><html>");
  lblcontactUss.setHorizontalAlignment(SwingConstants.CENTER);
  lblcontactUss.setForeground(new Color(241,57,83));
  lblcontactUss.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcontactUss.setBackground(Color.WHITE);
  lblcontactUss.setBounds(497,0,664,98);
  contactuspanel.add(lblcontactUss);
  JButton btnNewButton_2=new JButton("");
  btnNewButton_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.gmail.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_2.setIcon(new ImageIcon(main_p.class.getResource("/images/2000px-New_Logo_Gmail.svg_99x87.png")));
  btnNewButton_2.setBounds(74,119,105,87);
  contactuspanel.add(btnNewButton_2);
  JButton button_3=new JButton("");
  button_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.twitter.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_3.setBackground(Color.WHITE);
  button_3.setIcon(new ImageIcon(main_p.class.getResource("/images/dezeen_twitter-bird_99x87.gif")));
  button_3.setBounds(74,255,105,87);
  contactuspanel.add(button_3);
  JButton button_4=new JButton("");
  button_4.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.facebook.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_4.setIcon(new ImageIcon(main_p.class.getResource("/images/flogo_rgb_hex-brc-site-250_99x87.png")));
  button_4.setBackground(Color.WHITE);
  button_4.setBounds(74,386,105,87);
  contactuspanel.add(button_4);
  JButton button_5=new JButton("");
  button_5.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.shahandanchor.com/home/");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_5.setIcon(new ImageIcon(main_p.class.getResource("/images/Shah-And-Anchor-Kutchhi-Engineering-College_99x87.jpg")));
  button_5.setBackground(Color.WHITE);
  button_5.setBounds(74,513,105,87);
  contactuspanel.add(button_5);
  JPanel panel_6=new JPanel();
  panel_6.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  panel_6.setBounds(234,119,969,439);
  contactuspanel.add(panel_6);
  panel_6.setLayout(null);
  JButton btnNewButton_3=new JButton("New button");
  btnNewButton_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("https://www.google.com/maps/place/Shah+%26+Anchor+Kutchhi+Engineering+College/@19.048219,72.91165,14z/data=!4m5!3m4!1s0x0:0x9ebbdeaea9ec24ae!8m2!3d19.0482157!4d72.9116581?hl=en");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_3.setIcon(new ImageIcon(main_p.class.getResource("/images/Screenshot_2018-10-03 Contact Us - SAKEC-Shah Anchor Kutchhi Engineering College.png")));
  btnNewButton_3.setBounds(10,55,950,328);
  panel_6.add(btnNewButton_3);
  JLabel lblNewLabel_7=new JLabel("<html>Postal Address<br/>\r\n\r\nShah & Anchor Kutchhi Engineering College\r\n\r\nMahavir Education Trust\u2019s Chowk,<br/> Waman Tukaram Patil Marg,<br/> Next to Dukes Co.,<br/> Chembur, Mumbai \u2013 400 088.\r\n<br/>\r\n<br/><br/><br/>\r\nContact Details\r\n\r\n<br/>Contact-No: 022-25580854\r\n\r\n<br/>Fax-No:25568100\r\n\r\n<br/>Email-Id: info@sakec.ac.in </html>");
  lblNewLabel_7.setVerticalAlignment(SwingConstants.TOP);
  lblNewLabel_7.setFont(new Font("Tahoma",Font.BOLD,20));
  lblNewLabel_7.setForeground(new Color(241,57,83));
  lblNewLabel_7.setBounds(1228,119,374,439);
  contactuspanel.add(lblNewLabel_7);
  btnTermLifeInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      cl3.show(parentpanel,"name_130515214938554");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Term Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      frame.revalidate();
      parentpanel.revalidate();
      insurance1();
    }
  }
);
  button_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event3){
      cl3.show(parentpanel,"name_131091957135037");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Whole Life Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance3();
    }
  }
);
  button_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event2){
      cl3.show(parentpanel,"name_130839478752224");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Child Plan Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance2();
    }
  }
);
  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,16));
  JLabel label_6=new JLabel("resiz");
  label_6.setIcon(new ImageIcon(main_p.class.getResource("/images/Customer_Female_Add_190x142.jpg")));
  label_6.setHorizontalAlignment(SwingConstants.CENTER);
  label_6.setBounds(900,0,178,142);
  panel.add(label_6);
  JButton btnAddCustomer=new JButton("Add Customer");
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent customeraddevent){
      cl.show(grandfatherpanel,"name_19239433071790");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnAddCustomer.setForeground(Color.WHITE);
  btnAddCustomer.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.setBackground(new Color(241,57,83));
  btnAddCustomer.setBounds(900,142,178,46);
  panel.add(btnAddCustomer);
  JButton btnViewCustomers=new JButton("View Customers");
  btnViewCustomers.setCursor(cur);
  btnViewCustomers.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e7){
      cl.show(grandfatherpanel,"name_7105952272002");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewCustomers.setForeground(Color.WHITE);
  btnViewCustomers.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewCustomers.setBackground(new Color(241,57,83));
  btnViewCustomers.setBounds(1102,142,178,46);
  panel.add(btnViewCustomers);
  JPanel panel_2=new JPanel();
  panel_2.setBounds(1102,0,178,142);
  panel.add(panel_2);
  panel_2.setLayout(null);
  JLabel lblNewLabel_5=new JLabel("New label");
  lblNewLabel_5.setIcon(new ImageIcon(main_p.class.getResource("/images/User_info_man_male_profile_information_190x142.png")));
  lblNewLabel_5.setBounds(0,0,178,142);
  panel_2.add(lblNewLabel_5);
  JButton btnNewButton_1=new JButton("X");
  btnNewButton_1.setCursor(cur);
  btnNewButton_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent exitevent){
      frameexit=new JFrame("Exit");
      if (JOptionPane.showConfirmDialog(frameexit,"Confirm if you want to exit","Login Systems",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        System.exit(0);
      }
    }
  }
);
  btnNewButton_1.setFont(new Font("Tahoma",Font.BOLD,17));
  btnNewButton_1.setBackground(Color.DARK_GRAY);
  btnNewButton_1.setForeground(Color.RED);
  btnNewButton_1.setBounds(1582,0,68,29);
  panel.add(btnNewButton_1);
  JButton button=new JButton("---");
  button.setCursor(cur);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent minimizeevent){
      frame.setState(JFrame.ICONIFIED);
    }
  }
);
  button.setForeground(Color.RED);
  button.setFont(new Font("Tahoma",Font.BOLD,19));
  button.setBackground(Color.DARK_GRAY);
  button.setBounds(1504,0,68,29);
  panel.add(button);
  JPanel panel_5=new JPanel();
  panel_5.setLayout(null);
  panel_5.setBounds(1304,0,178,142);
  panel.add(panel_5);
  JLabel label_17=new JLabel("New label");
  label_17.setIcon(new ImageIcon(main_p.class.getResource("/images/guy_190x142.png")));
  label_17.setBounds(0,0,178,142);
  panel_5.add(label_17);
  JButton btnContactUs=new JButton("Contact Us");
  btnContactUs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_38683474436453");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnContactUs.setForeground(Color.WHITE);
  btnContactUs.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnContactUs.setBackground(new Color(241,57,83));
  btnContactUs.setBounds(1304,142,178,46);
  panel.add(btnContactUs);
  btnNewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_19239371696803");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  submitbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitevent){
      if (genderval == 1) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Male");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      if (genderval == 2) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)  ";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Female");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      nametf.setText(null);
      yearcb.setSelectedIndex(0);
      monthcb.setSelectedIndex(0);
      datecb.setSelectedIndex(0);
      yearcb1.setSelectedIndex(0);
      monthcb1.setSelectedIndex(0);
      datecb1.setSelectedIndex(0);
      addressta.setText(null);
      mobiletf.setText(null);
      emailtf.setText(null);
      worketf.setText(null);
      aidtf.setText(null);
      cl2.show(panel_1,"name_11001346500172");
      panel_1.revalidate();
      addagentpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewagent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent viewagentevent){
      cl.show(grandfatherpanel,"name_19239332734906");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnCheckInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent checkinevent){
      String ans=caidtf.getText();
      int id=Integer.parseInt(ans);
      try {
        String insurancetype=null;
        Connection conn3=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        PreparedStatement stmt=conn3.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
        stmt.setInt(1,id);
        ResultSet rs=stmt.executeQuery();
        while (rs.next()) {
          insurancetype=rs.getString(1);
        }
        if (insurancetype.equals("Term Insurance")) {
          cl4.show(parentpanelc,"name_73735057972235");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from terminsurance");
          ResultSet rs1=stmt2.executeQuery();
          tinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          tinsurancetable.setRowHeight(225);
          tinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Child Plan Insurance")) {
          cl4.show(parentpanelc,"name_73791843709339");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from childinsurance");
          ResultSet rs1=stmt2.executeQuery();
          cinsurancetable.setRowHeight(225);
          cinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          cinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Whole Life Insurance")) {
          cl4.show(parentpanelc,"name_73812949494419");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from lifeinsurance");
          ResultSet rs1=stmt2.executeQuery();
          winsurancetable.setRowHeight(225);
          winsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          winsurancepanel.revalidate();
        }
      }
 catch (      Exception checkexception) {
        System.out.println(checkexception);
      }
    }
  }
);
  btnSubmitDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitaction){
      if (cgenderval == 1) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Male");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      if (cgenderval == 2) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?++)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Female");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      cnametf.setText(null);
      cyearcb.setSelectedIndex(0);
      cmonthcb.setSelectedIndex(0);
      cdatecb.setSelectedIndex(0);
      caddressta.setText(null);
      cmobtf.setText(null);
      ccidtf.setText(null);
      cemailtf.setText(null);
      caidtf.setText(null);
      csalarytf.setText(null);
      cl5.show(messagedisplaypanel,"name_4659622588556");
      addcustomerpanel.revalidate();
      frame.revalidate();
    }
  }
);
  frame.getContentPane().setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{panel,lblNewLabel}));
  frame.revalidate();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  initialize();
}
 expected, but {
  frame=new JFrame();
  frame.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      frameevent(e);
    }
  }
);
  frame.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    MouseEvent evt){
      mouseevent(evt);
    }
  }
);
  frame.setResizable(false);
  frame.setUndecorated(true);
  frame.setBounds(100,100,1650,1000);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  Cursor cur=new Cursor(Cursor.HAND_CURSOR);
  CardLayout cl5=new CardLayout(0,0);
  CardLayout cl4=new CardLayout(0,0);
  String[] dayarr=new String[31];
  for (int i=1; i < 32; i++) {
    dayarr[i - 1]=Integer.toString(i);
  }
  String monarr[]=new String[12];
  for (int i=1; i < 13; i++) {
    monarr[i - 1]=Integer.toString(i);
  }
  String yeararr[]=new String[78];
  for (int j=1940, k=0; j < 2018; j++, k++) {
    yeararr[k]=Integer.toString(j);
  }
  ButtonGroup btngrp1=new ButtonGroup();
  ImageIcon icon11=new ImageIcon("/java_project/src/images/VIR INSURANCE_cropped.jpg");
  frame.setIconImage(icon11.getImage());
  ButtonGroup btngrp=new ButtonGroup();
  frame.getContentPane().setLayout(null);
  JPanel panel=new JPanel();
  panel.setBounds(0,0,1650,188);
  panel.setBackground(Color.DARK_GRAY);
  frame.getContentPane().add(panel);
  panel.setLayout(null);
  JLabel lblNewLabel=new JLabel("New label");
  lblNewLabel.setIcon(new ImageIcon(main_p.class.getResource("/images/VIR INSURANCE.jpg")));
  lblNewLabel.setBounds(0,0,518,188);
  panel.add(lblNewLabel);
  JLabel lblNewLabel_2=new JLabel("resiz");
  lblNewLabel_2.setIcon(new ImageIcon(main_p.class.getResource("/images/security_agent_add_2_190x142.png")));
  lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
  lblNewLabel_2.setBounds(501,0,178,142);
  panel.add(lblNewLabel_2);
  JButton btnNewButton=new JButton("Add Agent");
  btnNewButton.setCursor(cur);
  btnNewButton.setBackground(new Color(241,57,83));
  btnNewButton.setForeground(Color.WHITE);
  btnNewButton.setBounds(501,142,178,46);
  panel.add(btnNewButton);
  JLabel label_10=new JLabel("resiz");
  label_10.setIcon(new ImageIcon(main_p.class.getResource("/images/Online_Agent_New_190x142.jpg")));
  label_10.setHorizontalAlignment(SwingConstants.CENTER);
  label_10.setBounds(701,0,178,142);
  panel.add(label_10);
  JButton btnViewagent=new JButton("View Agents");
  btnViewagent.setCursor(cur);
  btnViewagent.setForeground(Color.WHITE);
  btnViewagent.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewagent.setBackground(new Color(241,57,83));
  btnViewagent.setBounds(701,142,178,46);
  panel.add(btnViewagent);
  JPanel grandfatherpanel=new JPanel();
  grandfatherpanel.setBounds(0,189,1632,764);
  frame.getContentPane().add(grandfatherpanel);
  CardLayout cl=new CardLayout(0,0);
  grandfatherpanel.setLayout(cl);
  JPanel viewagentpanel=new JPanel();
  grandfatherpanel.add(viewagentpanel,"name_19239332734906");
  viewagentpanel.setLayout(null);
  JLabel lblagentDetails=new JLabel("<html><u>Agent Details <u><html>");
  lblagentDetails.setBounds(490,22,652,72);
  lblagentDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblagentDetails.setForeground(new Color(241,57,83));
  lblagentDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblagentDetails.setBackground(Color.WHITE);
  viewagentpanel.add(lblagentDetails);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setBounds(84,165,1480,556);
  viewagentpanel.add(scrollPane);
  table_4=new JTable();
  table_4.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  table_4.setRowHeight(50);
  scrollPane.setViewportView(table_4);
  JButton tablerefreshbtn=new JButton("Load Agent Details");
  tablerefreshbtn.setCursor(cur);
  tablerefreshbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  tablerefreshbtn.setBackground(new Color(241,57,83));
  tablerefreshbtn.setForeground(Color.WHITE);
  tablerefreshbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String tablepopulate="select * from agentinfo";
        PreparedStatement stmt=con.prepareStatement(tablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_4.setModel(DbUtils.resultSetToTableModel(rs));
        viewagentpanel.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  tablerefreshbtn.setBounds(1287,93,277,48);
  viewagentpanel.add(tablerefreshbtn);
  JPanel addagentpanel=new JPanel();
  addagentpanel.setForeground(new Color(241,57,83));
  grandfatherpanel.add(addagentpanel,"name_19239371696803");
  addagentpanel.setLayout(null);
  JLabel label=new JLabel("<html><u>Agent Details & Policies Sold<u><html>");
  label.setHorizontalAlignment(SwingConstants.CENTER);
  label.setForeground(new Color(241,57,83));
  label.setFont(new Font("Tahoma",Font.BOLD,45));
  label.setBackground(Color.WHITE);
  label.setBounds(488,13,664,98);
  addagentpanel.add(label);
  JLabel label_1=new JLabel("Name :");
  label_1.setForeground(new Color(241,57,83));
  label_1.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_1.setBounds(41,129,194,41);
  addagentpanel.add(label_1);
  nametf=new JTextField();
  nametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  nametf.setColumns(10);
  nametf.setBounds(41,169,319,41);
  addagentpanel.add(nametf);
  JLabel label_2=new JLabel("Gender :");
  label_2.setForeground(new Color(241,57,83));
  label_2.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_2.setBounds(41,242,194,41);
  addagentpanel.add(label_2);
  JLabel label_3=new JLabel("Date Of Birth :");
  label_3.setForeground(new Color(241,57,83));
  label_3.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_3.setBounds(41,363,194,41);
  addagentpanel.add(label_3);
  JLabel label_4=new JLabel("Address :");
  label_4.setForeground(new Color(241,57,83));
  label_4.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_4.setBounds(41,483,194,41);
  addagentpanel.add(label_4);
  JRadioButton malerd=new JRadioButton("Male");
  malerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent malerdevent){
      malerdbtn();
    }
  }
);
  malerd.setForeground(Color.DARK_GRAY);
  malerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerd.setBounds(41,290,142,41);
  addagentpanel.add(malerd);
  JRadioButton femalerd=new JRadioButton("Female");
  femalerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleevent){
      femalerdbtn();
    }
  }
);
  femalerd.setForeground(Color.DARK_GRAY);
  femalerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerd.setBounds(206,290,142,41);
  addagentpanel.add(femalerd);
  JComboBox datecb=new JComboBox(dayarr);
  datecb.setBounds(41,415,70,41);
  addagentpanel.add(datecb);
  JComboBox monthcb=new JComboBox(monarr);
  monthcb.setBounds(137,415,70,41);
  addagentpanel.add(monthcb);
  JComboBox yearcb=new JComboBox(yeararr);
  yearcb.setBounds(229,415,103,41);
  addagentpanel.add(yearcb);
  JTextArea addressta=new JTextArea();
  addressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  addressta.setBounds(41,535,319,165);
  addagentpanel.add(addressta);
  JLabel label_5=new JLabel("Work Experience (Yrs) :");
  label_5.setForeground(new Color(241,57,83));
  label_5.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_5.setBounds(488,129,295,41);
  addagentpanel.add(label_5);
  worketf=new JTextField();
  worketf.setFont(new Font("Tahoma",Font.PLAIN,17));
  worketf.setColumns(10);
  worketf.setBounds(488,169,319,41);
  addagentpanel.add(worketf);
  JLabel lblTelephone=new JLabel("Telephone :");
  lblTelephone.setForeground(new Color(241,57,83));
  lblTelephone.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblTelephone.setBounds(488,252,194,41);
  addagentpanel.add(lblTelephone);
  mobiletf=new JTextField();
  mobiletf.setFont(new Font("Tahoma",Font.PLAIN,17));
  mobiletf.setColumns(10);
  mobiletf.setBounds(488,291,319,41);
  addagentpanel.add(mobiletf);
  JLabel label_7=new JLabel("Email :");
  label_7.setForeground(new Color(241,57,83));
  label_7.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_7.setBounds(488,374,194,41);
  addagentpanel.add(label_7);
  emailtf=new JTextField();
  emailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  emailtf.setColumns(10);
  emailtf.setBounds(488,412,319,41);
  addagentpanel.add(emailtf);
  JLabel label_8=new JLabel("Policy Details");
  label_8.setHorizontalAlignment(SwingConstants.CENTER);
  label_8.setForeground(new Color(241,57,83));
  label_8.setFont(new Font("Tahoma",Font.BOLD,35));
  label_8.setBounds(1015,99,310,53);
  addagentpanel.add(label_8);
  JPanel insurancespanel=new JPanel();
  insurancespanel.setLayout(null);
  insurancespanel.setForeground(Color.WHITE);
  insurancespanel.setBounds(890,169,231,198);
  addagentpanel.add(insurancespanel);
  JButton button_1=new JButton("Child Plan Insurance");
  button_1.setCursor(cur);
  button_1.setForeground(Color.WHITE);
  button_1.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_1.setBackground(new Color(241,57,83));
  button_1.setBounds(0,79,231,42);
  insurancespanel.add(button_1);
  JButton button_2=new JButton("Whole Life Insurance");
  button_2.setCursor(cur);
  button_2.setForeground(Color.WHITE);
  button_2.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_2.setBackground(new Color(241,57,83));
  button_2.setBounds(0,156,231,42);
  insurancespanel.add(button_2);
  JButton btnTermLifeInsurance=new JButton("Term Life Insurance");
  btnTermLifeInsurance.setCursor(cur);
  btnTermLifeInsurance.setForeground(Color.WHITE);
  btnTermLifeInsurance.setFont(new Font("Tahoma",Font.PLAIN,15));
  btnTermLifeInsurance.setBackground(new Color(241,57,83));
  btnTermLifeInsurance.setBounds(0,0,231,42);
  insurancespanel.add(btnTermLifeInsurance);
  JPanel parentpanel=new JPanel();
  parentpanel.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanel.setBounds(1150,170,434,480);
  addagentpanel.add(parentpanel);
  CardLayout cl3=new CardLayout(0,0);
  parentpanel.setLayout(cl3);
  JPanel lifelinsurancepanel=new JPanel();
  parentpanel.add(lifelinsurancepanel,"name_131091957135037");
  lifelinsurancepanel.setLayout(null);
  JLabel lblWholeLife=new JLabel("* Whole Life Insurance is selected.");
  lblWholeLife.setForeground(new Color(241,57,83));
  lblWholeLife.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblWholeLife.setBackground(Color.WHITE);
  lblWholeLife.setBounds(0,420,430,56);
  lifelinsurancepanel.add(lblWholeLife);
  JPanel childinsurancepanel=new JPanel();
  parentpanel.add(childinsurancepanel,"name_130839478752224");
  childinsurancepanel.setLayout(null);
  JPanel terminsurancepanel=new JPanel();
  parentpanel.add(terminsurancepanel,"name_130515214938554");
  terminsurancepanel.setLayout(null);
  JPanel redundantpanel2=new JPanel();
  parentpanel.add(redundantpanel2,"name_63847240216221");
  cl3.show(parentpanel,"name_63847240216221");
  JComboBox datecb1=new JComboBox(dayarr);
  datecb1.setBounds(488,516,70,41);
  addagentpanel.add(datecb1);
  JComboBox monthcb1=new JComboBox(monarr);
  monthcb1.setBounds(585,516,70,41);
  addagentpanel.add(monthcb1);
  JComboBox yearcb1=new JComboBox(yeararr);
  yearcb1.setBounds(680,516,103,41);
  addagentpanel.add(yearcb1);
  JLabel label_9=new JLabel("Date Of Joining :");
  label_9.setForeground(new Color(241,57,83));
  label_9.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_9.setBounds(488,464,194,41);
  addagentpanel.add(label_9);
  String column[]={"AGE","TERM","SUM ASSURESD","PREMIMUM"};
  String data[][]={{"AGE","TERM","SUM ASSURESD","PREMIMUM"},{"25 Years","40 Years","Rs . 1 Cr."," Rs . 10,500"},{"35 Years","30 Years","Rs . 25 Lakhs","Rs . 8,800"}};
  String column1[]={"TERM","SUM ASSURED","PREMIUM"};
  String data1[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.3 Lakhs","Rs.10,000"},{"35 Years","Rs.4 Lakhs","Rs.18,000"}};
  String column2[]={"TERM","SUM ASSURED","PREMIUM"};
  String data2[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.18 Lakhs","Rs.1 Lakh"},{"35 Years","Rs.40 Lakhs","Rs.4 Lakhs"}};
  table_3=new JTable();
  table_3.setRowHeight(210);
  table_3.setBounds(0,0,430,420);
  lifelinsurancepanel.add(table_3);
  table=new JTable();
  table.setBounds(0,0,430,420);
  table.setRowHeight(210);
  terminsurancepanel.add(table);
  JLabel lblNewLabel_1=new JLabel("* Term Life Insurance is selected.");
  lblNewLabel_1.setForeground(new Color(241,57,83));
  lblNewLabel_1.setBackground(Color.WHITE);
  lblNewLabel_1.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblNewLabel_1.setBounds(0,420,430,56);
  terminsurancepanel.add(lblNewLabel_1);
  table_2=new JTable();
  table_2.setBounds(0,0,430,420);
  table_2.setRowHeight(210);
  childinsurancepanel.add(table_2);
  JLabel lblChildPlan=new JLabel("* Child Plan Insurance is selected.");
  lblChildPlan.setForeground(new Color(241,57,83));
  lblChildPlan.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblChildPlan.setBackground(Color.WHITE);
  lblChildPlan.setBounds(0,420,430,56);
  childinsurancepanel.add(lblChildPlan);
  JLabel lblAgentId=new JLabel("Agent ID :");
  lblAgentId.setForeground(new Color(241,57,83));
  lblAgentId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblAgentId.setBounds(488,568,194,41);
  addagentpanel.add(lblAgentId);
  aidtf=new JTextField();
  aidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  aidtf.setColumns(10);
  aidtf.setBounds(488,620,319,41);
  addagentpanel.add(aidtf);
  JButton submitbtn=new JButton("SUBMIT");
  submitbtn.setCursor(cur);
  submitbtn.setForeground(Color.WHITE);
  submitbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  submitbtn.setBackground(new Color(241,57,83));
  submitbtn.setBounds(532,687,231,42);
  addagentpanel.add(submitbtn);
  CardLayout cl2=new CardLayout(0,0);
  JPanel panel_1=new JPanel();
  panel_1.setBounds(890,687,461,53);
  addagentpanel.add(panel_1);
  panel_1.setLayout(cl2);
  JPanel panel_3=new JPanel();
  panel_1.add(panel_3,"name_11001346500172");
  panel_3.setLayout(null);
  JLabel lblNewLabel_3=new JLabel("* Agent details have been submitted.");
  lblNewLabel_3.setForeground(new Color(241,57,83));
  lblNewLabel_3.setFont(new Font("Tahoma",Font.BOLD,17));
  lblNewLabel_3.setBounds(0,0,451,53);
  panel_3.add(lblNewLabel_3);
  JPanel panel_4=new JPanel();
  panel_1.add(panel_4,"name_11082648641670");
  cl2.show(panel_1,"name_11082648641670");
  JLabel warninglabel=new JLabel("(8 Digit Number)");
  warninglabel.setForeground(new Color(241,57,83));
  warninglabel.setFont(new Font("Tahoma",Font.PLAIN,14));
  warninglabel.setBounds(488,336,224,20);
  addagentpanel.add(warninglabel);
  JPanel buttonpanel=new JPanel();
  buttonpanel.setBounds(890,415,231,218);
  addagentpanel.add(buttonpanel);
  buttonpanel.setLayout(new CardLayout(0,0));
  JPanel cibtnpanel=new JPanel();
  buttonpanel.add(cibtnpanel,"name_94240132484303");
  cibtnpanel.setLayout(null);
  JPanel tibtnpanel=new JPanel();
  buttonpanel.add(tibtnpanel,"name_94280454630953");
  JPanel libtnpanel=new JPanel();
  buttonpanel.add(libtnpanel,"name_94295818881193");
  JPanel redundantpanel=new JPanel();
  grandfatherpanel.add(redundantpanel,"name_19239387057142");
  JPanel addcustomerpanel=new JPanel();
  addcustomerpanel.setForeground(Color.WHITE);
  grandfatherpanel.add(addcustomerpanel,"name_19239433071790");
  addcustomerpanel.setLayout(null);
  JLabel label_11=new JLabel("Name :");
  label_11.setForeground(new Color(241,57,83));
  label_11.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_11.setBounds(34,206,194,41);
  addcustomerpanel.add(label_11);
  JLabel lblcustomerDetails=new JLabel("<html><u>Customer Details<u><html>");
  lblcustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblcustomerDetails.setForeground(new Color(241,57,83));
  lblcustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcustomerDetails.setBackground(Color.WHITE);
  lblcustomerDetails.setBounds(532,0,664,98);
  addcustomerpanel.add(lblcustomerDetails);
  cnametf=new JTextField();
  cnametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cnametf.setColumns(10);
  cnametf.setBounds(34,249,319,41);
  addcustomerpanel.add(cnametf);
  JLabel label_12=new JLabel("Gender :");
  label_12.setForeground(new Color(241,57,83));
  label_12.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_12.setBounds(34,314,194,41);
  addcustomerpanel.add(label_12);
  JRadioButton malerdbtn1=new JRadioButton("Male");
  malerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent maleactionc){
      malerdbtn1();
    }
  }
);
  malerdbtn1.setForeground(Color.DARK_GRAY);
  malerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerdbtn1.setBounds(34,348,142,41);
  addcustomerpanel.add(malerdbtn1);
  JRadioButton femalerdbtn1=new JRadioButton("Female");
  femalerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleaction1){
      femalerdbtn1();
    }
  }
);
  femalerdbtn1.setForeground(Color.DARK_GRAY);
  femalerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerdbtn1.setBounds(195,348,142,41);
  addcustomerpanel.add(femalerdbtn1);
  btngrp1.add(malerdbtn1);
  btngrp1.add(femalerdbtn1);
  JLabel label_13=new JLabel("Date Of Birth :");
  label_13.setForeground(new Color(241,57,83));
  label_13.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_13.setBounds(34,390,194,41);
  addcustomerpanel.add(label_13);
  JComboBox cdatecb=new JComboBox(dayarr);
  cdatecb.setBounds(34,444,70,41);
  addcustomerpanel.add(cdatecb);
  JComboBox cmonthcb=new JComboBox(monarr);
  cmonthcb.setBounds(131,444,70,41);
  addcustomerpanel.add(cmonthcb);
  JComboBox cyearcb=new JComboBox(yeararr);
  cyearcb.setBounds(222,444,103,41);
  addcustomerpanel.add(cyearcb);
  JLabel label_14=new JLabel("Address :");
  label_14.setForeground(new Color(241,57,83));
  label_14.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_14.setBounds(34,498,194,41);
  addcustomerpanel.add(label_14);
  JTextArea caddressta=new JTextArea();
  caddressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  caddressta.setBounds(34,537,319,165);
  addcustomerpanel.add(caddressta);
  JLabel label_15=new JLabel("Telephone :");
  label_15.setForeground(new Color(241,57,83));
  label_15.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_15.setBounds(438,113,194,41);
  addcustomerpanel.add(label_15);
  cmobtf=new JTextField();
  cmobtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cmobtf.setColumns(10);
  cmobtf.setBounds(438,152,319,41);
  addcustomerpanel.add(cmobtf);
  JLabel label_16=new JLabel("Email :");
  label_16.setForeground(new Color(241,57,83));
  label_16.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_16.setBounds(438,236,194,41);
  addcustomerpanel.add(label_16);
  cemailtf=new JTextField();
  cemailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cemailtf.setColumns(10);
  cemailtf.setBounds(438,274,319,41);
  addcustomerpanel.add(cemailtf);
  JLabel lblSalary=new JLabel("Salary :");
  lblSalary.setForeground(new Color(241,57,83));
  lblSalary.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblSalary.setBounds(438,346,194,41);
  addcustomerpanel.add(lblSalary);
  csalarytf=new JTextField();
  csalarytf.setFont(new Font("Tahoma",Font.PLAIN,17));
  csalarytf.setColumns(10);
  csalarytf.setBounds(438,384,319,41);
  addcustomerpanel.add(csalarytf);
  JLabel lblEnterYourAgent=new JLabel("Enter Your Agent ID :");
  lblEnterYourAgent.setForeground(new Color(241,57,83));
  lblEnterYourAgent.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblEnterYourAgent.setBounds(438,466,319,41);
  addcustomerpanel.add(lblEnterYourAgent);
  caidtf=new JTextField();
  caidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  caidtf.setColumns(10);
  caidtf.setBounds(438,510,319,41);
  addcustomerpanel.add(caidtf);
  JButton btnCheckInsurance=new JButton("Check Insurance");
  btnCheckInsurance.setCursor(cur);
  btnCheckInsurance.setForeground(Color.WHITE);
  btnCheckInsurance.setFont(new Font("Tahoma",Font.BOLD,20));
  btnCheckInsurance.setBackground(new Color(241,57,83));
  btnCheckInsurance.setBounds(438,576,319,55);
  addcustomerpanel.add(btnCheckInsurance);
  JPanel parentpanelc=new JPanel();
  parentpanelc.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanelc.setBounds(897,152,689,540);
  addcustomerpanel.add(parentpanelc);
  parentpanelc.setLayout(cl4);
  JPanel tinsurancepanel=new JPanel();
  parentpanelc.add(tinsurancepanel,"name_73735057972235");
  tinsurancepanel.setLayout(null);
  JScrollPane scrollPane_3=new JScrollPane();
  scrollPane_3.setBounds(0,0,685,466);
  tinsurancepanel.add(scrollPane_3);
  tinsurancetable=new JTable();
  scrollPane_3.setViewportView(tinsurancetable);
  JLabel tinsurancelabel=new JLabel("* Term Insurance has been selected.");
  tinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  tinsurancelabel.setForeground(new Color(241,57,83));
  tinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  tinsurancelabel.setBounds(0,466,685,70);
  tinsurancepanel.add(tinsurancelabel);
  JPanel cinsurancepanel=new JPanel();
  parentpanelc.add(cinsurancepanel,"name_73791843709339");
  cinsurancepanel.setLayout(null);
  JScrollPane scrollPane_2=new JScrollPane();
  scrollPane_2.setBounds(0,0,685,466);
  cinsurancepanel.add(scrollPane_2);
  cinsurancetable=new JTable();
  scrollPane_2.setViewportView(cinsurancetable);
  JLabel cinsurancelabel=new JLabel("* Child Plan Insurance has been selected.");
  cinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  cinsurancelabel.setForeground(new Color(241,57,83));
  cinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  cinsurancelabel.setBounds(0,466,685,70);
  cinsurancepanel.add(cinsurancelabel);
  JPanel winsurancepanel=new JPanel();
  parentpanelc.add(winsurancepanel,"name_73812949494419");
  winsurancepanel.setLayout(null);
  JScrollPane scrollPane_1=new JScrollPane();
  scrollPane_1.setBounds(0,0,685,466);
  winsurancepanel.add(scrollPane_1);
  winsurancetable=new JTable();
  scrollPane_1.setViewportView(winsurancetable);
  JLabel lblWholeLife_1=new JLabel("* Whole Life Insurance has been selected.");
  lblWholeLife_1.setHorizontalAlignment(SwingConstants.CENTER);
  lblWholeLife_1.setForeground(new Color(241,57,83));
  lblWholeLife_1.setFont(new Font("Tahoma",Font.ITALIC,20));
  lblWholeLife_1.setBounds(0,466,685,70);
  winsurancepanel.add(lblWholeLife_1);
  JPanel credundantpanel=new JPanel();
  parentpanelc.add(credundantpanel,"name_73862456257256");
  cl4.show(parentpanelc,"name_73862456257256");
  JButton btnSubmitDetails=new JButton("Submit Details");
  btnSubmitDetails.setCursor(cur);
  btnSubmitDetails.setForeground(Color.WHITE);
  btnSubmitDetails.setFont(new Font("Tahoma",Font.BOLD,20));
  btnSubmitDetails.setBackground(new Color(241,57,83));
  btnSubmitDetails.setBounds(438,662,319,55);
  addcustomerpanel.add(btnSubmitDetails);
  JLabel lblCustomerId=new JLabel("Customer ID :");
  lblCustomerId.setForeground(new Color(241,57,83));
  lblCustomerId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblCustomerId.setBounds(34,113,194,41);
  addcustomerpanel.add(lblCustomerId);
  ccidtf=new JTextField();
  ccidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  ccidtf.setColumns(10);
  ccidtf.setBounds(34,152,319,41);
  addcustomerpanel.add(ccidtf);
  JPanel messagedisplaypanel=new JPanel();
  messagedisplaypanel.setBounds(897,706,508,31);
  addcustomerpanel.add(messagedisplaypanel);
  messagedisplaypanel.setLayout(cl5);
  JPanel messagedisplay=new JPanel();
  messagedisplaypanel.add(messagedisplay,"name_4659622588556");
  messagedisplay.setLayout(null);
  JLabel lblNewLabel_4=new JLabel("* Details have been submitted.");
  lblNewLabel_4.setFont(new Font("Tahoma",Font.PLAIN,17));
  lblNewLabel_4.setForeground(new Color(241,57,83));
  lblNewLabel_4.setBounds(0,0,508,29);
  messagedisplay.add(lblNewLabel_4);
  JPanel messageredundantpanel=new JPanel();
  messagedisplaypanel.add(messageredundantpanel,"name_4667681966752");
  cl5.show(messagedisplaypanel,"name_4667681966752");
  cl.show(grandfatherpanel,"name_19239387057142");
  JPanel viewcustomerpanel=new JPanel();
  grandfatherpanel.add(viewcustomerpanel,"name_7105952272002");
  viewcustomerpanel.setLayout(null);
  JScrollPane scrollPane_4=new JScrollPane();
  scrollPane_4.setBounds(26,150,1575,585);
  viewcustomerpanel.add(scrollPane_4);
  custdetailstb=new JTable();
  custdetailstb.setRowHeight(50);
  scrollPane_4.setViewportView(custdetailstb);
  custdetailstb.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  JLabel lblviewCustomerDetails=new JLabel("<html><u>View Customer Details<u><html>");
  lblviewCustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblviewCustomerDetails.setForeground(new Color(241,57,83));
  lblviewCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblviewCustomerDetails.setBackground(Color.WHITE);
  lblviewCustomerDetails.setBounds(481,0,664,98);
  viewcustomerpanel.add(lblviewCustomerDetails);
  JButton btnLoadCustomerDetails=new JButton("Load Customer Details");
  btnLoadCustomerDetails.setCursor(cur);
  btnLoadCustomerDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent loadcustdetails){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from customerinfo";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        custdetailstb.setModel(DbUtils.resultSetToTableModel(rs));
        viewcustomerpanel.revalidate();
        frame.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  btnLoadCustomerDetails.setForeground(Color.WHITE);
  btnLoadCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,15));
  btnLoadCustomerDetails.setBackground(new Color(241,57,83));
  btnLoadCustomerDetails.setBounds(1271,85,277,48);
  viewcustomerpanel.add(btnLoadCustomerDetails);
  JPanel contactuspanel=new JPanel();
  grandfatherpanel.add(contactuspanel,"name_38683474436453");
  contactuspanel.setLayout(null);
  JLabel lblcontactUss=new JLabel("<html><u>Contact Us<u><html>");
  lblcontactUss.setHorizontalAlignment(SwingConstants.CENTER);
  lblcontactUss.setForeground(new Color(241,57,83));
  lblcontactUss.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcontactUss.setBackground(Color.WHITE);
  lblcontactUss.setBounds(497,0,664,98);
  contactuspanel.add(lblcontactUss);
  JButton btnNewButton_2=new JButton("");
  btnNewButton_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.gmail.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_2.setIcon(new ImageIcon(main_p.class.getResource("/images/2000px-New_Logo_Gmail.svg_99x87.png")));
  btnNewButton_2.setBounds(74,119,105,87);
  contactuspanel.add(btnNewButton_2);
  JButton button_3=new JButton("");
  button_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.twitter.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_3.setBackground(Color.WHITE);
  button_3.setIcon(new ImageIcon(main_p.class.getResource("/images/dezeen_twitter-bird_99x87.gif")));
  button_3.setBounds(74,255,105,87);
  contactuspanel.add(button_3);
  JButton button_4=new JButton("");
  button_4.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.facebook.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_4.setIcon(new ImageIcon(main_p.class.getResource("/images/flogo_rgb_hex-brc-site-250_99x87.png")));
  button_4.setBackground(Color.WHITE);
  button_4.setBounds(74,386,105,87);
  contactuspanel.add(button_4);
  JButton button_5=new JButton("");
  button_5.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.shahandanchor.com/home/");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_5.setIcon(new ImageIcon(main_p.class.getResource("/images/Shah-And-Anchor-Kutchhi-Engineering-College_99x87.jpg")));
  button_5.setBackground(Color.WHITE);
  button_5.setBounds(74,513,105,87);
  contactuspanel.add(button_5);
  JPanel panel_6=new JPanel();
  panel_6.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  panel_6.setBounds(234,119,969,439);
  contactuspanel.add(panel_6);
  panel_6.setLayout(null);
  JButton btnNewButton_3=new JButton("New button");
  btnNewButton_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("https://www.google.com/maps/place/Shah+%26+Anchor+Kutchhi+Engineering+College/@19.048219,72.91165,14z/data=!4m5!3m4!1s0x0:0x9ebbdeaea9ec24ae!8m2!3d19.0482157!4d72.9116581?hl=en");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_3.setIcon(new ImageIcon(main_p.class.getResource("/images/Screenshot_2018-10-03 Contact Us - SAKEC-Shah Anchor Kutchhi Engineering College.png")));
  btnNewButton_3.setBounds(10,55,950,328);
  panel_6.add(btnNewButton_3);
  JLabel lblNewLabel_7=new JLabel("<html>Postal Address<br/>\r\n\r\nShah & Anchor Kutchhi Engineering College\r\n\r\nMahavir Education Trust\u2019s Chowk,<br/> Waman Tukaram Patil Marg,<br/> Next to Dukes Co.,<br/> Chembur, Mumbai \u2013 400 088.\r\n<br/>\r\n<br/><br/><br/>\r\nContact Details\r\n\r\n<br/>Contact-No: 022-25580854\r\n\r\n<br/>Fax-No:25568100\r\n\r\n<br/>Email-Id: info@sakec.ac.in </html>");
  lblNewLabel_7.setVerticalAlignment(SwingConstants.TOP);
  lblNewLabel_7.setFont(new Font("Tahoma",Font.BOLD,20));
  lblNewLabel_7.setForeground(new Color(241,57,83));
  lblNewLabel_7.setBounds(1228,119,374,439);
  contactuspanel.add(lblNewLabel_7);
  btnTermLifeInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      cl3.show(parentpanel,"name_130515214938554");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Term Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      frame.revalidate();
      parentpanel.revalidate();
      insurance1();
    }
  }
);
  button_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event3){
      cl3.show(parentpanel,"name_131091957135037");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Whole Life Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance3();
    }
  }
);
  button_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event2){
      cl3.show(parentpanel,"name_130839478752224");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Child Plan Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance2();
    }
  }
);
  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,16));
  JLabel label_6=new JLabel("resiz");
  label_6.setIcon(new ImageIcon(main_p.class.getResource("/images/Customer_Female_Add_190x142.jpg")));
  label_6.setHorizontalAlignment(SwingConstants.CENTER);
  label_6.setBounds(900,0,178,142);
  panel.add(label_6);
  JButton btnAddCustomer=new JButton("Add Customer");
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent customeraddevent){
      cl.show(grandfatherpanel,"name_19239433071790");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnAddCustomer.setForeground(Color.WHITE);
  btnAddCustomer.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.setBackground(new Color(241,57,83));
  btnAddCustomer.setBounds(900,142,178,46);
  panel.add(btnAddCustomer);
  JButton btnViewCustomers=new JButton("View Customers");
  btnViewCustomers.setCursor(cur);
  btnViewCustomers.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e7){
      cl.show(grandfatherpanel,"name_7105952272002");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewCustomers.setForeground(Color.WHITE);
  btnViewCustomers.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewCustomers.setBackground(new Color(241,57,83));
  btnViewCustomers.setBounds(1102,142,178,46);
  panel.add(btnViewCustomers);
  JPanel panel_2=new JPanel();
  panel_2.setBounds(1102,0,178,142);
  panel.add(panel_2);
  panel_2.setLayout(null);
  JLabel lblNewLabel_5=new JLabel("New label");
  lblNewLabel_5.setIcon(new ImageIcon(main_p.class.getResource("/images/User_info_man_male_profile_information_190x142.png")));
  lblNewLabel_5.setBounds(0,0,178,142);
  panel_2.add(lblNewLabel_5);
  JButton btnNewButton_1=new JButton("X");
  btnNewButton_1.setCursor(cur);
  btnNewButton_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent exitevent){
      frameexit=new JFrame("Exit");
      if (JOptionPane.showConfirmDialog(frameexit,"Confirm if you want to exit","Login Systems",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        System.exit(0);
      }
    }
  }
);
  btnNewButton_1.setFont(new Font("Tahoma",Font.BOLD,17));
  btnNewButton_1.setBackground(Color.DARK_GRAY);
  btnNewButton_1.setForeground(Color.RED);
  btnNewButton_1.setBounds(1582,0,68,29);
  panel.add(btnNewButton_1);
  JButton button=new JButton("---");
  button.setCursor(cur);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent minimizeevent){
      frame.setState(JFrame.ICONIFIED);
    }
  }
);
  button.setForeground(Color.RED);
  button.setFont(new Font("Tahoma",Font.BOLD,19));
  button.setBackground(Color.DARK_GRAY);
  button.setBounds(1504,0,68,29);
  panel.add(button);
  JPanel panel_5=new JPanel();
  panel_5.setLayout(null);
  panel_5.setBounds(1304,0,178,142);
  panel.add(panel_5);
  JLabel label_17=new JLabel("New label");
  label_17.setIcon(new ImageIcon(main_p.class.getResource("/images/guy_190x142.png")));
  label_17.setBounds(0,0,178,142);
  panel_5.add(label_17);
  JButton btnContactUs=new JButton("Contact Us");
  btnContactUs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_38683474436453");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnContactUs.setForeground(Color.WHITE);
  btnContactUs.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnContactUs.setBackground(new Color(241,57,83));
  btnContactUs.setBounds(1304,142,178,46);
  panel.add(btnContactUs);
  btnNewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_19239371696803");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  submitbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitevent){
      if (genderval == 1) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Male");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      if (genderval == 2) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)  ";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Female");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      nametf.setText(null);
      yearcb.setSelectedIndex(0);
      monthcb.setSelectedIndex(0);
      datecb.setSelectedIndex(0);
      yearcb1.setSelectedIndex(0);
      monthcb1.setSelectedIndex(0);
      datecb1.setSelectedIndex(0);
      addressta.setText(null);
      mobiletf.setText(null);
      emailtf.setText(null);
      worketf.setText(null);
      aidtf.setText(null);
      cl2.show(panel_1,"name_11001346500172");
      panel_1.revalidate();
      addagentpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewagent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent viewagentevent){
      cl.show(grandfatherpanel,"name_19239332734906");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnCheckInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent checkinevent){
      String ans=caidtf.getText();
      int id=Integer.parseInt(ans);
      try {
        String insurancetype=null;
        Connection conn3=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        PreparedStatement stmt=conn3.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
        stmt.setInt(1,id);
        ResultSet rs=stmt.executeQuery();
        while (rs.next()) {
          insurancetype=rs.getString(1);
        }
        if (insurancetype.equals("Term Insurance")) {
          cl4.show(parentpanelc,"name_73735057972235");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from terminsurance");
          ResultSet rs1=stmt2.executeQuery();
          tinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          tinsurancetable.setRowHeight(225);
          tinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Child Plan Insurance")) {
          cl4.show(parentpanelc,"name_73791843709339");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from childinsurance");
          ResultSet rs1=stmt2.executeQuery();
          cinsurancetable.setRowHeight(225);
          cinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          cinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Whole Life Insurance")) {
          cl4.show(parentpanelc,"name_73812949494419");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from lifeinsurance");
          ResultSet rs1=stmt2.executeQuery();
          winsurancetable.setRowHeight(225);
          winsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          winsurancepanel.revalidate();
        }
      }
 catch (      Exception checkexception) {
        System.out.println(checkexception);
      }
    }
  }
);
  btnSubmitDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitaction){
      if (cgenderval == 1) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Male");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      if (cgenderval == 2) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?++)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Female");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      cnametf.setText(null);
      cyearcb.setSelectedIndex(0);
      cmonthcb.setSelectedIndex(0);
      cdatecb.setSelectedIndex(0);
      caddressta.setText(null);
      cmobtf.setText(null);
      ccidtf.setText(null);
      cemailtf.setText(null);
      caidtf.setText(null);
      csalarytf.setText(null);
      cl5.show(messagedisplaypanel,"name_4659622588556");
      addcustomerpanel.revalidate();
      frame.revalidate();
    }
  }
);
  frame.getContentPane().setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{panel,lblNewLabel}));
  frame.revalidate();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.model.ChildTargetCalculator.getLastTargetStatement(ChildTargetCalculator.java:202)
	at org.eclipse.wb.internal.core.model.ChildTargetCalculator.getTarget(ChildTargetCalculator.java:107)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.getTarget(JavaInfoUtils.java:1624)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.add(JavaInfoUtils.java:1288)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.setLayout(ContainerInfo.java:414)
	at org.eclipse.wb.internal.swing.gefTree.policy.DropLayoutEditPolicy$1.executeEdit(DropLayoutEditPolicy.java:72)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.gef.core.tools.Tool.executeCommand(Tool.java:209)
	at org.eclipse.wb.gef.core.tools.AbstractCreationTool.handleButtonUp(AbstractCreationTool.java:62)
	at org.eclipse.wb.gef.core.tools.Tool.mouseUp(Tool.java:395)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseUp(EditDomain.java:255)
	at org.eclipse.wb.internal.gef.tree.TreeEventManager.mouseUp(TreeEventManager.java:120)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.wb.internal.draw2d.EventManager$8.invoke(EventManager.java:325)
	at com.sun.proxy.$Proxy19.mouseUp(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:224)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage$5.run(ComponentsTreePage.java:166)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage.selectGraphicalViewer(ComponentsTreePage.java:148)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage.access$0(ComponentsTreePage.java:145)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage$1.selectionChanged(ComponentsTreePage.java:119)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)

!ENTRY org.eclipse.wb.core 4 4 2018-10-05 02:59:52.477
!MESSAGE Designer [1.10.0.201809061025.201810050259]: Execution flow problem. {
  frame=new JFrame();
  frame.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      frameevent(e);
    }
  }
);
  frame.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    MouseEvent evt){
      mouseevent(evt);
    }
  }
);
  frame.setResizable(false);
  frame.setUndecorated(true);
  frame.setBounds(100,100,1650,1000);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  Cursor cur=new Cursor(Cursor.HAND_CURSOR);
  CardLayout cl5=new CardLayout(0,0);
  CardLayout cl4=new CardLayout(0,0);
  String[] dayarr=new String[31];
  for (int i=1; i < 32; i++) {
    dayarr[i - 1]=Integer.toString(i);
  }
  String monarr[]=new String[12];
  for (int i=1; i < 13; i++) {
    monarr[i - 1]=Integer.toString(i);
  }
  String yeararr[]=new String[78];
  for (int j=1940, k=0; j < 2018; j++, k++) {
    yeararr[k]=Integer.toString(j);
  }
  ButtonGroup btngrp1=new ButtonGroup();
  ImageIcon icon11=new ImageIcon("/java_project/src/images/VIR INSURANCE_cropped.jpg");
  frame.setIconImage(icon11.getImage());
  ButtonGroup btngrp=new ButtonGroup();
  frame.getContentPane().setLayout(null);
  JPanel panel=new JPanel();
  panel.setBounds(0,0,1650,188);
  panel.setBackground(Color.DARK_GRAY);
  frame.getContentPane().add(panel);
  panel.setLayout(null);
  JLabel lblNewLabel=new JLabel("New label");
  lblNewLabel.setIcon(new ImageIcon(main_p.class.getResource("/images/VIR INSURANCE.jpg")));
  lblNewLabel.setBounds(0,0,518,188);
  panel.add(lblNewLabel);
  JLabel lblNewLabel_2=new JLabel("resiz");
  lblNewLabel_2.setIcon(new ImageIcon(main_p.class.getResource("/images/security_agent_add_2_190x142.png")));
  lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
  lblNewLabel_2.setBounds(501,0,178,142);
  panel.add(lblNewLabel_2);
  JButton btnNewButton=new JButton("Add Agent");
  btnNewButton.setCursor(cur);
  btnNewButton.setBackground(new Color(241,57,83));
  btnNewButton.setForeground(Color.WHITE);
  btnNewButton.setBounds(501,142,178,46);
  panel.add(btnNewButton);
  JLabel label_10=new JLabel("resiz");
  label_10.setIcon(new ImageIcon(main_p.class.getResource("/images/Online_Agent_New_190x142.jpg")));
  label_10.setHorizontalAlignment(SwingConstants.CENTER);
  label_10.setBounds(701,0,178,142);
  panel.add(label_10);
  JButton btnViewagent=new JButton("View Agents");
  btnViewagent.setCursor(cur);
  btnViewagent.setForeground(Color.WHITE);
  btnViewagent.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewagent.setBackground(new Color(241,57,83));
  btnViewagent.setBounds(701,142,178,46);
  panel.add(btnViewagent);
  JPanel grandfatherpanel=new JPanel();
  grandfatherpanel.setBounds(0,189,1632,764);
  frame.getContentPane().add(grandfatherpanel);
  CardLayout cl=new CardLayout(0,0);
  grandfatherpanel.setLayout(cl);
  JPanel viewagentpanel=new JPanel();
  grandfatherpanel.add(viewagentpanel,"name_19239332734906");
  viewagentpanel.setLayout(null);
  JLabel lblagentDetails=new JLabel("<html><u>Agent Details <u><html>");
  lblagentDetails.setBounds(490,22,652,72);
  lblagentDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblagentDetails.setForeground(new Color(241,57,83));
  lblagentDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblagentDetails.setBackground(Color.WHITE);
  viewagentpanel.add(lblagentDetails);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setBounds(84,165,1480,556);
  viewagentpanel.add(scrollPane);
  table_4=new JTable();
  table_4.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  table_4.setRowHeight(50);
  scrollPane.setViewportView(table_4);
  JButton tablerefreshbtn=new JButton("Load Agent Details");
  tablerefreshbtn.setCursor(cur);
  tablerefreshbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  tablerefreshbtn.setBackground(new Color(241,57,83));
  tablerefreshbtn.setForeground(Color.WHITE);
  tablerefreshbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String tablepopulate="select * from agentinfo";
        PreparedStatement stmt=con.prepareStatement(tablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_4.setModel(DbUtils.resultSetToTableModel(rs));
        viewagentpanel.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  tablerefreshbtn.setBounds(1287,93,277,48);
  viewagentpanel.add(tablerefreshbtn);
  JPanel addagentpanel=new JPanel();
  addagentpanel.setForeground(new Color(241,57,83));
  grandfatherpanel.add(addagentpanel,"name_19239371696803");
  addagentpanel.setLayout(null);
  JLabel label=new JLabel("<html><u>Agent Details & Policies Sold<u><html>");
  label.setHorizontalAlignment(SwingConstants.CENTER);
  label.setForeground(new Color(241,57,83));
  label.setFont(new Font("Tahoma",Font.BOLD,45));
  label.setBackground(Color.WHITE);
  label.setBounds(488,13,664,98);
  addagentpanel.add(label);
  JLabel label_1=new JLabel("Name :");
  label_1.setForeground(new Color(241,57,83));
  label_1.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_1.setBounds(41,129,194,41);
  addagentpanel.add(label_1);
  nametf=new JTextField();
  nametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  nametf.setColumns(10);
  nametf.setBounds(41,169,319,41);
  addagentpanel.add(nametf);
  JLabel label_2=new JLabel("Gender :");
  label_2.setForeground(new Color(241,57,83));
  label_2.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_2.setBounds(41,242,194,41);
  addagentpanel.add(label_2);
  JLabel label_3=new JLabel("Date Of Birth :");
  label_3.setForeground(new Color(241,57,83));
  label_3.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_3.setBounds(41,363,194,41);
  addagentpanel.add(label_3);
  JLabel label_4=new JLabel("Address :");
  label_4.setForeground(new Color(241,57,83));
  label_4.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_4.setBounds(41,483,194,41);
  addagentpanel.add(label_4);
  JRadioButton malerd=new JRadioButton("Male");
  malerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent malerdevent){
      malerdbtn();
    }
  }
);
  malerd.setForeground(Color.DARK_GRAY);
  malerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerd.setBounds(41,290,142,41);
  addagentpanel.add(malerd);
  JRadioButton femalerd=new JRadioButton("Female");
  femalerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleevent){
      femalerdbtn();
    }
  }
);
  femalerd.setForeground(Color.DARK_GRAY);
  femalerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerd.setBounds(206,290,142,41);
  addagentpanel.add(femalerd);
  JComboBox datecb=new JComboBox(dayarr);
  datecb.setBounds(41,415,70,41);
  addagentpanel.add(datecb);
  JComboBox monthcb=new JComboBox(monarr);
  monthcb.setBounds(137,415,70,41);
  addagentpanel.add(monthcb);
  JComboBox yearcb=new JComboBox(yeararr);
  yearcb.setBounds(229,415,103,41);
  addagentpanel.add(yearcb);
  JTextArea addressta=new JTextArea();
  addressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  addressta.setBounds(41,535,319,165);
  addagentpanel.add(addressta);
  JLabel label_5=new JLabel("Work Experience (Yrs) :");
  label_5.setForeground(new Color(241,57,83));
  label_5.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_5.setBounds(488,129,295,41);
  addagentpanel.add(label_5);
  worketf=new JTextField();
  worketf.setFont(new Font("Tahoma",Font.PLAIN,17));
  worketf.setColumns(10);
  worketf.setBounds(488,169,319,41);
  addagentpanel.add(worketf);
  JLabel lblTelephone=new JLabel("Telephone :");
  lblTelephone.setForeground(new Color(241,57,83));
  lblTelephone.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblTelephone.setBounds(488,252,194,41);
  addagentpanel.add(lblTelephone);
  mobiletf=new JTextField();
  mobiletf.setFont(new Font("Tahoma",Font.PLAIN,17));
  mobiletf.setColumns(10);
  mobiletf.setBounds(488,291,319,41);
  addagentpanel.add(mobiletf);
  JLabel label_7=new JLabel("Email :");
  label_7.setForeground(new Color(241,57,83));
  label_7.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_7.setBounds(488,374,194,41);
  addagentpanel.add(label_7);
  emailtf=new JTextField();
  emailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  emailtf.setColumns(10);
  emailtf.setBounds(488,412,319,41);
  addagentpanel.add(emailtf);
  JLabel label_8=new JLabel("Policy Details");
  label_8.setHorizontalAlignment(SwingConstants.CENTER);
  label_8.setForeground(new Color(241,57,83));
  label_8.setFont(new Font("Tahoma",Font.BOLD,35));
  label_8.setBounds(1015,99,310,53);
  addagentpanel.add(label_8);
  JPanel insurancespanel=new JPanel();
  insurancespanel.setLayout(null);
  insurancespanel.setForeground(Color.WHITE);
  insurancespanel.setBounds(890,169,231,198);
  addagentpanel.add(insurancespanel);
  JButton button_1=new JButton("Child Plan Insurance");
  button_1.setCursor(cur);
  button_1.setForeground(Color.WHITE);
  button_1.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_1.setBackground(new Color(241,57,83));
  button_1.setBounds(0,79,231,42);
  insurancespanel.add(button_1);
  JButton button_2=new JButton("Whole Life Insurance");
  button_2.setCursor(cur);
  button_2.setForeground(Color.WHITE);
  button_2.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_2.setBackground(new Color(241,57,83));
  button_2.setBounds(0,156,231,42);
  insurancespanel.add(button_2);
  JButton btnTermLifeInsurance=new JButton("Term Life Insurance");
  btnTermLifeInsurance.setCursor(cur);
  btnTermLifeInsurance.setForeground(Color.WHITE);
  btnTermLifeInsurance.setFont(new Font("Tahoma",Font.PLAIN,15));
  btnTermLifeInsurance.setBackground(new Color(241,57,83));
  btnTermLifeInsurance.setBounds(0,0,231,42);
  insurancespanel.add(btnTermLifeInsurance);
  JPanel parentpanel=new JPanel();
  parentpanel.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanel.setBounds(1150,170,434,480);
  addagentpanel.add(parentpanel);
  CardLayout cl3=new CardLayout(0,0);
  parentpanel.setLayout(cl3);
  JPanel lifelinsurancepanel=new JPanel();
  parentpanel.add(lifelinsurancepanel,"name_131091957135037");
  lifelinsurancepanel.setLayout(null);
  JLabel lblWholeLife=new JLabel("* Whole Life Insurance is selected.");
  lblWholeLife.setForeground(new Color(241,57,83));
  lblWholeLife.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblWholeLife.setBackground(Color.WHITE);
  lblWholeLife.setBounds(0,420,430,56);
  lifelinsurancepanel.add(lblWholeLife);
  JPanel childinsurancepanel=new JPanel();
  parentpanel.add(childinsurancepanel,"name_130839478752224");
  childinsurancepanel.setLayout(null);
  JPanel terminsurancepanel=new JPanel();
  parentpanel.add(terminsurancepanel,"name_130515214938554");
  terminsurancepanel.setLayout(null);
  JPanel redundantpanel2=new JPanel();
  parentpanel.add(redundantpanel2,"name_63847240216221");
  cl3.show(parentpanel,"name_63847240216221");
  JComboBox datecb1=new JComboBox(dayarr);
  datecb1.setBounds(488,516,70,41);
  addagentpanel.add(datecb1);
  JComboBox monthcb1=new JComboBox(monarr);
  monthcb1.setBounds(585,516,70,41);
  addagentpanel.add(monthcb1);
  JComboBox yearcb1=new JComboBox(yeararr);
  yearcb1.setBounds(680,516,103,41);
  addagentpanel.add(yearcb1);
  JLabel label_9=new JLabel("Date Of Joining :");
  label_9.setForeground(new Color(241,57,83));
  label_9.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_9.setBounds(488,464,194,41);
  addagentpanel.add(label_9);
  String column[]={"AGE","TERM","SUM ASSURESD","PREMIMUM"};
  String data[][]={{"AGE","TERM","SUM ASSURESD","PREMIMUM"},{"25 Years","40 Years","Rs . 1 Cr."," Rs . 10,500"},{"35 Years","30 Years","Rs . 25 Lakhs","Rs . 8,800"}};
  String column1[]={"TERM","SUM ASSURED","PREMIUM"};
  String data1[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.3 Lakhs","Rs.10,000"},{"35 Years","Rs.4 Lakhs","Rs.18,000"}};
  String column2[]={"TERM","SUM ASSURED","PREMIUM"};
  String data2[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.18 Lakhs","Rs.1 Lakh"},{"35 Years","Rs.40 Lakhs","Rs.4 Lakhs"}};
  table_3=new JTable();
  table_3.setRowHeight(210);
  table_3.setBounds(0,0,430,420);
  lifelinsurancepanel.add(table_3);
  table=new JTable();
  table.setBounds(0,0,430,420);
  table.setRowHeight(210);
  terminsurancepanel.add(table);
  JLabel lblNewLabel_1=new JLabel("* Term Life Insurance is selected.");
  lblNewLabel_1.setForeground(new Color(241,57,83));
  lblNewLabel_1.setBackground(Color.WHITE);
  lblNewLabel_1.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblNewLabel_1.setBounds(0,420,430,56);
  terminsurancepanel.add(lblNewLabel_1);
  table_2=new JTable();
  table_2.setBounds(0,0,430,420);
  table_2.setRowHeight(210);
  childinsurancepanel.add(table_2);
  JLabel lblChildPlan=new JLabel("* Child Plan Insurance is selected.");
  lblChildPlan.setForeground(new Color(241,57,83));
  lblChildPlan.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblChildPlan.setBackground(Color.WHITE);
  lblChildPlan.setBounds(0,420,430,56);
  childinsurancepanel.add(lblChildPlan);
  JLabel lblAgentId=new JLabel("Agent ID :");
  lblAgentId.setForeground(new Color(241,57,83));
  lblAgentId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblAgentId.setBounds(488,568,194,41);
  addagentpanel.add(lblAgentId);
  aidtf=new JTextField();
  aidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  aidtf.setColumns(10);
  aidtf.setBounds(488,620,319,41);
  addagentpanel.add(aidtf);
  JButton submitbtn=new JButton("SUBMIT");
  submitbtn.setCursor(cur);
  submitbtn.setForeground(Color.WHITE);
  submitbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  submitbtn.setBackground(new Color(241,57,83));
  submitbtn.setBounds(532,687,231,42);
  addagentpanel.add(submitbtn);
  CardLayout cl2=new CardLayout(0,0);
  JPanel panel_1=new JPanel();
  panel_1.setBounds(890,687,461,53);
  addagentpanel.add(panel_1);
  panel_1.setLayout(cl2);
  JPanel panel_3=new JPanel();
  panel_1.add(panel_3,"name_11001346500172");
  panel_3.setLayout(null);
  JLabel lblNewLabel_3=new JLabel("* Agent details have been submitted.");
  lblNewLabel_3.setForeground(new Color(241,57,83));
  lblNewLabel_3.setFont(new Font("Tahoma",Font.BOLD,17));
  lblNewLabel_3.setBounds(0,0,451,53);
  panel_3.add(lblNewLabel_3);
  JPanel panel_4=new JPanel();
  panel_1.add(panel_4,"name_11082648641670");
  cl2.show(panel_1,"name_11082648641670");
  JLabel warninglabel=new JLabel("(8 Digit Number)");
  warninglabel.setForeground(new Color(241,57,83));
  warninglabel.setFont(new Font("Tahoma",Font.PLAIN,14));
  warninglabel.setBounds(488,336,224,20);
  addagentpanel.add(warninglabel);
  JPanel buttonpanel=new JPanel();
  buttonpanel.setBounds(890,415,231,218);
  addagentpanel.add(buttonpanel);
  buttonpanel.setLayout(new CardLayout(0,0));
  JPanel cibtnpanel=new JPanel();
  buttonpanel.add(cibtnpanel,"name_94240132484303");
  cibtnpanel.setLayout(null);
  JPanel tibtnpanel=new JPanel();
  buttonpanel.add(tibtnpanel,"name_94280454630953");
  JPanel libtnpanel=new JPanel();
  buttonpanel.add(libtnpanel,"name_94295818881193");
  JPanel redundantpanel=new JPanel();
  grandfatherpanel.add(redundantpanel,"name_19239387057142");
  JPanel addcustomerpanel=new JPanel();
  addcustomerpanel.setForeground(Color.WHITE);
  grandfatherpanel.add(addcustomerpanel,"name_19239433071790");
  addcustomerpanel.setLayout(null);
  JLabel label_11=new JLabel("Name :");
  label_11.setForeground(new Color(241,57,83));
  label_11.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_11.setBounds(34,206,194,41);
  addcustomerpanel.add(label_11);
  JLabel lblcustomerDetails=new JLabel("<html><u>Customer Details<u><html>");
  lblcustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblcustomerDetails.setForeground(new Color(241,57,83));
  lblcustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcustomerDetails.setBackground(Color.WHITE);
  lblcustomerDetails.setBounds(532,0,664,98);
  addcustomerpanel.add(lblcustomerDetails);
  cnametf=new JTextField();
  cnametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cnametf.setColumns(10);
  cnametf.setBounds(34,249,319,41);
  addcustomerpanel.add(cnametf);
  JLabel label_12=new JLabel("Gender :");
  label_12.setForeground(new Color(241,57,83));
  label_12.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_12.setBounds(34,314,194,41);
  addcustomerpanel.add(label_12);
  JRadioButton malerdbtn1=new JRadioButton("Male");
  malerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent maleactionc){
      malerdbtn1();
    }
  }
);
  malerdbtn1.setForeground(Color.DARK_GRAY);
  malerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerdbtn1.setBounds(34,348,142,41);
  addcustomerpanel.add(malerdbtn1);
  JRadioButton femalerdbtn1=new JRadioButton("Female");
  femalerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleaction1){
      femalerdbtn1();
    }
  }
);
  femalerdbtn1.setForeground(Color.DARK_GRAY);
  femalerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerdbtn1.setBounds(195,348,142,41);
  addcustomerpanel.add(femalerdbtn1);
  btngrp1.add(malerdbtn1);
  btngrp1.add(femalerdbtn1);
  JLabel label_13=new JLabel("Date Of Birth :");
  label_13.setForeground(new Color(241,57,83));
  label_13.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_13.setBounds(34,390,194,41);
  addcustomerpanel.add(label_13);
  JComboBox cdatecb=new JComboBox(dayarr);
  cdatecb.setBounds(34,444,70,41);
  addcustomerpanel.add(cdatecb);
  JComboBox cmonthcb=new JComboBox(monarr);
  cmonthcb.setBounds(131,444,70,41);
  addcustomerpanel.add(cmonthcb);
  JComboBox cyearcb=new JComboBox(yeararr);
  cyearcb.setBounds(222,444,103,41);
  addcustomerpanel.add(cyearcb);
  JLabel label_14=new JLabel("Address :");
  label_14.setForeground(new Color(241,57,83));
  label_14.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_14.setBounds(34,498,194,41);
  addcustomerpanel.add(label_14);
  JTextArea caddressta=new JTextArea();
  caddressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  caddressta.setBounds(34,537,319,165);
  addcustomerpanel.add(caddressta);
  JLabel label_15=new JLabel("Telephone :");
  label_15.setForeground(new Color(241,57,83));
  label_15.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_15.setBounds(438,113,194,41);
  addcustomerpanel.add(label_15);
  cmobtf=new JTextField();
  cmobtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cmobtf.setColumns(10);
  cmobtf.setBounds(438,152,319,41);
  addcustomerpanel.add(cmobtf);
  JLabel label_16=new JLabel("Email :");
  label_16.setForeground(new Color(241,57,83));
  label_16.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_16.setBounds(438,236,194,41);
  addcustomerpanel.add(label_16);
  cemailtf=new JTextField();
  cemailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cemailtf.setColumns(10);
  cemailtf.setBounds(438,274,319,41);
  addcustomerpanel.add(cemailtf);
  JLabel lblSalary=new JLabel("Salary :");
  lblSalary.setForeground(new Color(241,57,83));
  lblSalary.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblSalary.setBounds(438,346,194,41);
  addcustomerpanel.add(lblSalary);
  csalarytf=new JTextField();
  csalarytf.setFont(new Font("Tahoma",Font.PLAIN,17));
  csalarytf.setColumns(10);
  csalarytf.setBounds(438,384,319,41);
  addcustomerpanel.add(csalarytf);
  JLabel lblEnterYourAgent=new JLabel("Enter Your Agent ID :");
  lblEnterYourAgent.setForeground(new Color(241,57,83));
  lblEnterYourAgent.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblEnterYourAgent.setBounds(438,466,319,41);
  addcustomerpanel.add(lblEnterYourAgent);
  caidtf=new JTextField();
  caidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  caidtf.setColumns(10);
  caidtf.setBounds(438,510,319,41);
  addcustomerpanel.add(caidtf);
  JButton btnCheckInsurance=new JButton("Check Insurance");
  btnCheckInsurance.setCursor(cur);
  btnCheckInsurance.setForeground(Color.WHITE);
  btnCheckInsurance.setFont(new Font("Tahoma",Font.BOLD,20));
  btnCheckInsurance.setBackground(new Color(241,57,83));
  btnCheckInsurance.setBounds(438,576,319,55);
  addcustomerpanel.add(btnCheckInsurance);
  JPanel parentpanelc=new JPanel();
  parentpanelc.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanelc.setBounds(897,152,689,540);
  addcustomerpanel.add(parentpanelc);
  parentpanelc.setLayout(cl4);
  JPanel tinsurancepanel=new JPanel();
  parentpanelc.add(tinsurancepanel,"name_73735057972235");
  tinsurancepanel.setLayout(null);
  JScrollPane scrollPane_3=new JScrollPane();
  scrollPane_3.setBounds(0,0,685,466);
  tinsurancepanel.add(scrollPane_3);
  tinsurancetable=new JTable();
  scrollPane_3.setViewportView(tinsurancetable);
  JLabel tinsurancelabel=new JLabel("* Term Insurance has been selected.");
  tinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  tinsurancelabel.setForeground(new Color(241,57,83));
  tinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  tinsurancelabel.setBounds(0,466,685,70);
  tinsurancepanel.add(tinsurancelabel);
  JPanel cinsurancepanel=new JPanel();
  parentpanelc.add(cinsurancepanel,"name_73791843709339");
  cinsurancepanel.setLayout(null);
  JScrollPane scrollPane_2=new JScrollPane();
  scrollPane_2.setBounds(0,0,685,466);
  cinsurancepanel.add(scrollPane_2);
  cinsurancetable=new JTable();
  scrollPane_2.setViewportView(cinsurancetable);
  JLabel cinsurancelabel=new JLabel("* Child Plan Insurance has been selected.");
  cinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  cinsurancelabel.setForeground(new Color(241,57,83));
  cinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  cinsurancelabel.setBounds(0,466,685,70);
  cinsurancepanel.add(cinsurancelabel);
  JPanel winsurancepanel=new JPanel();
  parentpanelc.add(winsurancepanel,"name_73812949494419");
  winsurancepanel.setLayout(null);
  JScrollPane scrollPane_1=new JScrollPane();
  scrollPane_1.setBounds(0,0,685,466);
  winsurancepanel.add(scrollPane_1);
  winsurancetable=new JTable();
  scrollPane_1.setViewportView(winsurancetable);
  JLabel lblWholeLife_1=new JLabel("* Whole Life Insurance has been selected.");
  lblWholeLife_1.setHorizontalAlignment(SwingConstants.CENTER);
  lblWholeLife_1.setForeground(new Color(241,57,83));
  lblWholeLife_1.setFont(new Font("Tahoma",Font.ITALIC,20));
  lblWholeLife_1.setBounds(0,466,685,70);
  winsurancepanel.add(lblWholeLife_1);
  JPanel credundantpanel=new JPanel();
  parentpanelc.add(credundantpanel,"name_73862456257256");
  cl4.show(parentpanelc,"name_73862456257256");
  JButton btnSubmitDetails=new JButton("Submit Details");
  btnSubmitDetails.setCursor(cur);
  btnSubmitDetails.setForeground(Color.WHITE);
  btnSubmitDetails.setFont(new Font("Tahoma",Font.BOLD,20));
  btnSubmitDetails.setBackground(new Color(241,57,83));
  btnSubmitDetails.setBounds(438,662,319,55);
  addcustomerpanel.add(btnSubmitDetails);
  JLabel lblCustomerId=new JLabel("Customer ID :");
  lblCustomerId.setForeground(new Color(241,57,83));
  lblCustomerId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblCustomerId.setBounds(34,113,194,41);
  addcustomerpanel.add(lblCustomerId);
  ccidtf=new JTextField();
  ccidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  ccidtf.setColumns(10);
  ccidtf.setBounds(34,152,319,41);
  addcustomerpanel.add(ccidtf);
  JPanel messagedisplaypanel=new JPanel();
  messagedisplaypanel.setBounds(897,706,508,31);
  addcustomerpanel.add(messagedisplaypanel);
  messagedisplaypanel.setLayout(cl5);
  JPanel messagedisplay=new JPanel();
  messagedisplaypanel.add(messagedisplay,"name_4659622588556");
  messagedisplay.setLayout(null);
  JLabel lblNewLabel_4=new JLabel("* Details have been submitted.");
  lblNewLabel_4.setFont(new Font("Tahoma",Font.PLAIN,17));
  lblNewLabel_4.setForeground(new Color(241,57,83));
  lblNewLabel_4.setBounds(0,0,508,29);
  messagedisplay.add(lblNewLabel_4);
  JPanel messageredundantpanel=new JPanel();
  messagedisplaypanel.add(messageredundantpanel,"name_4667681966752");
  cl5.show(messagedisplaypanel,"name_4667681966752");
  cl.show(grandfatherpanel,"name_19239387057142");
  JPanel viewcustomerpanel=new JPanel();
  grandfatherpanel.add(viewcustomerpanel,"name_7105952272002");
  viewcustomerpanel.setLayout(null);
  JScrollPane scrollPane_4=new JScrollPane();
  scrollPane_4.setBounds(26,150,1575,585);
  viewcustomerpanel.add(scrollPane_4);
  custdetailstb=new JTable();
  custdetailstb.setRowHeight(50);
  scrollPane_4.setViewportView(custdetailstb);
  custdetailstb.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  JLabel lblviewCustomerDetails=new JLabel("<html><u>View Customer Details<u><html>");
  lblviewCustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblviewCustomerDetails.setForeground(new Color(241,57,83));
  lblviewCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblviewCustomerDetails.setBackground(Color.WHITE);
  lblviewCustomerDetails.setBounds(481,0,664,98);
  viewcustomerpanel.add(lblviewCustomerDetails);
  JButton btnLoadCustomerDetails=new JButton("Load Customer Details");
  btnLoadCustomerDetails.setCursor(cur);
  btnLoadCustomerDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent loadcustdetails){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from customerinfo";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        custdetailstb.setModel(DbUtils.resultSetToTableModel(rs));
        viewcustomerpanel.revalidate();
        frame.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  btnLoadCustomerDetails.setForeground(Color.WHITE);
  btnLoadCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,15));
  btnLoadCustomerDetails.setBackground(new Color(241,57,83));
  btnLoadCustomerDetails.setBounds(1271,85,277,48);
  viewcustomerpanel.add(btnLoadCustomerDetails);
  JPanel contactuspanel=new JPanel();
  grandfatherpanel.add(contactuspanel,"name_38683474436453");
  contactuspanel.setLayout(null);
  JLabel lblcontactUss=new JLabel("<html><u>Contact Us<u><html>");
  lblcontactUss.setHorizontalAlignment(SwingConstants.CENTER);
  lblcontactUss.setForeground(new Color(241,57,83));
  lblcontactUss.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcontactUss.setBackground(Color.WHITE);
  lblcontactUss.setBounds(497,0,664,98);
  contactuspanel.add(lblcontactUss);
  JButton btnNewButton_2=new JButton("");
  btnNewButton_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.gmail.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_2.setIcon(new ImageIcon(main_p.class.getResource("/images/2000px-New_Logo_Gmail.svg_99x87.png")));
  btnNewButton_2.setBounds(74,119,105,87);
  contactuspanel.add(btnNewButton_2);
  JButton button_3=new JButton("");
  button_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.twitter.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_3.setBackground(Color.WHITE);
  button_3.setIcon(new ImageIcon(main_p.class.getResource("/images/dezeen_twitter-bird_99x87.gif")));
  button_3.setBounds(74,255,105,87);
  contactuspanel.add(button_3);
  JButton button_4=new JButton("");
  button_4.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.facebook.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_4.setIcon(new ImageIcon(main_p.class.getResource("/images/flogo_rgb_hex-brc-site-250_99x87.png")));
  button_4.setBackground(Color.WHITE);
  button_4.setBounds(74,386,105,87);
  contactuspanel.add(button_4);
  JButton button_5=new JButton("");
  button_5.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.shahandanchor.com/home/");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_5.setIcon(new ImageIcon(main_p.class.getResource("/images/Shah-And-Anchor-Kutchhi-Engineering-College_99x87.jpg")));
  button_5.setBackground(Color.WHITE);
  button_5.setBounds(74,513,105,87);
  contactuspanel.add(button_5);
  JPanel panel_6=new JPanel();
  panel_6.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  panel_6.setBounds(234,119,969,439);
  contactuspanel.add(panel_6);
  panel_6.setLayout(null);
  JButton btnNewButton_3=new JButton("New button");
  btnNewButton_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("https://www.google.com/maps/place/Shah+%26+Anchor+Kutchhi+Engineering+College/@19.048219,72.91165,14z/data=!4m5!3m4!1s0x0:0x9ebbdeaea9ec24ae!8m2!3d19.0482157!4d72.9116581?hl=en");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_3.setIcon(new ImageIcon(main_p.class.getResource("/images/Screenshot_2018-10-03 Contact Us - SAKEC-Shah Anchor Kutchhi Engineering College.png")));
  btnNewButton_3.setBounds(10,55,950,328);
  panel_6.add(btnNewButton_3);
  JLabel lblNewLabel_7=new JLabel("<html>Postal Address<br/>\r\n\r\nShah & Anchor Kutchhi Engineering College\r\n\r\nMahavir Education Trust\u2019s Chowk,<br/> Waman Tukaram Patil Marg,<br/> Next to Dukes Co.,<br/> Chembur, Mumbai \u2013 400 088.\r\n<br/>\r\n<br/><br/><br/>\r\nContact Details\r\n\r\n<br/>Contact-No: 022-25580854\r\n\r\n<br/>Fax-No:25568100\r\n\r\n<br/>Email-Id: info@sakec.ac.in </html>");
  lblNewLabel_7.setVerticalAlignment(SwingConstants.TOP);
  lblNewLabel_7.setFont(new Font("Tahoma",Font.BOLD,20));
  lblNewLabel_7.setForeground(new Color(241,57,83));
  lblNewLabel_7.setBounds(1228,119,374,439);
  contactuspanel.add(lblNewLabel_7);
  btnTermLifeInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      cl3.show(parentpanel,"name_130515214938554");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Term Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      frame.revalidate();
      parentpanel.revalidate();
      insurance1();
    }
  }
);
  button_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event3){
      cl3.show(parentpanel,"name_131091957135037");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Whole Life Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance3();
    }
  }
);
  button_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event2){
      cl3.show(parentpanel,"name_130839478752224");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Child Plan Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance2();
    }
  }
);
  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,16));
  JLabel label_6=new JLabel("resiz");
  label_6.setIcon(new ImageIcon(main_p.class.getResource("/images/Customer_Female_Add_190x142.jpg")));
  label_6.setHorizontalAlignment(SwingConstants.CENTER);
  label_6.setBounds(900,0,178,142);
  panel.add(label_6);
  JButton btnAddCustomer=new JButton("Add Customer");
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent customeraddevent){
      cl.show(grandfatherpanel,"name_19239433071790");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnAddCustomer.setForeground(Color.WHITE);
  btnAddCustomer.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.setBackground(new Color(241,57,83));
  btnAddCustomer.setBounds(900,142,178,46);
  panel.add(btnAddCustomer);
  JButton btnViewCustomers=new JButton("View Customers");
  btnViewCustomers.setCursor(cur);
  btnViewCustomers.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e7){
      cl.show(grandfatherpanel,"name_7105952272002");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewCustomers.setForeground(Color.WHITE);
  btnViewCustomers.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewCustomers.setBackground(new Color(241,57,83));
  btnViewCustomers.setBounds(1102,142,178,46);
  panel.add(btnViewCustomers);
  JPanel panel_2=new JPanel();
  panel_2.setBounds(1102,0,178,142);
  panel.add(panel_2);
  panel_2.setLayout(null);
  JLabel lblNewLabel_5=new JLabel("New label");
  lblNewLabel_5.setIcon(new ImageIcon(main_p.class.getResource("/images/User_info_man_male_profile_information_190x142.png")));
  lblNewLabel_5.setBounds(0,0,178,142);
  panel_2.add(lblNewLabel_5);
  JButton btnNewButton_1=new JButton("X");
  btnNewButton_1.setCursor(cur);
  btnNewButton_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent exitevent){
      frameexit=new JFrame("Exit");
      if (JOptionPane.showConfirmDialog(frameexit,"Confirm if you want to exit","Login Systems",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        System.exit(0);
      }
    }
  }
);
  btnNewButton_1.setFont(new Font("Tahoma",Font.BOLD,17));
  btnNewButton_1.setBackground(Color.DARK_GRAY);
  btnNewButton_1.setForeground(Color.RED);
  btnNewButton_1.setBounds(1582,0,68,29);
  panel.add(btnNewButton_1);
  JButton button=new JButton("---");
  button.setCursor(cur);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent minimizeevent){
      frame.setState(JFrame.ICONIFIED);
    }
  }
);
  button.setForeground(Color.RED);
  button.setFont(new Font("Tahoma",Font.BOLD,19));
  button.setBackground(Color.DARK_GRAY);
  button.setBounds(1504,0,68,29);
  panel.add(button);
  JPanel panel_5=new JPanel();
  panel_5.setLayout(null);
  panel_5.setBounds(1304,0,178,142);
  panel.add(panel_5);
  JLabel label_17=new JLabel("New label");
  label_17.setIcon(new ImageIcon(main_p.class.getResource("/images/guy_190x142.png")));
  label_17.setBounds(0,0,178,142);
  panel_5.add(label_17);
  JButton btnContactUs=new JButton("Contact Us");
  btnContactUs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_38683474436453");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnContactUs.setForeground(Color.WHITE);
  btnContactUs.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnContactUs.setBackground(new Color(241,57,83));
  btnContactUs.setBounds(1304,142,178,46);
  panel.add(btnContactUs);
  btnNewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_19239371696803");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  submitbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitevent){
      if (genderval == 1) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Male");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      if (genderval == 2) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)  ";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Female");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      nametf.setText(null);
      yearcb.setSelectedIndex(0);
      monthcb.setSelectedIndex(0);
      datecb.setSelectedIndex(0);
      yearcb1.setSelectedIndex(0);
      monthcb1.setSelectedIndex(0);
      datecb1.setSelectedIndex(0);
      addressta.setText(null);
      mobiletf.setText(null);
      emailtf.setText(null);
      worketf.setText(null);
      aidtf.setText(null);
      cl2.show(panel_1,"name_11001346500172");
      panel_1.revalidate();
      addagentpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewagent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent viewagentevent){
      cl.show(grandfatherpanel,"name_19239332734906");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnCheckInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent checkinevent){
      String ans=caidtf.getText();
      int id=Integer.parseInt(ans);
      try {
        String insurancetype=null;
        Connection conn3=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        PreparedStatement stmt=conn3.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
        stmt.setInt(1,id);
        ResultSet rs=stmt.executeQuery();
        while (rs.next()) {
          insurancetype=rs.getString(1);
        }
        if (insurancetype.equals("Term Insurance")) {
          cl4.show(parentpanelc,"name_73735057972235");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from terminsurance");
          ResultSet rs1=stmt2.executeQuery();
          tinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          tinsurancetable.setRowHeight(225);
          tinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Child Plan Insurance")) {
          cl4.show(parentpanelc,"name_73791843709339");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from childinsurance");
          ResultSet rs1=stmt2.executeQuery();
          cinsurancetable.setRowHeight(225);
          cinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          cinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Whole Life Insurance")) {
          cl4.show(parentpanelc,"name_73812949494419");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from lifeinsurance");
          ResultSet rs1=stmt2.executeQuery();
          winsurancetable.setRowHeight(225);
          winsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          winsurancepanel.revalidate();
        }
      }
 catch (      Exception checkexception) {
        System.out.println(checkexception);
      }
    }
  }
);
  btnSubmitDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitaction){
      if (cgenderval == 1) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Male");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      if (cgenderval == 2) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?++)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Female");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      cnametf.setText(null);
      cyearcb.setSelectedIndex(0);
      cmonthcb.setSelectedIndex(0);
      cdatecb.setSelectedIndex(0);
      caddressta.setText(null);
      cmobtf.setText(null);
      ccidtf.setText(null);
      cemailtf.setText(null);
      caidtf.setText(null);
      csalarytf.setText(null);
      cl5.show(messagedisplaypanel,"name_4659622588556");
      addcustomerpanel.revalidate();
      frame.revalidate();
    }
  }
);
  frame.getContentPane().setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{panel,lblNewLabel}));
  frame.revalidate();
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  frame=new JFrame();
  frame.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      frameevent(e);
    }
  }
);
  frame.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    MouseEvent evt){
      mouseevent(evt);
    }
  }
);
  frame.setResizable(false);
  frame.setUndecorated(true);
  frame.setBounds(100,100,1650,1000);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  Cursor cur=new Cursor(Cursor.HAND_CURSOR);
  CardLayout cl5=new CardLayout(0,0);
  CardLayout cl4=new CardLayout(0,0);
  String[] dayarr=new String[31];
  for (int i=1; i < 32; i++) {
    dayarr[i - 1]=Integer.toString(i);
  }
  String monarr[]=new String[12];
  for (int i=1; i < 13; i++) {
    monarr[i - 1]=Integer.toString(i);
  }
  String yeararr[]=new String[78];
  for (int j=1940, k=0; j < 2018; j++, k++) {
    yeararr[k]=Integer.toString(j);
  }
  ButtonGroup btngrp1=new ButtonGroup();
  ImageIcon icon11=new ImageIcon("/java_project/src/images/VIR INSURANCE_cropped.jpg");
  frame.setIconImage(icon11.getImage());
  ButtonGroup btngrp=new ButtonGroup();
  frame.getContentPane().setLayout(null);
  JPanel panel=new JPanel();
  panel.setBounds(0,0,1650,188);
  panel.setBackground(Color.DARK_GRAY);
  frame.getContentPane().add(panel);
  panel.setLayout(null);
  JLabel lblNewLabel=new JLabel("New label");
  lblNewLabel.setIcon(new ImageIcon(main_p.class.getResource("/images/VIR INSURANCE.jpg")));
  lblNewLabel.setBounds(0,0,518,188);
  panel.add(lblNewLabel);
  JLabel lblNewLabel_2=new JLabel("resiz");
  lblNewLabel_2.setIcon(new ImageIcon(main_p.class.getResource("/images/security_agent_add_2_190x142.png")));
  lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
  lblNewLabel_2.setBounds(501,0,178,142);
  panel.add(lblNewLabel_2);
  JButton btnNewButton=new JButton("Add Agent");
  btnNewButton.setCursor(cur);
  btnNewButton.setBackground(new Color(241,57,83));
  btnNewButton.setForeground(Color.WHITE);
  btnNewButton.setBounds(501,142,178,46);
  panel.add(btnNewButton);
  JLabel label_10=new JLabel("resiz");
  label_10.setIcon(new ImageIcon(main_p.class.getResource("/images/Online_Agent_New_190x142.jpg")));
  label_10.setHorizontalAlignment(SwingConstants.CENTER);
  label_10.setBounds(701,0,178,142);
  panel.add(label_10);
  JButton btnViewagent=new JButton("View Agents");
  btnViewagent.setCursor(cur);
  btnViewagent.setForeground(Color.WHITE);
  btnViewagent.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewagent.setBackground(new Color(241,57,83));
  btnViewagent.setBounds(701,142,178,46);
  panel.add(btnViewagent);
  JPanel grandfatherpanel=new JPanel();
  grandfatherpanel.setBounds(0,189,1632,764);
  frame.getContentPane().add(grandfatherpanel);
  CardLayout cl=new CardLayout(0,0);
  grandfatherpanel.setLayout(cl);
  JPanel viewagentpanel=new JPanel();
  grandfatherpanel.add(viewagentpanel,"name_19239332734906");
  viewagentpanel.setLayout(null);
  JLabel lblagentDetails=new JLabel("<html><u>Agent Details <u><html>");
  lblagentDetails.setBounds(490,22,652,72);
  lblagentDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblagentDetails.setForeground(new Color(241,57,83));
  lblagentDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblagentDetails.setBackground(Color.WHITE);
  viewagentpanel.add(lblagentDetails);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setBounds(84,165,1480,556);
  viewagentpanel.add(scrollPane);
  table_4=new JTable();
  table_4.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  table_4.setRowHeight(50);
  scrollPane.setViewportView(table_4);
  JButton tablerefreshbtn=new JButton("Load Agent Details");
  tablerefreshbtn.setCursor(cur);
  tablerefreshbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  tablerefreshbtn.setBackground(new Color(241,57,83));
  tablerefreshbtn.setForeground(Color.WHITE);
  tablerefreshbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String tablepopulate="select * from agentinfo";
        PreparedStatement stmt=con.prepareStatement(tablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_4.setModel(DbUtils.resultSetToTableModel(rs));
        viewagentpanel.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  tablerefreshbtn.setBounds(1287,93,277,48);
  viewagentpanel.add(tablerefreshbtn);
  JPanel addagentpanel=new JPanel();
  addagentpanel.setForeground(new Color(241,57,83));
  grandfatherpanel.add(addagentpanel,"name_19239371696803");
  addagentpanel.setLayout(null);
  JLabel label=new JLabel("<html><u>Agent Details & Policies Sold<u><html>");
  label.setHorizontalAlignment(SwingConstants.CENTER);
  label.setForeground(new Color(241,57,83));
  label.setFont(new Font("Tahoma",Font.BOLD,45));
  label.setBackground(Color.WHITE);
  label.setBounds(488,13,664,98);
  addagentpanel.add(label);
  JLabel label_1=new JLabel("Name :");
  label_1.setForeground(new Color(241,57,83));
  label_1.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_1.setBounds(41,129,194,41);
  addagentpanel.add(label_1);
  nametf=new JTextField();
  nametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  nametf.setColumns(10);
  nametf.setBounds(41,169,319,41);
  addagentpanel.add(nametf);
  JLabel label_2=new JLabel("Gender :");
  label_2.setForeground(new Color(241,57,83));
  label_2.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_2.setBounds(41,242,194,41);
  addagentpanel.add(label_2);
  JLabel label_3=new JLabel("Date Of Birth :");
  label_3.setForeground(new Color(241,57,83));
  label_3.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_3.setBounds(41,363,194,41);
  addagentpanel.add(label_3);
  JLabel label_4=new JLabel("Address :");
  label_4.setForeground(new Color(241,57,83));
  label_4.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_4.setBounds(41,483,194,41);
  addagentpanel.add(label_4);
  JRadioButton malerd=new JRadioButton("Male");
  malerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent malerdevent){
      malerdbtn();
    }
  }
);
  malerd.setForeground(Color.DARK_GRAY);
  malerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerd.setBounds(41,290,142,41);
  addagentpanel.add(malerd);
  JRadioButton femalerd=new JRadioButton("Female");
  femalerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleevent){
      femalerdbtn();
    }
  }
);
  femalerd.setForeground(Color.DARK_GRAY);
  femalerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerd.setBounds(206,290,142,41);
  addagentpanel.add(femalerd);
  JComboBox datecb=new JComboBox(dayarr);
  datecb.setBounds(41,415,70,41);
  addagentpanel.add(datecb);
  JComboBox monthcb=new JComboBox(monarr);
  monthcb.setBounds(137,415,70,41);
  addagentpanel.add(monthcb);
  JComboBox yearcb=new JComboBox(yeararr);
  yearcb.setBounds(229,415,103,41);
  addagentpanel.add(yearcb);
  JTextArea addressta=new JTextArea();
  addressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  addressta.setBounds(41,535,319,165);
  addagentpanel.add(addressta);
  JLabel label_5=new JLabel("Work Experience (Yrs) :");
  label_5.setForeground(new Color(241,57,83));
  label_5.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_5.setBounds(488,129,295,41);
  addagentpanel.add(label_5);
  worketf=new JTextField();
  worketf.setFont(new Font("Tahoma",Font.PLAIN,17));
  worketf.setColumns(10);
  worketf.setBounds(488,169,319,41);
  addagentpanel.add(worketf);
  JLabel lblTelephone=new JLabel("Telephone :");
  lblTelephone.setForeground(new Color(241,57,83));
  lblTelephone.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblTelephone.setBounds(488,252,194,41);
  addagentpanel.add(lblTelephone);
  mobiletf=new JTextField();
  mobiletf.setFont(new Font("Tahoma",Font.PLAIN,17));
  mobiletf.setColumns(10);
  mobiletf.setBounds(488,291,319,41);
  addagentpanel.add(mobiletf);
  JLabel label_7=new JLabel("Email :");
  label_7.setForeground(new Color(241,57,83));
  label_7.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_7.setBounds(488,374,194,41);
  addagentpanel.add(label_7);
  emailtf=new JTextField();
  emailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  emailtf.setColumns(10);
  emailtf.setBounds(488,412,319,41);
  addagentpanel.add(emailtf);
  JLabel label_8=new JLabel("Policy Details");
  label_8.setHorizontalAlignment(SwingConstants.CENTER);
  label_8.setForeground(new Color(241,57,83));
  label_8.setFont(new Font("Tahoma",Font.BOLD,35));
  label_8.setBounds(1015,99,310,53);
  addagentpanel.add(label_8);
  JPanel insurancespanel=new JPanel();
  insurancespanel.setLayout(null);
  insurancespanel.setForeground(Color.WHITE);
  insurancespanel.setBounds(890,169,231,198);
  addagentpanel.add(insurancespanel);
  JButton button_1=new JButton("Child Plan Insurance");
  button_1.setCursor(cur);
  button_1.setForeground(Color.WHITE);
  button_1.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_1.setBackground(new Color(241,57,83));
  button_1.setBounds(0,79,231,42);
  insurancespanel.add(button_1);
  JButton button_2=new JButton("Whole Life Insurance");
  button_2.setCursor(cur);
  button_2.setForeground(Color.WHITE);
  button_2.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_2.setBackground(new Color(241,57,83));
  button_2.setBounds(0,156,231,42);
  insurancespanel.add(button_2);
  JButton btnTermLifeInsurance=new JButton("Term Life Insurance");
  btnTermLifeInsurance.setCursor(cur);
  btnTermLifeInsurance.setForeground(Color.WHITE);
  btnTermLifeInsurance.setFont(new Font("Tahoma",Font.PLAIN,15));
  btnTermLifeInsurance.setBackground(new Color(241,57,83));
  btnTermLifeInsurance.setBounds(0,0,231,42);
  insurancespanel.add(btnTermLifeInsurance);
  JPanel parentpanel=new JPanel();
  parentpanel.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanel.setBounds(1150,170,434,480);
  addagentpanel.add(parentpanel);
  CardLayout cl3=new CardLayout(0,0);
  parentpanel.setLayout(cl3);
  JPanel lifelinsurancepanel=new JPanel();
  parentpanel.add(lifelinsurancepanel,"name_131091957135037");
  lifelinsurancepanel.setLayout(null);
  JLabel lblWholeLife=new JLabel("* Whole Life Insurance is selected.");
  lblWholeLife.setForeground(new Color(241,57,83));
  lblWholeLife.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblWholeLife.setBackground(Color.WHITE);
  lblWholeLife.setBounds(0,420,430,56);
  lifelinsurancepanel.add(lblWholeLife);
  JPanel childinsurancepanel=new JPanel();
  parentpanel.add(childinsurancepanel,"name_130839478752224");
  childinsurancepanel.setLayout(null);
  JPanel terminsurancepanel=new JPanel();
  parentpanel.add(terminsurancepanel,"name_130515214938554");
  terminsurancepanel.setLayout(null);
  JPanel redundantpanel2=new JPanel();
  parentpanel.add(redundantpanel2,"name_63847240216221");
  cl3.show(parentpanel,"name_63847240216221");
  JComboBox datecb1=new JComboBox(dayarr);
  datecb1.setBounds(488,516,70,41);
  addagentpanel.add(datecb1);
  JComboBox monthcb1=new JComboBox(monarr);
  monthcb1.setBounds(585,516,70,41);
  addagentpanel.add(monthcb1);
  JComboBox yearcb1=new JComboBox(yeararr);
  yearcb1.setBounds(680,516,103,41);
  addagentpanel.add(yearcb1);
  JLabel label_9=new JLabel("Date Of Joining :");
  label_9.setForeground(new Color(241,57,83));
  label_9.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_9.setBounds(488,464,194,41);
  addagentpanel.add(label_9);
  String column[]={"AGE","TERM","SUM ASSURESD","PREMIMUM"};
  String data[][]={{"AGE","TERM","SUM ASSURESD","PREMIMUM"},{"25 Years","40 Years","Rs . 1 Cr."," Rs . 10,500"},{"35 Years","30 Years","Rs . 25 Lakhs","Rs . 8,800"}};
  String column1[]={"TERM","SUM ASSURED","PREMIUM"};
  String data1[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.3 Lakhs","Rs.10,000"},{"35 Years","Rs.4 Lakhs","Rs.18,000"}};
  String column2[]={"TERM","SUM ASSURED","PREMIUM"};
  String data2[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.18 Lakhs","Rs.1 Lakh"},{"35 Years","Rs.40 Lakhs","Rs.4 Lakhs"}};
  table_3=new JTable();
  table_3.setRowHeight(210);
  table_3.setBounds(0,0,430,420);
  lifelinsurancepanel.add(table_3);
  table=new JTable();
  table.setBounds(0,0,430,420);
  table.setRowHeight(210);
  terminsurancepanel.add(table);
  JLabel lblNewLabel_1=new JLabel("* Term Life Insurance is selected.");
  lblNewLabel_1.setForeground(new Color(241,57,83));
  lblNewLabel_1.setBackground(Color.WHITE);
  lblNewLabel_1.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblNewLabel_1.setBounds(0,420,430,56);
  terminsurancepanel.add(lblNewLabel_1);
  table_2=new JTable();
  table_2.setBounds(0,0,430,420);
  table_2.setRowHeight(210);
  childinsurancepanel.add(table_2);
  JLabel lblChildPlan=new JLabel("* Child Plan Insurance is selected.");
  lblChildPlan.setForeground(new Color(241,57,83));
  lblChildPlan.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblChildPlan.setBackground(Color.WHITE);
  lblChildPlan.setBounds(0,420,430,56);
  childinsurancepanel.add(lblChildPlan);
  JLabel lblAgentId=new JLabel("Agent ID :");
  lblAgentId.setForeground(new Color(241,57,83));
  lblAgentId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblAgentId.setBounds(488,568,194,41);
  addagentpanel.add(lblAgentId);
  aidtf=new JTextField();
  aidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  aidtf.setColumns(10);
  aidtf.setBounds(488,620,319,41);
  addagentpanel.add(aidtf);
  JButton submitbtn=new JButton("SUBMIT");
  submitbtn.setCursor(cur);
  submitbtn.setForeground(Color.WHITE);
  submitbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  submitbtn.setBackground(new Color(241,57,83));
  submitbtn.setBounds(532,687,231,42);
  addagentpanel.add(submitbtn);
  CardLayout cl2=new CardLayout(0,0);
  JPanel panel_1=new JPanel();
  panel_1.setBounds(890,687,461,53);
  addagentpanel.add(panel_1);
  panel_1.setLayout(cl2);
  JPanel panel_3=new JPanel();
  panel_1.add(panel_3,"name_11001346500172");
  panel_3.setLayout(null);
  JLabel lblNewLabel_3=new JLabel("* Agent details have been submitted.");
  lblNewLabel_3.setForeground(new Color(241,57,83));
  lblNewLabel_3.setFont(new Font("Tahoma",Font.BOLD,17));
  lblNewLabel_3.setBounds(0,0,451,53);
  panel_3.add(lblNewLabel_3);
  JPanel panel_4=new JPanel();
  panel_1.add(panel_4,"name_11082648641670");
  cl2.show(panel_1,"name_11082648641670");
  JLabel warninglabel=new JLabel("(8 Digit Number)");
  warninglabel.setForeground(new Color(241,57,83));
  warninglabel.setFont(new Font("Tahoma",Font.PLAIN,14));
  warninglabel.setBounds(488,336,224,20);
  addagentpanel.add(warninglabel);
  JPanel buttonpanel=new JPanel();
  buttonpanel.setBounds(890,415,231,218);
  addagentpanel.add(buttonpanel);
  buttonpanel.setLayout(new CardLayout(0,0));
  JPanel cibtnpanel=new JPanel();
  buttonpanel.add(cibtnpanel,"name_94240132484303");
  cibtnpanel.setLayout(null);
  JPanel tibtnpanel=new JPanel();
  buttonpanel.add(tibtnpanel,"name_94280454630953");
  JPanel libtnpanel=new JPanel();
  buttonpanel.add(libtnpanel,"name_94295818881193");
  JPanel redundantpanel=new JPanel();
  grandfatherpanel.add(redundantpanel,"name_19239387057142");
  JPanel addcustomerpanel=new JPanel();
  addcustomerpanel.setForeground(Color.WHITE);
  grandfatherpanel.add(addcustomerpanel,"name_19239433071790");
  addcustomerpanel.setLayout(null);
  JLabel label_11=new JLabel("Name :");
  label_11.setForeground(new Color(241,57,83));
  label_11.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_11.setBounds(34,206,194,41);
  addcustomerpanel.add(label_11);
  JLabel lblcustomerDetails=new JLabel("<html><u>Customer Details<u><html>");
  lblcustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblcustomerDetails.setForeground(new Color(241,57,83));
  lblcustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcustomerDetails.setBackground(Color.WHITE);
  lblcustomerDetails.setBounds(532,0,664,98);
  addcustomerpanel.add(lblcustomerDetails);
  cnametf=new JTextField();
  cnametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cnametf.setColumns(10);
  cnametf.setBounds(34,249,319,41);
  addcustomerpanel.add(cnametf);
  JLabel label_12=new JLabel("Gender :");
  label_12.setForeground(new Color(241,57,83));
  label_12.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_12.setBounds(34,314,194,41);
  addcustomerpanel.add(label_12);
  JRadioButton malerdbtn1=new JRadioButton("Male");
  malerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent maleactionc){
      malerdbtn1();
    }
  }
);
  malerdbtn1.setForeground(Color.DARK_GRAY);
  malerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerdbtn1.setBounds(34,348,142,41);
  addcustomerpanel.add(malerdbtn1);
  JRadioButton femalerdbtn1=new JRadioButton("Female");
  femalerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleaction1){
      femalerdbtn1();
    }
  }
);
  femalerdbtn1.setForeground(Color.DARK_GRAY);
  femalerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerdbtn1.setBounds(195,348,142,41);
  addcustomerpanel.add(femalerdbtn1);
  btngrp1.add(malerdbtn1);
  btngrp1.add(femalerdbtn1);
  JLabel label_13=new JLabel("Date Of Birth :");
  label_13.setForeground(new Color(241,57,83));
  label_13.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_13.setBounds(34,390,194,41);
  addcustomerpanel.add(label_13);
  JComboBox cdatecb=new JComboBox(dayarr);
  cdatecb.setBounds(34,444,70,41);
  addcustomerpanel.add(cdatecb);
  JComboBox cmonthcb=new JComboBox(monarr);
  cmonthcb.setBounds(131,444,70,41);
  addcustomerpanel.add(cmonthcb);
  JComboBox cyearcb=new JComboBox(yeararr);
  cyearcb.setBounds(222,444,103,41);
  addcustomerpanel.add(cyearcb);
  JLabel label_14=new JLabel("Address :");
  label_14.setForeground(new Color(241,57,83));
  label_14.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_14.setBounds(34,498,194,41);
  addcustomerpanel.add(label_14);
  JTextArea caddressta=new JTextArea();
  caddressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  caddressta.setBounds(34,537,319,165);
  addcustomerpanel.add(caddressta);
  JLabel label_15=new JLabel("Telephone :");
  label_15.setForeground(new Color(241,57,83));
  label_15.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_15.setBounds(438,113,194,41);
  addcustomerpanel.add(label_15);
  cmobtf=new JTextField();
  cmobtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cmobtf.setColumns(10);
  cmobtf.setBounds(438,152,319,41);
  addcustomerpanel.add(cmobtf);
  JLabel label_16=new JLabel("Email :");
  label_16.setForeground(new Color(241,57,83));
  label_16.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_16.setBounds(438,236,194,41);
  addcustomerpanel.add(label_16);
  cemailtf=new JTextField();
  cemailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cemailtf.setColumns(10);
  cemailtf.setBounds(438,274,319,41);
  addcustomerpanel.add(cemailtf);
  JLabel lblSalary=new JLabel("Salary :");
  lblSalary.setForeground(new Color(241,57,83));
  lblSalary.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblSalary.setBounds(438,346,194,41);
  addcustomerpanel.add(lblSalary);
  csalarytf=new JTextField();
  csalarytf.setFont(new Font("Tahoma",Font.PLAIN,17));
  csalarytf.setColumns(10);
  csalarytf.setBounds(438,384,319,41);
  addcustomerpanel.add(csalarytf);
  JLabel lblEnterYourAgent=new JLabel("Enter Your Agent ID :");
  lblEnterYourAgent.setForeground(new Color(241,57,83));
  lblEnterYourAgent.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblEnterYourAgent.setBounds(438,466,319,41);
  addcustomerpanel.add(lblEnterYourAgent);
  caidtf=new JTextField();
  caidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  caidtf.setColumns(10);
  caidtf.setBounds(438,510,319,41);
  addcustomerpanel.add(caidtf);
  JButton btnCheckInsurance=new JButton("Check Insurance");
  btnCheckInsurance.setCursor(cur);
  btnCheckInsurance.setForeground(Color.WHITE);
  btnCheckInsurance.setFont(new Font("Tahoma",Font.BOLD,20));
  btnCheckInsurance.setBackground(new Color(241,57,83));
  btnCheckInsurance.setBounds(438,576,319,55);
  addcustomerpanel.add(btnCheckInsurance);
  JPanel parentpanelc=new JPanel();
  parentpanelc.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanelc.setBounds(897,152,689,540);
  addcustomerpanel.add(parentpanelc);
  parentpanelc.setLayout(cl4);
  JPanel tinsurancepanel=new JPanel();
  parentpanelc.add(tinsurancepanel,"name_73735057972235");
  tinsurancepanel.setLayout(null);
  JScrollPane scrollPane_3=new JScrollPane();
  scrollPane_3.setBounds(0,0,685,466);
  tinsurancepanel.add(scrollPane_3);
  tinsurancetable=new JTable();
  scrollPane_3.setViewportView(tinsurancetable);
  JLabel tinsurancelabel=new JLabel("* Term Insurance has been selected.");
  tinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  tinsurancelabel.setForeground(new Color(241,57,83));
  tinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  tinsurancelabel.setBounds(0,466,685,70);
  tinsurancepanel.add(tinsurancelabel);
  JPanel cinsurancepanel=new JPanel();
  parentpanelc.add(cinsurancepanel,"name_73791843709339");
  cinsurancepanel.setLayout(null);
  JScrollPane scrollPane_2=new JScrollPane();
  scrollPane_2.setBounds(0,0,685,466);
  cinsurancepanel.add(scrollPane_2);
  cinsurancetable=new JTable();
  scrollPane_2.setViewportView(cinsurancetable);
  JLabel cinsurancelabel=new JLabel("* Child Plan Insurance has been selected.");
  cinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  cinsurancelabel.setForeground(new Color(241,57,83));
  cinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  cinsurancelabel.setBounds(0,466,685,70);
  cinsurancepanel.add(cinsurancelabel);
  JPanel winsurancepanel=new JPanel();
  parentpanelc.add(winsurancepanel,"name_73812949494419");
  winsurancepanel.setLayout(null);
  JScrollPane scrollPane_1=new JScrollPane();
  scrollPane_1.setBounds(0,0,685,466);
  winsurancepanel.add(scrollPane_1);
  winsurancetable=new JTable();
  scrollPane_1.setViewportView(winsurancetable);
  JLabel lblWholeLife_1=new JLabel("* Whole Life Insurance has been selected.");
  lblWholeLife_1.setHorizontalAlignment(SwingConstants.CENTER);
  lblWholeLife_1.setForeground(new Color(241,57,83));
  lblWholeLife_1.setFont(new Font("Tahoma",Font.ITALIC,20));
  lblWholeLife_1.setBounds(0,466,685,70);
  winsurancepanel.add(lblWholeLife_1);
  JPanel credundantpanel=new JPanel();
  parentpanelc.add(credundantpanel,"name_73862456257256");
  cl4.show(parentpanelc,"name_73862456257256");
  JButton btnSubmitDetails=new JButton("Submit Details");
  btnSubmitDetails.setCursor(cur);
  btnSubmitDetails.setForeground(Color.WHITE);
  btnSubmitDetails.setFont(new Font("Tahoma",Font.BOLD,20));
  btnSubmitDetails.setBackground(new Color(241,57,83));
  btnSubmitDetails.setBounds(438,662,319,55);
  addcustomerpanel.add(btnSubmitDetails);
  JLabel lblCustomerId=new JLabel("Customer ID :");
  lblCustomerId.setForeground(new Color(241,57,83));
  lblCustomerId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblCustomerId.setBounds(34,113,194,41);
  addcustomerpanel.add(lblCustomerId);
  ccidtf=new JTextField();
  ccidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  ccidtf.setColumns(10);
  ccidtf.setBounds(34,152,319,41);
  addcustomerpanel.add(ccidtf);
  JPanel messagedisplaypanel=new JPanel();
  messagedisplaypanel.setBounds(897,706,508,31);
  addcustomerpanel.add(messagedisplaypanel);
  messagedisplaypanel.setLayout(cl5);
  JPanel messagedisplay=new JPanel();
  messagedisplaypanel.add(messagedisplay,"name_4659622588556");
  messagedisplay.setLayout(null);
  JLabel lblNewLabel_4=new JLabel("* Details have been submitted.");
  lblNewLabel_4.setFont(new Font("Tahoma",Font.PLAIN,17));
  lblNewLabel_4.setForeground(new Color(241,57,83));
  lblNewLabel_4.setBounds(0,0,508,29);
  messagedisplay.add(lblNewLabel_4);
  JPanel messageredundantpanel=new JPanel();
  messagedisplaypanel.add(messageredundantpanel,"name_4667681966752");
  cl5.show(messagedisplaypanel,"name_4667681966752");
  cl.show(grandfatherpanel,"name_19239387057142");
  JPanel viewcustomerpanel=new JPanel();
  grandfatherpanel.add(viewcustomerpanel,"name_7105952272002");
  viewcustomerpanel.setLayout(null);
  JScrollPane scrollPane_4=new JScrollPane();
  scrollPane_4.setBounds(26,150,1575,585);
  viewcustomerpanel.add(scrollPane_4);
  custdetailstb=new JTable();
  custdetailstb.setRowHeight(50);
  scrollPane_4.setViewportView(custdetailstb);
  custdetailstb.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  JLabel lblviewCustomerDetails=new JLabel("<html><u>View Customer Details<u><html>");
  lblviewCustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblviewCustomerDetails.setForeground(new Color(241,57,83));
  lblviewCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblviewCustomerDetails.setBackground(Color.WHITE);
  lblviewCustomerDetails.setBounds(481,0,664,98);
  viewcustomerpanel.add(lblviewCustomerDetails);
  JButton btnLoadCustomerDetails=new JButton("Load Customer Details");
  btnLoadCustomerDetails.setCursor(cur);
  btnLoadCustomerDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent loadcustdetails){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from customerinfo";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        custdetailstb.setModel(DbUtils.resultSetToTableModel(rs));
        viewcustomerpanel.revalidate();
        frame.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  btnLoadCustomerDetails.setForeground(Color.WHITE);
  btnLoadCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,15));
  btnLoadCustomerDetails.setBackground(new Color(241,57,83));
  btnLoadCustomerDetails.setBounds(1271,85,277,48);
  viewcustomerpanel.add(btnLoadCustomerDetails);
  JPanel contactuspanel=new JPanel();
  grandfatherpanel.add(contactuspanel,"name_38683474436453");
  contactuspanel.setLayout(null);
  JLabel lblcontactUss=new JLabel("<html><u>Contact Us<u><html>");
  lblcontactUss.setHorizontalAlignment(SwingConstants.CENTER);
  lblcontactUss.setForeground(new Color(241,57,83));
  lblcontactUss.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcontactUss.setBackground(Color.WHITE);
  lblcontactUss.setBounds(497,0,664,98);
  contactuspanel.add(lblcontactUss);
  JButton btnNewButton_2=new JButton("");
  btnNewButton_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.gmail.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_2.setIcon(new ImageIcon(main_p.class.getResource("/images/2000px-New_Logo_Gmail.svg_99x87.png")));
  btnNewButton_2.setBounds(74,119,105,87);
  contactuspanel.add(btnNewButton_2);
  JButton button_3=new JButton("");
  button_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.twitter.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_3.setBackground(Color.WHITE);
  button_3.setIcon(new ImageIcon(main_p.class.getResource("/images/dezeen_twitter-bird_99x87.gif")));
  button_3.setBounds(74,255,105,87);
  contactuspanel.add(button_3);
  JButton button_4=new JButton("");
  button_4.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.facebook.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_4.setIcon(new ImageIcon(main_p.class.getResource("/images/flogo_rgb_hex-brc-site-250_99x87.png")));
  button_4.setBackground(Color.WHITE);
  button_4.setBounds(74,386,105,87);
  contactuspanel.add(button_4);
  JButton button_5=new JButton("");
  button_5.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.shahandanchor.com/home/");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_5.setIcon(new ImageIcon(main_p.class.getResource("/images/Shah-And-Anchor-Kutchhi-Engineering-College_99x87.jpg")));
  button_5.setBackground(Color.WHITE);
  button_5.setBounds(74,513,105,87);
  contactuspanel.add(button_5);
  JPanel panel_6=new JPanel();
  panel_6.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  panel_6.setBounds(234,119,969,439);
  contactuspanel.add(panel_6);
  panel_6.setLayout(null);
  JButton btnNewButton_3=new JButton("New button");
  btnNewButton_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("https://www.google.com/maps/place/Shah+%26+Anchor+Kutchhi+Engineering+College/@19.048219,72.91165,14z/data=!4m5!3m4!1s0x0:0x9ebbdeaea9ec24ae!8m2!3d19.0482157!4d72.9116581?hl=en");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_3.setIcon(new ImageIcon(main_p.class.getResource("/images/Screenshot_2018-10-03 Contact Us - SAKEC-Shah Anchor Kutchhi Engineering College.png")));
  btnNewButton_3.setBounds(10,55,950,328);
  panel_6.add(btnNewButton_3);
  JLabel lblNewLabel_7=new JLabel("<html>Postal Address<br/>\r\n\r\nShah & Anchor Kutchhi Engineering College\r\n\r\nMahavir Education Trust\u2019s Chowk,<br/> Waman Tukaram Patil Marg,<br/> Next to Dukes Co.,<br/> Chembur, Mumbai \u2013 400 088.\r\n<br/>\r\n<br/><br/><br/>\r\nContact Details\r\n\r\n<br/>Contact-No: 022-25580854\r\n\r\n<br/>Fax-No:25568100\r\n\r\n<br/>Email-Id: info@sakec.ac.in </html>");
  lblNewLabel_7.setVerticalAlignment(SwingConstants.TOP);
  lblNewLabel_7.setFont(new Font("Tahoma",Font.BOLD,20));
  lblNewLabel_7.setForeground(new Color(241,57,83));
  lblNewLabel_7.setBounds(1228,119,374,439);
  contactuspanel.add(lblNewLabel_7);
  btnTermLifeInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      cl3.show(parentpanel,"name_130515214938554");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Term Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      frame.revalidate();
      parentpanel.revalidate();
      insurance1();
    }
  }
);
  button_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event3){
      cl3.show(parentpanel,"name_131091957135037");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Whole Life Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance3();
    }
  }
);
  button_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event2){
      cl3.show(parentpanel,"name_130839478752224");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Child Plan Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance2();
    }
  }
);
  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,16));
  JLabel label_6=new JLabel("resiz");
  label_6.setIcon(new ImageIcon(main_p.class.getResource("/images/Customer_Female_Add_190x142.jpg")));
  label_6.setHorizontalAlignment(SwingConstants.CENTER);
  label_6.setBounds(900,0,178,142);
  panel.add(label_6);
  JButton btnAddCustomer=new JButton("Add Customer");
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent customeraddevent){
      cl.show(grandfatherpanel,"name_19239433071790");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnAddCustomer.setForeground(Color.WHITE);
  btnAddCustomer.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.setBackground(new Color(241,57,83));
  btnAddCustomer.setBounds(900,142,178,46);
  panel.add(btnAddCustomer);
  JButton btnViewCustomers=new JButton("View Customers");
  btnViewCustomers.setCursor(cur);
  btnViewCustomers.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e7){
      cl.show(grandfatherpanel,"name_7105952272002");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewCustomers.setForeground(Color.WHITE);
  btnViewCustomers.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewCustomers.setBackground(new Color(241,57,83));
  btnViewCustomers.setBounds(1102,142,178,46);
  panel.add(btnViewCustomers);
  JPanel panel_2=new JPanel();
  panel_2.setBounds(1102,0,178,142);
  panel.add(panel_2);
  panel_2.setLayout(null);
  JLabel lblNewLabel_5=new JLabel("New label");
  lblNewLabel_5.setIcon(new ImageIcon(main_p.class.getResource("/images/User_info_man_male_profile_information_190x142.png")));
  lblNewLabel_5.setBounds(0,0,178,142);
  panel_2.add(lblNewLabel_5);
  JButton btnNewButton_1=new JButton("X");
  btnNewButton_1.setCursor(cur);
  btnNewButton_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent exitevent){
      frameexit=new JFrame("Exit");
      if (JOptionPane.showConfirmDialog(frameexit,"Confirm if you want to exit","Login Systems",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        System.exit(0);
      }
    }
  }
);
  btnNewButton_1.setFont(new Font("Tahoma",Font.BOLD,17));
  btnNewButton_1.setBackground(Color.DARK_GRAY);
  btnNewButton_1.setForeground(Color.RED);
  btnNewButton_1.setBounds(1582,0,68,29);
  panel.add(btnNewButton_1);
  JButton button=new JButton("---");
  button.setCursor(cur);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent minimizeevent){
      frame.setState(JFrame.ICONIFIED);
    }
  }
);
  button.setForeground(Color.RED);
  button.setFont(new Font("Tahoma",Font.BOLD,19));
  button.setBackground(Color.DARK_GRAY);
  button.setBounds(1504,0,68,29);
  panel.add(button);
  JPanel panel_5=new JPanel();
  panel_5.setLayout(null);
  panel_5.setBounds(1304,0,178,142);
  panel.add(panel_5);
  JLabel label_17=new JLabel("New label");
  label_17.setIcon(new ImageIcon(main_p.class.getResource("/images/guy_190x142.png")));
  label_17.setBounds(0,0,178,142);
  panel_5.add(label_17);
  JButton btnContactUs=new JButton("Contact Us");
  btnContactUs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_38683474436453");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnContactUs.setForeground(Color.WHITE);
  btnContactUs.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnContactUs.setBackground(new Color(241,57,83));
  btnContactUs.setBounds(1304,142,178,46);
  panel.add(btnContactUs);
  btnNewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_19239371696803");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  submitbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitevent){
      if (genderval == 1) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Male");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      if (genderval == 2) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)  ";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Female");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      nametf.setText(null);
      yearcb.setSelectedIndex(0);
      monthcb.setSelectedIndex(0);
      datecb.setSelectedIndex(0);
      yearcb1.setSelectedIndex(0);
      monthcb1.setSelectedIndex(0);
      datecb1.setSelectedIndex(0);
      addressta.setText(null);
      mobiletf.setText(null);
      emailtf.setText(null);
      worketf.setText(null);
      aidtf.setText(null);
      cl2.show(panel_1,"name_11001346500172");
      panel_1.revalidate();
      addagentpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewagent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent viewagentevent){
      cl.show(grandfatherpanel,"name_19239332734906");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnCheckInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent checkinevent){
      String ans=caidtf.getText();
      int id=Integer.parseInt(ans);
      try {
        String insurancetype=null;
        Connection conn3=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        PreparedStatement stmt=conn3.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
        stmt.setInt(1,id);
        ResultSet rs=stmt.executeQuery();
        while (rs.next()) {
          insurancetype=rs.getString(1);
        }
        if (insurancetype.equals("Term Insurance")) {
          cl4.show(parentpanelc,"name_73735057972235");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from terminsurance");
          ResultSet rs1=stmt2.executeQuery();
          tinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          tinsurancetable.setRowHeight(225);
          tinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Child Plan Insurance")) {
          cl4.show(parentpanelc,"name_73791843709339");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from childinsurance");
          ResultSet rs1=stmt2.executeQuery();
          cinsurancetable.setRowHeight(225);
          cinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          cinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Whole Life Insurance")) {
          cl4.show(parentpanelc,"name_73812949494419");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from lifeinsurance");
          ResultSet rs1=stmt2.executeQuery();
          winsurancetable.setRowHeight(225);
          winsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          winsurancepanel.revalidate();
        }
      }
 catch (      Exception checkexception) {
        System.out.println(checkexception);
      }
    }
  }
);
  btnSubmitDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitaction){
      if (cgenderval == 1) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Male");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      if (cgenderval == 2) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?++)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Female");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      cnametf.setText(null);
      cyearcb.setSelectedIndex(0);
      cmonthcb.setSelectedIndex(0);
      cdatecb.setSelectedIndex(0);
      caddressta.setText(null);
      cmobtf.setText(null);
      ccidtf.setText(null);
      cemailtf.setText(null);
      caidtf.setText(null);
      csalarytf.setText(null);
      cl5.show(messagedisplaypanel,"name_4659622588556");
      addcustomerpanel.revalidate();
      frame.revalidate();
    }
  }
);
  frame.getContentPane().setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{panel,lblNewLabel}));
  frame.revalidate();
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$6198f1d2.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:230)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2800)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2848)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2800)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$500(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)

!ENTRY org.eclipse.wb.core 4 4 2018-10-05 03:00:11.192
!MESSAGE Designer [1.10.0.201809061025.201810050259]: Execution flow problem. {
  frame=new JFrame();
  frame.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      frameevent(e);
    }
  }
);
  frame.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    MouseEvent evt){
      mouseevent(evt);
    }
  }
);
  frame.setResizable(false);
  frame.setUndecorated(true);
  frame.setBounds(100,100,1650,1000);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  Cursor cur=new Cursor(Cursor.HAND_CURSOR);
  CardLayout cl5=new CardLayout(0,0);
  CardLayout cl4=new CardLayout(0,0);
  String[] dayarr=new String[31];
  for (int i=1; i < 32; i++) {
    dayarr[i - 1]=Integer.toString(i);
  }
  String monarr[]=new String[12];
  for (int i=1; i < 13; i++) {
    monarr[i - 1]=Integer.toString(i);
  }
  String yeararr[]=new String[78];
  for (int j=1940, k=0; j < 2018; j++, k++) {
    yeararr[k]=Integer.toString(j);
  }
  ButtonGroup btngrp1=new ButtonGroup();
  ImageIcon icon11=new ImageIcon("/java_project/src/images/VIR INSURANCE_cropped.jpg");
  frame.setIconImage(icon11.getImage());
  ButtonGroup btngrp=new ButtonGroup();
  frame.getContentPane().setLayout(null);
  JPanel panel=new JPanel();
  panel.setBounds(0,0,1650,188);
  panel.setBackground(Color.DARK_GRAY);
  frame.getContentPane().add(panel);
  panel.setLayout(null);
  JLabel lblNewLabel=new JLabel("New label");
  lblNewLabel.setIcon(new ImageIcon(main_p.class.getResource("/images/VIR INSURANCE.jpg")));
  lblNewLabel.setBounds(0,0,518,188);
  panel.add(lblNewLabel);
  JLabel lblNewLabel_2=new JLabel("resiz");
  lblNewLabel_2.setIcon(new ImageIcon(main_p.class.getResource("/images/security_agent_add_2_190x142.png")));
  lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
  lblNewLabel_2.setBounds(501,0,178,142);
  panel.add(lblNewLabel_2);
  JButton btnNewButton=new JButton("Add Agent");
  btnNewButton.setCursor(cur);
  btnNewButton.setBackground(new Color(241,57,83));
  btnNewButton.setForeground(Color.WHITE);
  btnNewButton.setBounds(501,142,178,46);
  panel.add(btnNewButton);
  JLabel label_10=new JLabel("resiz");
  label_10.setIcon(new ImageIcon(main_p.class.getResource("/images/Online_Agent_New_190x142.jpg")));
  label_10.setHorizontalAlignment(SwingConstants.CENTER);
  label_10.setBounds(701,0,178,142);
  panel.add(label_10);
  JButton btnViewagent=new JButton("View Agents");
  btnViewagent.setCursor(cur);
  btnViewagent.setForeground(Color.WHITE);
  btnViewagent.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewagent.setBackground(new Color(241,57,83));
  btnViewagent.setBounds(701,142,178,46);
  panel.add(btnViewagent);
  JPanel grandfatherpanel=new JPanel();
  grandfatherpanel.setBounds(0,189,1632,764);
  frame.getContentPane().add(grandfatherpanel);
  CardLayout cl=new CardLayout(0,0);
  grandfatherpanel.setLayout(cl);
  JPanel viewagentpanel=new JPanel();
  grandfatherpanel.add(viewagentpanel,"name_19239332734906");
  viewagentpanel.setLayout(null);
  JLabel lblagentDetails=new JLabel("<html><u>Agent Details <u><html>");
  lblagentDetails.setBounds(490,22,652,72);
  lblagentDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblagentDetails.setForeground(new Color(241,57,83));
  lblagentDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblagentDetails.setBackground(Color.WHITE);
  viewagentpanel.add(lblagentDetails);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setBounds(84,165,1480,556);
  viewagentpanel.add(scrollPane);
  table_4=new JTable();
  table_4.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  table_4.setRowHeight(50);
  scrollPane.setViewportView(table_4);
  JButton tablerefreshbtn=new JButton("Load Agent Details");
  tablerefreshbtn.setCursor(cur);
  tablerefreshbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  tablerefreshbtn.setBackground(new Color(241,57,83));
  tablerefreshbtn.setForeground(Color.WHITE);
  tablerefreshbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String tablepopulate="select * from agentinfo";
        PreparedStatement stmt=con.prepareStatement(tablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_4.setModel(DbUtils.resultSetToTableModel(rs));
        viewagentpanel.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  tablerefreshbtn.setBounds(1287,93,277,48);
  viewagentpanel.add(tablerefreshbtn);
  JPanel addagentpanel=new JPanel();
  addagentpanel.setForeground(new Color(241,57,83));
  grandfatherpanel.add(addagentpanel,"name_19239371696803");
  addagentpanel.setLayout(null);
  JLabel label=new JLabel("<html><u>Agent Details & Policies Sold<u><html>");
  label.setHorizontalAlignment(SwingConstants.CENTER);
  label.setForeground(new Color(241,57,83));
  label.setFont(new Font("Tahoma",Font.BOLD,45));
  label.setBackground(Color.WHITE);
  label.setBounds(488,13,664,98);
  addagentpanel.add(label);
  JLabel label_1=new JLabel("Name :");
  label_1.setForeground(new Color(241,57,83));
  label_1.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_1.setBounds(41,129,194,41);
  addagentpanel.add(label_1);
  nametf=new JTextField();
  nametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  nametf.setColumns(10);
  nametf.setBounds(41,169,319,41);
  addagentpanel.add(nametf);
  JLabel label_2=new JLabel("Gender :");
  label_2.setForeground(new Color(241,57,83));
  label_2.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_2.setBounds(41,242,194,41);
  addagentpanel.add(label_2);
  JLabel label_3=new JLabel("Date Of Birth :");
  label_3.setForeground(new Color(241,57,83));
  label_3.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_3.setBounds(41,363,194,41);
  addagentpanel.add(label_3);
  JLabel label_4=new JLabel("Address :");
  label_4.setForeground(new Color(241,57,83));
  label_4.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_4.setBounds(41,483,194,41);
  addagentpanel.add(label_4);
  JRadioButton malerd=new JRadioButton("Male");
  malerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent malerdevent){
      malerdbtn();
    }
  }
);
  malerd.setForeground(Color.DARK_GRAY);
  malerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerd.setBounds(41,290,142,41);
  addagentpanel.add(malerd);
  JRadioButton femalerd=new JRadioButton("Female");
  femalerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleevent){
      femalerdbtn();
    }
  }
);
  femalerd.setForeground(Color.DARK_GRAY);
  femalerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerd.setBounds(206,290,142,41);
  addagentpanel.add(femalerd);
  JComboBox datecb=new JComboBox(dayarr);
  datecb.setBounds(41,415,70,41);
  addagentpanel.add(datecb);
  JComboBox monthcb=new JComboBox(monarr);
  monthcb.setBounds(137,415,70,41);
  addagentpanel.add(monthcb);
  JComboBox yearcb=new JComboBox(yeararr);
  yearcb.setBounds(229,415,103,41);
  addagentpanel.add(yearcb);
  JTextArea addressta=new JTextArea();
  addressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  addressta.setBounds(41,535,319,165);
  addagentpanel.add(addressta);
  JLabel label_5=new JLabel("Work Experience (Yrs) :");
  label_5.setForeground(new Color(241,57,83));
  label_5.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_5.setBounds(488,129,295,41);
  addagentpanel.add(label_5);
  worketf=new JTextField();
  worketf.setFont(new Font("Tahoma",Font.PLAIN,17));
  worketf.setColumns(10);
  worketf.setBounds(488,169,319,41);
  addagentpanel.add(worketf);
  JLabel lblTelephone=new JLabel("Telephone :");
  lblTelephone.setForeground(new Color(241,57,83));
  lblTelephone.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblTelephone.setBounds(488,252,194,41);
  addagentpanel.add(lblTelephone);
  mobiletf=new JTextField();
  mobiletf.setFont(new Font("Tahoma",Font.PLAIN,17));
  mobiletf.setColumns(10);
  mobiletf.setBounds(488,291,319,41);
  addagentpanel.add(mobiletf);
  JLabel label_7=new JLabel("Email :");
  label_7.setForeground(new Color(241,57,83));
  label_7.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_7.setBounds(488,374,194,41);
  addagentpanel.add(label_7);
  emailtf=new JTextField();
  emailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  emailtf.setColumns(10);
  emailtf.setBounds(488,412,319,41);
  addagentpanel.add(emailtf);
  JLabel label_8=new JLabel("Policy Details");
  label_8.setHorizontalAlignment(SwingConstants.CENTER);
  label_8.setForeground(new Color(241,57,83));
  label_8.setFont(new Font("Tahoma",Font.BOLD,35));
  label_8.setBounds(1015,99,310,53);
  addagentpanel.add(label_8);
  JPanel insurancespanel=new JPanel();
  insurancespanel.setLayout(null);
  insurancespanel.setForeground(Color.WHITE);
  insurancespanel.setBounds(890,169,231,198);
  addagentpanel.add(insurancespanel);
  JButton button_1=new JButton("Child Plan Insurance");
  button_1.setCursor(cur);
  button_1.setForeground(Color.WHITE);
  button_1.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_1.setBackground(new Color(241,57,83));
  button_1.setBounds(0,79,231,42);
  insurancespanel.add(button_1);
  JButton button_2=new JButton("Whole Life Insurance");
  button_2.setCursor(cur);
  button_2.setForeground(Color.WHITE);
  button_2.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_2.setBackground(new Color(241,57,83));
  button_2.setBounds(0,156,231,42);
  insurancespanel.add(button_2);
  JButton btnTermLifeInsurance=new JButton("Term Life Insurance");
  btnTermLifeInsurance.setCursor(cur);
  btnTermLifeInsurance.setForeground(Color.WHITE);
  btnTermLifeInsurance.setFont(new Font("Tahoma",Font.PLAIN,15));
  btnTermLifeInsurance.setBackground(new Color(241,57,83));
  btnTermLifeInsurance.setBounds(0,0,231,42);
  insurancespanel.add(btnTermLifeInsurance);
  JPanel parentpanel=new JPanel();
  parentpanel.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanel.setBounds(1150,170,434,480);
  addagentpanel.add(parentpanel);
  CardLayout cl3=new CardLayout(0,0);
  parentpanel.setLayout(cl3);
  JPanel lifelinsurancepanel=new JPanel();
  parentpanel.add(lifelinsurancepanel,"name_131091957135037");
  lifelinsurancepanel.setLayout(null);
  JLabel lblWholeLife=new JLabel("* Whole Life Insurance is selected.");
  lblWholeLife.setForeground(new Color(241,57,83));
  lblWholeLife.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblWholeLife.setBackground(Color.WHITE);
  lblWholeLife.setBounds(0,420,430,56);
  lifelinsurancepanel.add(lblWholeLife);
  JPanel childinsurancepanel=new JPanel();
  parentpanel.add(childinsurancepanel,"name_130839478752224");
  childinsurancepanel.setLayout(null);
  JPanel terminsurancepanel=new JPanel();
  parentpanel.add(terminsurancepanel,"name_130515214938554");
  terminsurancepanel.setLayout(null);
  JPanel redundantpanel2=new JPanel();
  parentpanel.add(redundantpanel2,"name_63847240216221");
  cl3.show(parentpanel,"name_63847240216221");
  JComboBox datecb1=new JComboBox(dayarr);
  datecb1.setBounds(488,516,70,41);
  addagentpanel.add(datecb1);
  JComboBox monthcb1=new JComboBox(monarr);
  monthcb1.setBounds(585,516,70,41);
  addagentpanel.add(monthcb1);
  JComboBox yearcb1=new JComboBox(yeararr);
  yearcb1.setBounds(680,516,103,41);
  addagentpanel.add(yearcb1);
  JLabel label_9=new JLabel("Date Of Joining :");
  label_9.setForeground(new Color(241,57,83));
  label_9.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_9.setBounds(488,464,194,41);
  addagentpanel.add(label_9);
  String column[]={"AGE","TERM","SUM ASSURESD","PREMIMUM"};
  String data[][]={{"AGE","TERM","SUM ASSURESD","PREMIMUM"},{"25 Years","40 Years","Rs . 1 Cr."," Rs . 10,500"},{"35 Years","30 Years","Rs . 25 Lakhs","Rs . 8,800"}};
  String column1[]={"TERM","SUM ASSURED","PREMIUM"};
  String data1[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.3 Lakhs","Rs.10,000"},{"35 Years","Rs.4 Lakhs","Rs.18,000"}};
  String column2[]={"TERM","SUM ASSURED","PREMIUM"};
  String data2[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.18 Lakhs","Rs.1 Lakh"},{"35 Years","Rs.40 Lakhs","Rs.4 Lakhs"}};
  table_3=new JTable();
  table_3.setRowHeight(210);
  table_3.setBounds(0,0,430,420);
  lifelinsurancepanel.add(table_3);
  table=new JTable();
  table.setBounds(0,0,430,420);
  table.setRowHeight(210);
  terminsurancepanel.add(table);
  JLabel lblNewLabel_1=new JLabel("* Term Life Insurance is selected.");
  lblNewLabel_1.setForeground(new Color(241,57,83));
  lblNewLabel_1.setBackground(Color.WHITE);
  lblNewLabel_1.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblNewLabel_1.setBounds(0,420,430,56);
  terminsurancepanel.add(lblNewLabel_1);
  table_2=new JTable();
  table_2.setBounds(0,0,430,420);
  table_2.setRowHeight(210);
  childinsurancepanel.add(table_2);
  JLabel lblChildPlan=new JLabel("* Child Plan Insurance is selected.");
  lblChildPlan.setForeground(new Color(241,57,83));
  lblChildPlan.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblChildPlan.setBackground(Color.WHITE);
  lblChildPlan.setBounds(0,420,430,56);
  childinsurancepanel.add(lblChildPlan);
  JLabel lblAgentId=new JLabel("Agent ID :");
  lblAgentId.setForeground(new Color(241,57,83));
  lblAgentId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblAgentId.setBounds(488,568,194,41);
  addagentpanel.add(lblAgentId);
  aidtf=new JTextField();
  aidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  aidtf.setColumns(10);
  aidtf.setBounds(488,620,319,41);
  addagentpanel.add(aidtf);
  JButton submitbtn=new JButton("SUBMIT");
  submitbtn.setCursor(cur);
  submitbtn.setForeground(Color.WHITE);
  submitbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  submitbtn.setBackground(new Color(241,57,83));
  submitbtn.setBounds(532,687,231,42);
  addagentpanel.add(submitbtn);
  CardLayout cl2=new CardLayout(0,0);
  JPanel panel_1=new JPanel();
  panel_1.setBounds(890,687,461,53);
  addagentpanel.add(panel_1);
  panel_1.setLayout(cl2);
  JPanel panel_3=new JPanel();
  panel_1.add(panel_3,"name_11001346500172");
  panel_3.setLayout(null);
  JLabel lblNewLabel_3=new JLabel("* Agent details have been submitted.");
  lblNewLabel_3.setForeground(new Color(241,57,83));
  lblNewLabel_3.setFont(new Font("Tahoma",Font.BOLD,17));
  lblNewLabel_3.setBounds(0,0,451,53);
  panel_3.add(lblNewLabel_3);
  JPanel panel_4=new JPanel();
  panel_1.add(panel_4,"name_11082648641670");
  cl2.show(panel_1,"name_11082648641670");
  JLabel warninglabel=new JLabel("(8 Digit Number)");
  warninglabel.setForeground(new Color(241,57,83));
  warninglabel.setFont(new Font("Tahoma",Font.PLAIN,14));
  warninglabel.setBounds(488,336,224,20);
  addagentpanel.add(warninglabel);
  JPanel buttonpanel=new JPanel();
  buttonpanel.setBounds(890,415,231,218);
  addagentpanel.add(buttonpanel);
  buttonpanel.setLayout(new CardLayout(0,0));
  JPanel cibtnpanel=new JPanel();
  buttonpanel.add(cibtnpanel,"name_94240132484303");
  cibtnpanel.setLayout(null);
  JPanel tibtnpanel=new JPanel();
  buttonpanel.add(tibtnpanel,"name_94280454630953");
  JPanel libtnpanel=new JPanel();
  buttonpanel.add(libtnpanel,"name_94295818881193");
  JPanel redundantpanel=new JPanel();
  grandfatherpanel.add(redundantpanel,"name_19239387057142");
  JPanel addcustomerpanel=new JPanel();
  addcustomerpanel.setForeground(Color.WHITE);
  grandfatherpanel.add(addcustomerpanel,"name_19239433071790");
  addcustomerpanel.setLayout(null);
  JLabel label_11=new JLabel("Name :");
  label_11.setForeground(new Color(241,57,83));
  label_11.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_11.setBounds(34,206,194,41);
  addcustomerpanel.add(label_11);
  JLabel lblcustomerDetails=new JLabel("<html><u>Customer Details<u><html>");
  lblcustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblcustomerDetails.setForeground(new Color(241,57,83));
  lblcustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcustomerDetails.setBackground(Color.WHITE);
  lblcustomerDetails.setBounds(532,0,664,98);
  addcustomerpanel.add(lblcustomerDetails);
  cnametf=new JTextField();
  cnametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cnametf.setColumns(10);
  cnametf.setBounds(34,249,319,41);
  addcustomerpanel.add(cnametf);
  JLabel label_12=new JLabel("Gender :");
  label_12.setForeground(new Color(241,57,83));
  label_12.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_12.setBounds(34,314,194,41);
  addcustomerpanel.add(label_12);
  JRadioButton malerdbtn1=new JRadioButton("Male");
  malerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent maleactionc){
      malerdbtn1();
    }
  }
);
  malerdbtn1.setForeground(Color.DARK_GRAY);
  malerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerdbtn1.setBounds(34,348,142,41);
  addcustomerpanel.add(malerdbtn1);
  JRadioButton femalerdbtn1=new JRadioButton("Female");
  femalerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleaction1){
      femalerdbtn1();
    }
  }
);
  femalerdbtn1.setForeground(Color.DARK_GRAY);
  femalerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerdbtn1.setBounds(195,348,142,41);
  addcustomerpanel.add(femalerdbtn1);
  btngrp1.add(malerdbtn1);
  btngrp1.add(femalerdbtn1);
  JLabel label_13=new JLabel("Date Of Birth :");
  label_13.setForeground(new Color(241,57,83));
  label_13.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_13.setBounds(34,390,194,41);
  addcustomerpanel.add(label_13);
  JComboBox cdatecb=new JComboBox(dayarr);
  cdatecb.setBounds(34,444,70,41);
  addcustomerpanel.add(cdatecb);
  JComboBox cmonthcb=new JComboBox(monarr);
  cmonthcb.setBounds(131,444,70,41);
  addcustomerpanel.add(cmonthcb);
  JComboBox cyearcb=new JComboBox(yeararr);
  cyearcb.setBounds(222,444,103,41);
  addcustomerpanel.add(cyearcb);
  JLabel label_14=new JLabel("Address :");
  label_14.setForeground(new Color(241,57,83));
  label_14.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_14.setBounds(34,498,194,41);
  addcustomerpanel.add(label_14);
  JTextArea caddressta=new JTextArea();
  caddressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  caddressta.setBounds(34,537,319,165);
  addcustomerpanel.add(caddressta);
  JLabel label_15=new JLabel("Telephone :");
  label_15.setForeground(new Color(241,57,83));
  label_15.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_15.setBounds(438,113,194,41);
  addcustomerpanel.add(label_15);
  cmobtf=new JTextField();
  cmobtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cmobtf.setColumns(10);
  cmobtf.setBounds(438,152,319,41);
  addcustomerpanel.add(cmobtf);
  JLabel label_16=new JLabel("Email :");
  label_16.setForeground(new Color(241,57,83));
  label_16.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_16.setBounds(438,236,194,41);
  addcustomerpanel.add(label_16);
  cemailtf=new JTextField();
  cemailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cemailtf.setColumns(10);
  cemailtf.setBounds(438,274,319,41);
  addcustomerpanel.add(cemailtf);
  JLabel lblSalary=new JLabel("Salary :");
  lblSalary.setForeground(new Color(241,57,83));
  lblSalary.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblSalary.setBounds(438,346,194,41);
  addcustomerpanel.add(lblSalary);
  csalarytf=new JTextField();
  csalarytf.setFont(new Font("Tahoma",Font.PLAIN,17));
  csalarytf.setColumns(10);
  csalarytf.setBounds(438,384,319,41);
  addcustomerpanel.add(csalarytf);
  JLabel lblEnterYourAgent=new JLabel("Enter Your Agent ID :");
  lblEnterYourAgent.setForeground(new Color(241,57,83));
  lblEnterYourAgent.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblEnterYourAgent.setBounds(438,466,319,41);
  addcustomerpanel.add(lblEnterYourAgent);
  caidtf=new JTextField();
  caidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  caidtf.setColumns(10);
  caidtf.setBounds(438,510,319,41);
  addcustomerpanel.add(caidtf);
  JButton btnCheckInsurance=new JButton("Check Insurance");
  btnCheckInsurance.setCursor(cur);
  btnCheckInsurance.setForeground(Color.WHITE);
  btnCheckInsurance.setFont(new Font("Tahoma",Font.BOLD,20));
  btnCheckInsurance.setBackground(new Color(241,57,83));
  btnCheckInsurance.setBounds(438,576,319,55);
  addcustomerpanel.add(btnCheckInsurance);
  JPanel parentpanelc=new JPanel();
  parentpanelc.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanelc.setBounds(897,152,689,540);
  addcustomerpanel.add(parentpanelc);
  parentpanelc.setLayout(cl4);
  JPanel tinsurancepanel=new JPanel();
  parentpanelc.add(tinsurancepanel,"name_73735057972235");
  tinsurancepanel.setLayout(null);
  JScrollPane scrollPane_3=new JScrollPane();
  scrollPane_3.setBounds(0,0,685,466);
  tinsurancepanel.add(scrollPane_3);
  tinsurancetable=new JTable();
  scrollPane_3.setViewportView(tinsurancetable);
  JLabel tinsurancelabel=new JLabel("* Term Insurance has been selected.");
  tinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  tinsurancelabel.setForeground(new Color(241,57,83));
  tinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  tinsurancelabel.setBounds(0,466,685,70);
  tinsurancepanel.add(tinsurancelabel);
  JPanel cinsurancepanel=new JPanel();
  parentpanelc.add(cinsurancepanel,"name_73791843709339");
  cinsurancepanel.setLayout(null);
  JScrollPane scrollPane_2=new JScrollPane();
  scrollPane_2.setBounds(0,0,685,466);
  cinsurancepanel.add(scrollPane_2);
  cinsurancetable=new JTable();
  scrollPane_2.setViewportView(cinsurancetable);
  JLabel cinsurancelabel=new JLabel("* Child Plan Insurance has been selected.");
  cinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  cinsurancelabel.setForeground(new Color(241,57,83));
  cinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  cinsurancelabel.setBounds(0,466,685,70);
  cinsurancepanel.add(cinsurancelabel);
  JPanel winsurancepanel=new JPanel();
  parentpanelc.add(winsurancepanel,"name_73812949494419");
  winsurancepanel.setLayout(null);
  JScrollPane scrollPane_1=new JScrollPane();
  scrollPane_1.setBounds(0,0,685,466);
  winsurancepanel.add(scrollPane_1);
  winsurancetable=new JTable();
  scrollPane_1.setViewportView(winsurancetable);
  JLabel lblWholeLife_1=new JLabel("* Whole Life Insurance has been selected.");
  lblWholeLife_1.setHorizontalAlignment(SwingConstants.CENTER);
  lblWholeLife_1.setForeground(new Color(241,57,83));
  lblWholeLife_1.setFont(new Font("Tahoma",Font.ITALIC,20));
  lblWholeLife_1.setBounds(0,466,685,70);
  winsurancepanel.add(lblWholeLife_1);
  JPanel credundantpanel=new JPanel();
  parentpanelc.add(credundantpanel,"name_73862456257256");
  cl4.show(parentpanelc,"name_73862456257256");
  JButton btnSubmitDetails=new JButton("Submit Details");
  btnSubmitDetails.setCursor(cur);
  btnSubmitDetails.setForeground(Color.WHITE);
  btnSubmitDetails.setFont(new Font("Tahoma",Font.BOLD,20));
  btnSubmitDetails.setBackground(new Color(241,57,83));
  btnSubmitDetails.setBounds(438,662,319,55);
  addcustomerpanel.add(btnSubmitDetails);
  JLabel lblCustomerId=new JLabel("Customer ID :");
  lblCustomerId.setForeground(new Color(241,57,83));
  lblCustomerId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblCustomerId.setBounds(34,113,194,41);
  addcustomerpanel.add(lblCustomerId);
  ccidtf=new JTextField();
  ccidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  ccidtf.setColumns(10);
  ccidtf.setBounds(34,152,319,41);
  addcustomerpanel.add(ccidtf);
  JPanel messagedisplaypanel=new JPanel();
  messagedisplaypanel.setBounds(897,706,508,31);
  addcustomerpanel.add(messagedisplaypanel);
  messagedisplaypanel.setLayout(cl5);
  JPanel messagedisplay=new JPanel();
  messagedisplaypanel.add(messagedisplay,"name_4659622588556");
  messagedisplay.setLayout(null);
  JLabel lblNewLabel_4=new JLabel("* Details have been submitted.");
  lblNewLabel_4.setFont(new Font("Tahoma",Font.PLAIN,17));
  lblNewLabel_4.setForeground(new Color(241,57,83));
  lblNewLabel_4.setBounds(0,0,508,29);
  messagedisplay.add(lblNewLabel_4);
  JPanel messageredundantpanel=new JPanel();
  messagedisplaypanel.add(messageredundantpanel,"name_4667681966752");
  cl5.show(messagedisplaypanel,"name_4667681966752");
  cl.show(grandfatherpanel,"name_19239387057142");
  JPanel viewcustomerpanel=new JPanel();
  grandfatherpanel.add(viewcustomerpanel,"name_7105952272002");
  viewcustomerpanel.setLayout(null);
  JScrollPane scrollPane_4=new JScrollPane();
  scrollPane_4.setBounds(26,150,1575,585);
  viewcustomerpanel.add(scrollPane_4);
  custdetailstb=new JTable();
  custdetailstb.setRowHeight(50);
  scrollPane_4.setViewportView(custdetailstb);
  custdetailstb.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  JLabel lblviewCustomerDetails=new JLabel("<html><u>View Customer Details<u><html>");
  lblviewCustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblviewCustomerDetails.setForeground(new Color(241,57,83));
  lblviewCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblviewCustomerDetails.setBackground(Color.WHITE);
  lblviewCustomerDetails.setBounds(481,0,664,98);
  viewcustomerpanel.add(lblviewCustomerDetails);
  JButton btnLoadCustomerDetails=new JButton("Load Customer Details");
  btnLoadCustomerDetails.setCursor(cur);
  btnLoadCustomerDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent loadcustdetails){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from customerinfo";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        custdetailstb.setModel(DbUtils.resultSetToTableModel(rs));
        viewcustomerpanel.revalidate();
        frame.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  btnLoadCustomerDetails.setForeground(Color.WHITE);
  btnLoadCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,15));
  btnLoadCustomerDetails.setBackground(new Color(241,57,83));
  btnLoadCustomerDetails.setBounds(1271,85,277,48);
  viewcustomerpanel.add(btnLoadCustomerDetails);
  JPanel contactuspanel=new JPanel();
  grandfatherpanel.add(contactuspanel,"name_38683474436453");
  contactuspanel.setLayout(null);
  JLabel lblcontactUss=new JLabel("<html><u>Contact Us<u><html>");
  lblcontactUss.setHorizontalAlignment(SwingConstants.CENTER);
  lblcontactUss.setForeground(new Color(241,57,83));
  lblcontactUss.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcontactUss.setBackground(Color.WHITE);
  lblcontactUss.setBounds(497,0,664,98);
  contactuspanel.add(lblcontactUss);
  JButton btnNewButton_2=new JButton("");
  btnNewButton_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.gmail.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_2.setIcon(new ImageIcon(main_p.class.getResource("/images/2000px-New_Logo_Gmail.svg_99x87.png")));
  btnNewButton_2.setBounds(74,119,105,87);
  contactuspanel.add(btnNewButton_2);
  JButton button_3=new JButton("");
  button_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.twitter.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_3.setBackground(Color.WHITE);
  button_3.setIcon(new ImageIcon(main_p.class.getResource("/images/dezeen_twitter-bird_99x87.gif")));
  button_3.setBounds(74,255,105,87);
  contactuspanel.add(button_3);
  JButton button_4=new JButton("");
  button_4.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.facebook.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_4.setIcon(new ImageIcon(main_p.class.getResource("/images/flogo_rgb_hex-brc-site-250_99x87.png")));
  button_4.setBackground(Color.WHITE);
  button_4.setBounds(74,386,105,87);
  contactuspanel.add(button_4);
  JButton button_5=new JButton("");
  button_5.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.shahandanchor.com/home/");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_5.setIcon(new ImageIcon(main_p.class.getResource("/images/Shah-And-Anchor-Kutchhi-Engineering-College_99x87.jpg")));
  button_5.setBackground(Color.WHITE);
  button_5.setBounds(74,513,105,87);
  contactuspanel.add(button_5);
  JPanel panel_6=new JPanel();
  panel_6.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  panel_6.setBounds(234,119,969,439);
  contactuspanel.add(panel_6);
  panel_6.setLayout(null);
  JButton btnNewButton_3=new JButton("New button");
  btnNewButton_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("https://www.google.com/maps/place/Shah+%26+Anchor+Kutchhi+Engineering+College/@19.048219,72.91165,14z/data=!4m5!3m4!1s0x0:0x9ebbdeaea9ec24ae!8m2!3d19.0482157!4d72.9116581?hl=en");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_3.setIcon(new ImageIcon(main_p.class.getResource("/images/Screenshot_2018-10-03 Contact Us - SAKEC-Shah Anchor Kutchhi Engineering College.png")));
  btnNewButton_3.setBounds(10,55,950,328);
  panel_6.add(btnNewButton_3);
  JLabel lblNewLabel_7=new JLabel("<html>Postal Address<br/>\r\n\r\nShah & Anchor Kutchhi Engineering College\r\n\r\nMahavir Education Trust\u2019s Chowk,<br/> Waman Tukaram Patil Marg,<br/> Next to Dukes Co.,<br/> Chembur, Mumbai \u2013 400 088.\r\n<br/>\r\n<br/><br/><br/>\r\nContact Details\r\n\r\n<br/>Contact-No: 022-25580854\r\n\r\n<br/>Fax-No:25568100\r\n\r\n<br/>Email-Id: info@sakec.ac.in </html>");
  lblNewLabel_7.setVerticalAlignment(SwingConstants.TOP);
  lblNewLabel_7.setFont(new Font("Tahoma",Font.BOLD,20));
  lblNewLabel_7.setForeground(new Color(241,57,83));
  lblNewLabel_7.setBounds(1228,119,374,439);
  contactuspanel.add(lblNewLabel_7);
  btnTermLifeInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      cl3.show(parentpanel,"name_130515214938554");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Term Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      frame.revalidate();
      parentpanel.revalidate();
      insurance1();
    }
  }
);
  button_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event3){
      cl3.show(parentpanel,"name_131091957135037");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Whole Life Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance3();
    }
  }
);
  button_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event2){
      cl3.show(parentpanel,"name_130839478752224");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Child Plan Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance2();
    }
  }
);
  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,16));
  JLabel label_6=new JLabel("resiz");
  label_6.setIcon(new ImageIcon(main_p.class.getResource("/images/Customer_Female_Add_190x142.jpg")));
  label_6.setHorizontalAlignment(SwingConstants.CENTER);
  label_6.setBounds(900,0,178,142);
  panel.add(label_6);
  JButton btnAddCustomer=new JButton("Add Customer");
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent customeraddevent){
      cl.show(grandfatherpanel,"name_19239433071790");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnAddCustomer.setForeground(Color.WHITE);
  btnAddCustomer.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.setBackground(new Color(241,57,83));
  btnAddCustomer.setBounds(900,142,178,46);
  panel.add(btnAddCustomer);
  JButton btnViewCustomers=new JButton("View Customers");
  btnViewCustomers.setCursor(cur);
  btnViewCustomers.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e7){
      cl.show(grandfatherpanel,"name_7105952272002");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewCustomers.setForeground(Color.WHITE);
  btnViewCustomers.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewCustomers.setBackground(new Color(241,57,83));
  btnViewCustomers.setBounds(1102,142,178,46);
  panel.add(btnViewCustomers);
  JPanel panel_2=new JPanel();
  panel_2.setBounds(1102,0,178,142);
  panel.add(panel_2);
  panel_2.setLayout(null);
  JLabel lblNewLabel_5=new JLabel("New label");
  lblNewLabel_5.setIcon(new ImageIcon(main_p.class.getResource("/images/User_info_man_male_profile_information_190x142.png")));
  lblNewLabel_5.setBounds(0,0,178,142);
  panel_2.add(lblNewLabel_5);
  JButton btnNewButton_1=new JButton("X");
  btnNewButton_1.setCursor(cur);
  btnNewButton_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent exitevent){
      frameexit=new JFrame("Exit");
      if (JOptionPane.showConfirmDialog(frameexit,"Confirm if you want to exit","Login Systems",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        System.exit(0);
      }
    }
  }
);
  btnNewButton_1.setFont(new Font("Tahoma",Font.BOLD,17));
  btnNewButton_1.setBackground(Color.DARK_GRAY);
  btnNewButton_1.setForeground(Color.RED);
  btnNewButton_1.setBounds(1582,0,68,29);
  panel.add(btnNewButton_1);
  JButton button=new JButton("---");
  button.setCursor(cur);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent minimizeevent){
      frame.setState(JFrame.ICONIFIED);
    }
  }
);
  button.setForeground(Color.RED);
  button.setFont(new Font("Tahoma",Font.BOLD,19));
  button.setBackground(Color.DARK_GRAY);
  button.setBounds(1504,0,68,29);
  panel.add(button);
  JPanel panel_5=new JPanel();
  panel_5.setLayout(null);
  panel_5.setBounds(1304,0,178,142);
  panel.add(panel_5);
  JLabel label_17=new JLabel("New label");
  label_17.setIcon(new ImageIcon(main_p.class.getResource("/images/guy_190x142.png")));
  label_17.setBounds(0,0,178,142);
  panel_5.add(label_17);
  JButton btnContactUs=new JButton("Contact Us");
  btnContactUs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_38683474436453");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnContactUs.setForeground(Color.WHITE);
  btnContactUs.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnContactUs.setBackground(new Color(241,57,83));
  btnContactUs.setBounds(1304,142,178,46);
  panel.add(btnContactUs);
  btnNewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_19239371696803");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  submitbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitevent){
      if (genderval == 1) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Male");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      if (genderval == 2) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)  ";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Female");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      nametf.setText(null);
      yearcb.setSelectedIndex(0);
      monthcb.setSelectedIndex(0);
      datecb.setSelectedIndex(0);
      yearcb1.setSelectedIndex(0);
      monthcb1.setSelectedIndex(0);
      datecb1.setSelectedIndex(0);
      addressta.setText(null);
      mobiletf.setText(null);
      emailtf.setText(null);
      worketf.setText(null);
      aidtf.setText(null);
      cl2.show(panel_1,"name_11001346500172");
      panel_1.revalidate();
      addagentpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewagent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent viewagentevent){
      cl.show(grandfatherpanel,"name_19239332734906");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnCheckInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent checkinevent){
      String ans=caidtf.getText();
      int id=Integer.parseInt(ans);
      try {
        String insurancetype=null;
        Connection conn3=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        PreparedStatement stmt=conn3.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
        stmt.setInt(1,id);
        ResultSet rs=stmt.executeQuery();
        while (rs.next()) {
          insurancetype=rs.getString(1);
        }
        if (insurancetype.equals("Term Insurance")) {
          cl4.show(parentpanelc,"name_73735057972235");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from terminsurance");
          ResultSet rs1=stmt2.executeQuery();
          tinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          tinsurancetable.setRowHeight(225);
          tinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Child Plan Insurance")) {
          cl4.show(parentpanelc,"name_73791843709339");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from childinsurance");
          ResultSet rs1=stmt2.executeQuery();
          cinsurancetable.setRowHeight(225);
          cinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          cinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Whole Life Insurance")) {
          cl4.show(parentpanelc,"name_73812949494419");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from lifeinsurance");
          ResultSet rs1=stmt2.executeQuery();
          winsurancetable.setRowHeight(225);
          winsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          winsurancepanel.revalidate();
        }
      }
 catch (      Exception checkexception) {
        System.out.println(checkexception);
      }
    }
  }
);
  btnSubmitDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitaction){
      if (cgenderval == 1) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Male");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      if (cgenderval == 2) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?++)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Female");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      cnametf.setText(null);
      cyearcb.setSelectedIndex(0);
      cmonthcb.setSelectedIndex(0);
      cdatecb.setSelectedIndex(0);
      caddressta.setText(null);
      cmobtf.setText(null);
      ccidtf.setText(null);
      cemailtf.setText(null);
      caidtf.setText(null);
      csalarytf.setText(null);
      cl5.show(messagedisplaypanel,"name_4659622588556");
      addcustomerpanel.revalidate();
      frame.revalidate();
    }
  }
);
  frame.getContentPane().setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{panel,lblNewLabel}));
  frame.revalidate();
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  frame=new JFrame();
  frame.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      frameevent(e);
    }
  }
);
  frame.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    MouseEvent evt){
      mouseevent(evt);
    }
  }
);
  frame.setResizable(false);
  frame.setUndecorated(true);
  frame.setBounds(100,100,1650,1000);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  Cursor cur=new Cursor(Cursor.HAND_CURSOR);
  CardLayout cl5=new CardLayout(0,0);
  CardLayout cl4=new CardLayout(0,0);
  String[] dayarr=new String[31];
  for (int i=1; i < 32; i++) {
    dayarr[i - 1]=Integer.toString(i);
  }
  String monarr[]=new String[12];
  for (int i=1; i < 13; i++) {
    monarr[i - 1]=Integer.toString(i);
  }
  String yeararr[]=new String[78];
  for (int j=1940, k=0; j < 2018; j++, k++) {
    yeararr[k]=Integer.toString(j);
  }
  ButtonGroup btngrp1=new ButtonGroup();
  ImageIcon icon11=new ImageIcon("/java_project/src/images/VIR INSURANCE_cropped.jpg");
  frame.setIconImage(icon11.getImage());
  ButtonGroup btngrp=new ButtonGroup();
  frame.getContentPane().setLayout(null);
  JPanel panel=new JPanel();
  panel.setBounds(0,0,1650,188);
  panel.setBackground(Color.DARK_GRAY);
  frame.getContentPane().add(panel);
  panel.setLayout(null);
  JLabel lblNewLabel=new JLabel("New label");
  lblNewLabel.setIcon(new ImageIcon(main_p.class.getResource("/images/VIR INSURANCE.jpg")));
  lblNewLabel.setBounds(0,0,518,188);
  panel.add(lblNewLabel);
  JLabel lblNewLabel_2=new JLabel("resiz");
  lblNewLabel_2.setIcon(new ImageIcon(main_p.class.getResource("/images/security_agent_add_2_190x142.png")));
  lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
  lblNewLabel_2.setBounds(501,0,178,142);
  panel.add(lblNewLabel_2);
  JButton btnNewButton=new JButton("Add Agent");
  btnNewButton.setCursor(cur);
  btnNewButton.setBackground(new Color(241,57,83));
  btnNewButton.setForeground(Color.WHITE);
  btnNewButton.setBounds(501,142,178,46);
  panel.add(btnNewButton);
  JLabel label_10=new JLabel("resiz");
  label_10.setIcon(new ImageIcon(main_p.class.getResource("/images/Online_Agent_New_190x142.jpg")));
  label_10.setHorizontalAlignment(SwingConstants.CENTER);
  label_10.setBounds(701,0,178,142);
  panel.add(label_10);
  JButton btnViewagent=new JButton("View Agents");
  btnViewagent.setCursor(cur);
  btnViewagent.setForeground(Color.WHITE);
  btnViewagent.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewagent.setBackground(new Color(241,57,83));
  btnViewagent.setBounds(701,142,178,46);
  panel.add(btnViewagent);
  JPanel grandfatherpanel=new JPanel();
  grandfatherpanel.setBounds(0,189,1632,764);
  frame.getContentPane().add(grandfatherpanel);
  CardLayout cl=new CardLayout(0,0);
  grandfatherpanel.setLayout(cl);
  JPanel viewagentpanel=new JPanel();
  grandfatherpanel.add(viewagentpanel,"name_19239332734906");
  viewagentpanel.setLayout(null);
  JLabel lblagentDetails=new JLabel("<html><u>Agent Details <u><html>");
  lblagentDetails.setBounds(490,22,652,72);
  lblagentDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblagentDetails.setForeground(new Color(241,57,83));
  lblagentDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblagentDetails.setBackground(Color.WHITE);
  viewagentpanel.add(lblagentDetails);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setBounds(84,165,1480,556);
  viewagentpanel.add(scrollPane);
  table_4=new JTable();
  table_4.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  table_4.setRowHeight(50);
  scrollPane.setViewportView(table_4);
  JButton tablerefreshbtn=new JButton("Load Agent Details");
  tablerefreshbtn.setCursor(cur);
  tablerefreshbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  tablerefreshbtn.setBackground(new Color(241,57,83));
  tablerefreshbtn.setForeground(Color.WHITE);
  tablerefreshbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String tablepopulate="select * from agentinfo";
        PreparedStatement stmt=con.prepareStatement(tablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_4.setModel(DbUtils.resultSetToTableModel(rs));
        viewagentpanel.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  tablerefreshbtn.setBounds(1287,93,277,48);
  viewagentpanel.add(tablerefreshbtn);
  JPanel addagentpanel=new JPanel();
  addagentpanel.setForeground(new Color(241,57,83));
  grandfatherpanel.add(addagentpanel,"name_19239371696803");
  addagentpanel.setLayout(null);
  JLabel label=new JLabel("<html><u>Agent Details & Policies Sold<u><html>");
  label.setHorizontalAlignment(SwingConstants.CENTER);
  label.setForeground(new Color(241,57,83));
  label.setFont(new Font("Tahoma",Font.BOLD,45));
  label.setBackground(Color.WHITE);
  label.setBounds(488,13,664,98);
  addagentpanel.add(label);
  JLabel label_1=new JLabel("Name :");
  label_1.setForeground(new Color(241,57,83));
  label_1.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_1.setBounds(41,129,194,41);
  addagentpanel.add(label_1);
  nametf=new JTextField();
  nametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  nametf.setColumns(10);
  nametf.setBounds(41,169,319,41);
  addagentpanel.add(nametf);
  JLabel label_2=new JLabel("Gender :");
  label_2.setForeground(new Color(241,57,83));
  label_2.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_2.setBounds(41,242,194,41);
  addagentpanel.add(label_2);
  JLabel label_3=new JLabel("Date Of Birth :");
  label_3.setForeground(new Color(241,57,83));
  label_3.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_3.setBounds(41,363,194,41);
  addagentpanel.add(label_3);
  JLabel label_4=new JLabel("Address :");
  label_4.setForeground(new Color(241,57,83));
  label_4.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_4.setBounds(41,483,194,41);
  addagentpanel.add(label_4);
  JRadioButton malerd=new JRadioButton("Male");
  malerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent malerdevent){
      malerdbtn();
    }
  }
);
  malerd.setForeground(Color.DARK_GRAY);
  malerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerd.setBounds(41,290,142,41);
  addagentpanel.add(malerd);
  JRadioButton femalerd=new JRadioButton("Female");
  femalerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleevent){
      femalerdbtn();
    }
  }
);
  femalerd.setForeground(Color.DARK_GRAY);
  femalerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerd.setBounds(206,290,142,41);
  addagentpanel.add(femalerd);
  JComboBox datecb=new JComboBox(dayarr);
  datecb.setBounds(41,415,70,41);
  addagentpanel.add(datecb);
  JComboBox monthcb=new JComboBox(monarr);
  monthcb.setBounds(137,415,70,41);
  addagentpanel.add(monthcb);
  JComboBox yearcb=new JComboBox(yeararr);
  yearcb.setBounds(229,415,103,41);
  addagentpanel.add(yearcb);
  JTextArea addressta=new JTextArea();
  addressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  addressta.setBounds(41,535,319,165);
  addagentpanel.add(addressta);
  JLabel label_5=new JLabel("Work Experience (Yrs) :");
  label_5.setForeground(new Color(241,57,83));
  label_5.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_5.setBounds(488,129,295,41);
  addagentpanel.add(label_5);
  worketf=new JTextField();
  worketf.setFont(new Font("Tahoma",Font.PLAIN,17));
  worketf.setColumns(10);
  worketf.setBounds(488,169,319,41);
  addagentpanel.add(worketf);
  JLabel lblTelephone=new JLabel("Telephone :");
  lblTelephone.setForeground(new Color(241,57,83));
  lblTelephone.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblTelephone.setBounds(488,252,194,41);
  addagentpanel.add(lblTelephone);
  mobiletf=new JTextField();
  mobiletf.setFont(new Font("Tahoma",Font.PLAIN,17));
  mobiletf.setColumns(10);
  mobiletf.setBounds(488,291,319,41);
  addagentpanel.add(mobiletf);
  JLabel label_7=new JLabel("Email :");
  label_7.setForeground(new Color(241,57,83));
  label_7.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_7.setBounds(488,374,194,41);
  addagentpanel.add(label_7);
  emailtf=new JTextField();
  emailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  emailtf.setColumns(10);
  emailtf.setBounds(488,412,319,41);
  addagentpanel.add(emailtf);
  JLabel label_8=new JLabel("Policy Details");
  label_8.setHorizontalAlignment(SwingConstants.CENTER);
  label_8.setForeground(new Color(241,57,83));
  label_8.setFont(new Font("Tahoma",Font.BOLD,35));
  label_8.setBounds(1015,99,310,53);
  addagentpanel.add(label_8);
  JPanel insurancespanel=new JPanel();
  insurancespanel.setLayout(null);
  insurancespanel.setForeground(Color.WHITE);
  insurancespanel.setBounds(890,169,231,198);
  addagentpanel.add(insurancespanel);
  JButton button_1=new JButton("Child Plan Insurance");
  button_1.setCursor(cur);
  button_1.setForeground(Color.WHITE);
  button_1.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_1.setBackground(new Color(241,57,83));
  button_1.setBounds(0,79,231,42);
  insurancespanel.add(button_1);
  JButton button_2=new JButton("Whole Life Insurance");
  button_2.setCursor(cur);
  button_2.setForeground(Color.WHITE);
  button_2.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_2.setBackground(new Color(241,57,83));
  button_2.setBounds(0,156,231,42);
  insurancespanel.add(button_2);
  JButton btnTermLifeInsurance=new JButton("Term Life Insurance");
  btnTermLifeInsurance.setCursor(cur);
  btnTermLifeInsurance.setForeground(Color.WHITE);
  btnTermLifeInsurance.setFont(new Font("Tahoma",Font.PLAIN,15));
  btnTermLifeInsurance.setBackground(new Color(241,57,83));
  btnTermLifeInsurance.setBounds(0,0,231,42);
  insurancespanel.add(btnTermLifeInsurance);
  JPanel parentpanel=new JPanel();
  parentpanel.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanel.setBounds(1150,170,434,480);
  addagentpanel.add(parentpanel);
  CardLayout cl3=new CardLayout(0,0);
  parentpanel.setLayout(cl3);
  JPanel lifelinsurancepanel=new JPanel();
  parentpanel.add(lifelinsurancepanel,"name_131091957135037");
  lifelinsurancepanel.setLayout(null);
  JLabel lblWholeLife=new JLabel("* Whole Life Insurance is selected.");
  lblWholeLife.setForeground(new Color(241,57,83));
  lblWholeLife.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblWholeLife.setBackground(Color.WHITE);
  lblWholeLife.setBounds(0,420,430,56);
  lifelinsurancepanel.add(lblWholeLife);
  JPanel childinsurancepanel=new JPanel();
  parentpanel.add(childinsurancepanel,"name_130839478752224");
  childinsurancepanel.setLayout(null);
  JPanel terminsurancepanel=new JPanel();
  parentpanel.add(terminsurancepanel,"name_130515214938554");
  terminsurancepanel.setLayout(null);
  JPanel redundantpanel2=new JPanel();
  parentpanel.add(redundantpanel2,"name_63847240216221");
  cl3.show(parentpanel,"name_63847240216221");
  JComboBox datecb1=new JComboBox(dayarr);
  datecb1.setBounds(488,516,70,41);
  addagentpanel.add(datecb1);
  JComboBox monthcb1=new JComboBox(monarr);
  monthcb1.setBounds(585,516,70,41);
  addagentpanel.add(monthcb1);
  JComboBox yearcb1=new JComboBox(yeararr);
  yearcb1.setBounds(680,516,103,41);
  addagentpanel.add(yearcb1);
  JLabel label_9=new JLabel("Date Of Joining :");
  label_9.setForeground(new Color(241,57,83));
  label_9.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_9.setBounds(488,464,194,41);
  addagentpanel.add(label_9);
  String column[]={"AGE","TERM","SUM ASSURESD","PREMIMUM"};
  String data[][]={{"AGE","TERM","SUM ASSURESD","PREMIMUM"},{"25 Years","40 Years","Rs . 1 Cr."," Rs . 10,500"},{"35 Years","30 Years","Rs . 25 Lakhs","Rs . 8,800"}};
  String column1[]={"TERM","SUM ASSURED","PREMIUM"};
  String data1[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.3 Lakhs","Rs.10,000"},{"35 Years","Rs.4 Lakhs","Rs.18,000"}};
  String column2[]={"TERM","SUM ASSURED","PREMIUM"};
  String data2[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.18 Lakhs","Rs.1 Lakh"},{"35 Years","Rs.40 Lakhs","Rs.4 Lakhs"}};
  table_3=new JTable();
  table_3.setRowHeight(210);
  table_3.setBounds(0,0,430,420);
  lifelinsurancepanel.add(table_3);
  table=new JTable();
  table.setBounds(0,0,430,420);
  table.setRowHeight(210);
  terminsurancepanel.add(table);
  JLabel lblNewLabel_1=new JLabel("* Term Life Insurance is selected.");
  lblNewLabel_1.setForeground(new Color(241,57,83));
  lblNewLabel_1.setBackground(Color.WHITE);
  lblNewLabel_1.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblNewLabel_1.setBounds(0,420,430,56);
  terminsurancepanel.add(lblNewLabel_1);
  table_2=new JTable();
  table_2.setBounds(0,0,430,420);
  table_2.setRowHeight(210);
  childinsurancepanel.add(table_2);
  JLabel lblChildPlan=new JLabel("* Child Plan Insurance is selected.");
  lblChildPlan.setForeground(new Color(241,57,83));
  lblChildPlan.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblChildPlan.setBackground(Color.WHITE);
  lblChildPlan.setBounds(0,420,430,56);
  childinsurancepanel.add(lblChildPlan);
  JLabel lblAgentId=new JLabel("Agent ID :");
  lblAgentId.setForeground(new Color(241,57,83));
  lblAgentId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblAgentId.setBounds(488,568,194,41);
  addagentpanel.add(lblAgentId);
  aidtf=new JTextField();
  aidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  aidtf.setColumns(10);
  aidtf.setBounds(488,620,319,41);
  addagentpanel.add(aidtf);
  JButton submitbtn=new JButton("SUBMIT");
  submitbtn.setCursor(cur);
  submitbtn.setForeground(Color.WHITE);
  submitbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  submitbtn.setBackground(new Color(241,57,83));
  submitbtn.setBounds(532,687,231,42);
  addagentpanel.add(submitbtn);
  CardLayout cl2=new CardLayout(0,0);
  JPanel panel_1=new JPanel();
  panel_1.setBounds(890,687,461,53);
  addagentpanel.add(panel_1);
  panel_1.setLayout(cl2);
  JPanel panel_3=new JPanel();
  panel_1.add(panel_3,"name_11001346500172");
  panel_3.setLayout(null);
  JLabel lblNewLabel_3=new JLabel("* Agent details have been submitted.");
  lblNewLabel_3.setForeground(new Color(241,57,83));
  lblNewLabel_3.setFont(new Font("Tahoma",Font.BOLD,17));
  lblNewLabel_3.setBounds(0,0,451,53);
  panel_3.add(lblNewLabel_3);
  JPanel panel_4=new JPanel();
  panel_1.add(panel_4,"name_11082648641670");
  cl2.show(panel_1,"name_11082648641670");
  JLabel warninglabel=new JLabel("(8 Digit Number)");
  warninglabel.setForeground(new Color(241,57,83));
  warninglabel.setFont(new Font("Tahoma",Font.PLAIN,14));
  warninglabel.setBounds(488,336,224,20);
  addagentpanel.add(warninglabel);
  JPanel buttonpanel=new JPanel();
  buttonpanel.setBounds(890,415,231,218);
  addagentpanel.add(buttonpanel);
  buttonpanel.setLayout(new CardLayout(0,0));
  JPanel cibtnpanel=new JPanel();
  buttonpanel.add(cibtnpanel,"name_94240132484303");
  cibtnpanel.setLayout(null);
  JPanel tibtnpanel=new JPanel();
  buttonpanel.add(tibtnpanel,"name_94280454630953");
  JPanel libtnpanel=new JPanel();
  buttonpanel.add(libtnpanel,"name_94295818881193");
  JPanel redundantpanel=new JPanel();
  grandfatherpanel.add(redundantpanel,"name_19239387057142");
  JPanel addcustomerpanel=new JPanel();
  addcustomerpanel.setForeground(Color.WHITE);
  grandfatherpanel.add(addcustomerpanel,"name_19239433071790");
  addcustomerpanel.setLayout(null);
  JLabel label_11=new JLabel("Name :");
  label_11.setForeground(new Color(241,57,83));
  label_11.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_11.setBounds(34,206,194,41);
  addcustomerpanel.add(label_11);
  JLabel lblcustomerDetails=new JLabel("<html><u>Customer Details<u><html>");
  lblcustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblcustomerDetails.setForeground(new Color(241,57,83));
  lblcustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcustomerDetails.setBackground(Color.WHITE);
  lblcustomerDetails.setBounds(532,0,664,98);
  addcustomerpanel.add(lblcustomerDetails);
  cnametf=new JTextField();
  cnametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cnametf.setColumns(10);
  cnametf.setBounds(34,249,319,41);
  addcustomerpanel.add(cnametf);
  JLabel label_12=new JLabel("Gender :");
  label_12.setForeground(new Color(241,57,83));
  label_12.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_12.setBounds(34,314,194,41);
  addcustomerpanel.add(label_12);
  JRadioButton malerdbtn1=new JRadioButton("Male");
  malerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent maleactionc){
      malerdbtn1();
    }
  }
);
  malerdbtn1.setForeground(Color.DARK_GRAY);
  malerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerdbtn1.setBounds(34,348,142,41);
  addcustomerpanel.add(malerdbtn1);
  JRadioButton femalerdbtn1=new JRadioButton("Female");
  femalerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleaction1){
      femalerdbtn1();
    }
  }
);
  femalerdbtn1.setForeground(Color.DARK_GRAY);
  femalerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerdbtn1.setBounds(195,348,142,41);
  addcustomerpanel.add(femalerdbtn1);
  btngrp1.add(malerdbtn1);
  btngrp1.add(femalerdbtn1);
  JLabel label_13=new JLabel("Date Of Birth :");
  label_13.setForeground(new Color(241,57,83));
  label_13.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_13.setBounds(34,390,194,41);
  addcustomerpanel.add(label_13);
  JComboBox cdatecb=new JComboBox(dayarr);
  cdatecb.setBounds(34,444,70,41);
  addcustomerpanel.add(cdatecb);
  JComboBox cmonthcb=new JComboBox(monarr);
  cmonthcb.setBounds(131,444,70,41);
  addcustomerpanel.add(cmonthcb);
  JComboBox cyearcb=new JComboBox(yeararr);
  cyearcb.setBounds(222,444,103,41);
  addcustomerpanel.add(cyearcb);
  JLabel label_14=new JLabel("Address :");
  label_14.setForeground(new Color(241,57,83));
  label_14.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_14.setBounds(34,498,194,41);
  addcustomerpanel.add(label_14);
  JTextArea caddressta=new JTextArea();
  caddressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  caddressta.setBounds(34,537,319,165);
  addcustomerpanel.add(caddressta);
  JLabel label_15=new JLabel("Telephone :");
  label_15.setForeground(new Color(241,57,83));
  label_15.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_15.setBounds(438,113,194,41);
  addcustomerpanel.add(label_15);
  cmobtf=new JTextField();
  cmobtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cmobtf.setColumns(10);
  cmobtf.setBounds(438,152,319,41);
  addcustomerpanel.add(cmobtf);
  JLabel label_16=new JLabel("Email :");
  label_16.setForeground(new Color(241,57,83));
  label_16.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_16.setBounds(438,236,194,41);
  addcustomerpanel.add(label_16);
  cemailtf=new JTextField();
  cemailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cemailtf.setColumns(10);
  cemailtf.setBounds(438,274,319,41);
  addcustomerpanel.add(cemailtf);
  JLabel lblSalary=new JLabel("Salary :");
  lblSalary.setForeground(new Color(241,57,83));
  lblSalary.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblSalary.setBounds(438,346,194,41);
  addcustomerpanel.add(lblSalary);
  csalarytf=new JTextField();
  csalarytf.setFont(new Font("Tahoma",Font.PLAIN,17));
  csalarytf.setColumns(10);
  csalarytf.setBounds(438,384,319,41);
  addcustomerpanel.add(csalarytf);
  JLabel lblEnterYourAgent=new JLabel("Enter Your Agent ID :");
  lblEnterYourAgent.setForeground(new Color(241,57,83));
  lblEnterYourAgent.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblEnterYourAgent.setBounds(438,466,319,41);
  addcustomerpanel.add(lblEnterYourAgent);
  caidtf=new JTextField();
  caidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  caidtf.setColumns(10);
  caidtf.setBounds(438,510,319,41);
  addcustomerpanel.add(caidtf);
  JButton btnCheckInsurance=new JButton("Check Insurance");
  btnCheckInsurance.setCursor(cur);
  btnCheckInsurance.setForeground(Color.WHITE);
  btnCheckInsurance.setFont(new Font("Tahoma",Font.BOLD,20));
  btnCheckInsurance.setBackground(new Color(241,57,83));
  btnCheckInsurance.setBounds(438,576,319,55);
  addcustomerpanel.add(btnCheckInsurance);
  JPanel parentpanelc=new JPanel();
  parentpanelc.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanelc.setBounds(897,152,689,540);
  addcustomerpanel.add(parentpanelc);
  parentpanelc.setLayout(cl4);
  JPanel tinsurancepanel=new JPanel();
  parentpanelc.add(tinsurancepanel,"name_73735057972235");
  tinsurancepanel.setLayout(null);
  JScrollPane scrollPane_3=new JScrollPane();
  scrollPane_3.setBounds(0,0,685,466);
  tinsurancepanel.add(scrollPane_3);
  tinsurancetable=new JTable();
  scrollPane_3.setViewportView(tinsurancetable);
  JLabel tinsurancelabel=new JLabel("* Term Insurance has been selected.");
  tinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  tinsurancelabel.setForeground(new Color(241,57,83));
  tinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  tinsurancelabel.setBounds(0,466,685,70);
  tinsurancepanel.add(tinsurancelabel);
  JPanel cinsurancepanel=new JPanel();
  parentpanelc.add(cinsurancepanel,"name_73791843709339");
  cinsurancepanel.setLayout(null);
  JScrollPane scrollPane_2=new JScrollPane();
  scrollPane_2.setBounds(0,0,685,466);
  cinsurancepanel.add(scrollPane_2);
  cinsurancetable=new JTable();
  scrollPane_2.setViewportView(cinsurancetable);
  JLabel cinsurancelabel=new JLabel("* Child Plan Insurance has been selected.");
  cinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  cinsurancelabel.setForeground(new Color(241,57,83));
  cinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  cinsurancelabel.setBounds(0,466,685,70);
  cinsurancepanel.add(cinsurancelabel);
  JPanel winsurancepanel=new JPanel();
  parentpanelc.add(winsurancepanel,"name_73812949494419");
  winsurancepanel.setLayout(null);
  JScrollPane scrollPane_1=new JScrollPane();
  scrollPane_1.setBounds(0,0,685,466);
  winsurancepanel.add(scrollPane_1);
  winsurancetable=new JTable();
  scrollPane_1.setViewportView(winsurancetable);
  JLabel lblWholeLife_1=new JLabel("* Whole Life Insurance has been selected.");
  lblWholeLife_1.setHorizontalAlignment(SwingConstants.CENTER);
  lblWholeLife_1.setForeground(new Color(241,57,83));
  lblWholeLife_1.setFont(new Font("Tahoma",Font.ITALIC,20));
  lblWholeLife_1.setBounds(0,466,685,70);
  winsurancepanel.add(lblWholeLife_1);
  JPanel credundantpanel=new JPanel();
  parentpanelc.add(credundantpanel,"name_73862456257256");
  cl4.show(parentpanelc,"name_73862456257256");
  JButton btnSubmitDetails=new JButton("Submit Details");
  btnSubmitDetails.setCursor(cur);
  btnSubmitDetails.setForeground(Color.WHITE);
  btnSubmitDetails.setFont(new Font("Tahoma",Font.BOLD,20));
  btnSubmitDetails.setBackground(new Color(241,57,83));
  btnSubmitDetails.setBounds(438,662,319,55);
  addcustomerpanel.add(btnSubmitDetails);
  JLabel lblCustomerId=new JLabel("Customer ID :");
  lblCustomerId.setForeground(new Color(241,57,83));
  lblCustomerId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblCustomerId.setBounds(34,113,194,41);
  addcustomerpanel.add(lblCustomerId);
  ccidtf=new JTextField();
  ccidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  ccidtf.setColumns(10);
  ccidtf.setBounds(34,152,319,41);
  addcustomerpanel.add(ccidtf);
  JPanel messagedisplaypanel=new JPanel();
  messagedisplaypanel.setBounds(897,706,508,31);
  addcustomerpanel.add(messagedisplaypanel);
  messagedisplaypanel.setLayout(cl5);
  JPanel messagedisplay=new JPanel();
  messagedisplaypanel.add(messagedisplay,"name_4659622588556");
  messagedisplay.setLayout(null);
  JLabel lblNewLabel_4=new JLabel("* Details have been submitted.");
  lblNewLabel_4.setFont(new Font("Tahoma",Font.PLAIN,17));
  lblNewLabel_4.setForeground(new Color(241,57,83));
  lblNewLabel_4.setBounds(0,0,508,29);
  messagedisplay.add(lblNewLabel_4);
  JPanel messageredundantpanel=new JPanel();
  messagedisplaypanel.add(messageredundantpanel,"name_4667681966752");
  cl5.show(messagedisplaypanel,"name_4667681966752");
  cl.show(grandfatherpanel,"name_19239387057142");
  JPanel viewcustomerpanel=new JPanel();
  grandfatherpanel.add(viewcustomerpanel,"name_7105952272002");
  viewcustomerpanel.setLayout(null);
  JScrollPane scrollPane_4=new JScrollPane();
  scrollPane_4.setBounds(26,150,1575,585);
  viewcustomerpanel.add(scrollPane_4);
  custdetailstb=new JTable();
  custdetailstb.setRowHeight(50);
  scrollPane_4.setViewportView(custdetailstb);
  custdetailstb.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  JLabel lblviewCustomerDetails=new JLabel("<html><u>View Customer Details<u><html>");
  lblviewCustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblviewCustomerDetails.setForeground(new Color(241,57,83));
  lblviewCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblviewCustomerDetails.setBackground(Color.WHITE);
  lblviewCustomerDetails.setBounds(481,0,664,98);
  viewcustomerpanel.add(lblviewCustomerDetails);
  JButton btnLoadCustomerDetails=new JButton("Load Customer Details");
  btnLoadCustomerDetails.setCursor(cur);
  btnLoadCustomerDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent loadcustdetails){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from customerinfo";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        custdetailstb.setModel(DbUtils.resultSetToTableModel(rs));
        viewcustomerpanel.revalidate();
        frame.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  btnLoadCustomerDetails.setForeground(Color.WHITE);
  btnLoadCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,15));
  btnLoadCustomerDetails.setBackground(new Color(241,57,83));
  btnLoadCustomerDetails.setBounds(1271,85,277,48);
  viewcustomerpanel.add(btnLoadCustomerDetails);
  JPanel contactuspanel=new JPanel();
  grandfatherpanel.add(contactuspanel,"name_38683474436453");
  contactuspanel.setLayout(null);
  JLabel lblcontactUss=new JLabel("<html><u>Contact Us<u><html>");
  lblcontactUss.setHorizontalAlignment(SwingConstants.CENTER);
  lblcontactUss.setForeground(new Color(241,57,83));
  lblcontactUss.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcontactUss.setBackground(Color.WHITE);
  lblcontactUss.setBounds(497,0,664,98);
  contactuspanel.add(lblcontactUss);
  JButton btnNewButton_2=new JButton("");
  btnNewButton_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.gmail.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_2.setIcon(new ImageIcon(main_p.class.getResource("/images/2000px-New_Logo_Gmail.svg_99x87.png")));
  btnNewButton_2.setBounds(74,119,105,87);
  contactuspanel.add(btnNewButton_2);
  JButton button_3=new JButton("");
  button_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.twitter.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_3.setBackground(Color.WHITE);
  button_3.setIcon(new ImageIcon(main_p.class.getResource("/images/dezeen_twitter-bird_99x87.gif")));
  button_3.setBounds(74,255,105,87);
  contactuspanel.add(button_3);
  JButton button_4=new JButton("");
  button_4.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.facebook.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_4.setIcon(new ImageIcon(main_p.class.getResource("/images/flogo_rgb_hex-brc-site-250_99x87.png")));
  button_4.setBackground(Color.WHITE);
  button_4.setBounds(74,386,105,87);
  contactuspanel.add(button_4);
  JButton button_5=new JButton("");
  button_5.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.shahandanchor.com/home/");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_5.setIcon(new ImageIcon(main_p.class.getResource("/images/Shah-And-Anchor-Kutchhi-Engineering-College_99x87.jpg")));
  button_5.setBackground(Color.WHITE);
  button_5.setBounds(74,513,105,87);
  contactuspanel.add(button_5);
  JPanel panel_6=new JPanel();
  panel_6.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  panel_6.setBounds(234,119,969,439);
  contactuspanel.add(panel_6);
  panel_6.setLayout(null);
  JButton btnNewButton_3=new JButton("New button");
  btnNewButton_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("https://www.google.com/maps/place/Shah+%26+Anchor+Kutchhi+Engineering+College/@19.048219,72.91165,14z/data=!4m5!3m4!1s0x0:0x9ebbdeaea9ec24ae!8m2!3d19.0482157!4d72.9116581?hl=en");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_3.setIcon(new ImageIcon(main_p.class.getResource("/images/Screenshot_2018-10-03 Contact Us - SAKEC-Shah Anchor Kutchhi Engineering College.png")));
  btnNewButton_3.setBounds(10,55,950,328);
  panel_6.add(btnNewButton_3);
  JLabel lblNewLabel_7=new JLabel("<html>Postal Address<br/>\r\n\r\nShah & Anchor Kutchhi Engineering College\r\n\r\nMahavir Education Trust\u2019s Chowk,<br/> Waman Tukaram Patil Marg,<br/> Next to Dukes Co.,<br/> Chembur, Mumbai \u2013 400 088.\r\n<br/>\r\n<br/><br/><br/>\r\nContact Details\r\n\r\n<br/>Contact-No: 022-25580854\r\n\r\n<br/>Fax-No:25568100\r\n\r\n<br/>Email-Id: info@sakec.ac.in </html>");
  lblNewLabel_7.setVerticalAlignment(SwingConstants.TOP);
  lblNewLabel_7.setFont(new Font("Tahoma",Font.BOLD,20));
  lblNewLabel_7.setForeground(new Color(241,57,83));
  lblNewLabel_7.setBounds(1228,119,374,439);
  contactuspanel.add(lblNewLabel_7);
  btnTermLifeInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      cl3.show(parentpanel,"name_130515214938554");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Term Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      frame.revalidate();
      parentpanel.revalidate();
      insurance1();
    }
  }
);
  button_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event3){
      cl3.show(parentpanel,"name_131091957135037");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Whole Life Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance3();
    }
  }
);
  button_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event2){
      cl3.show(parentpanel,"name_130839478752224");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Child Plan Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance2();
    }
  }
);
  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,16));
  JLabel label_6=new JLabel("resiz");
  label_6.setIcon(new ImageIcon(main_p.class.getResource("/images/Customer_Female_Add_190x142.jpg")));
  label_6.setHorizontalAlignment(SwingConstants.CENTER);
  label_6.setBounds(900,0,178,142);
  panel.add(label_6);
  JButton btnAddCustomer=new JButton("Add Customer");
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent customeraddevent){
      cl.show(grandfatherpanel,"name_19239433071790");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnAddCustomer.setForeground(Color.WHITE);
  btnAddCustomer.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.setBackground(new Color(241,57,83));
  btnAddCustomer.setBounds(900,142,178,46);
  panel.add(btnAddCustomer);
  JButton btnViewCustomers=new JButton("View Customers");
  btnViewCustomers.setCursor(cur);
  btnViewCustomers.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e7){
      cl.show(grandfatherpanel,"name_7105952272002");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewCustomers.setForeground(Color.WHITE);
  btnViewCustomers.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewCustomers.setBackground(new Color(241,57,83));
  btnViewCustomers.setBounds(1102,142,178,46);
  panel.add(btnViewCustomers);
  JPanel panel_2=new JPanel();
  panel_2.setBounds(1102,0,178,142);
  panel.add(panel_2);
  panel_2.setLayout(null);
  JLabel lblNewLabel_5=new JLabel("New label");
  lblNewLabel_5.setIcon(new ImageIcon(main_p.class.getResource("/images/User_info_man_male_profile_information_190x142.png")));
  lblNewLabel_5.setBounds(0,0,178,142);
  panel_2.add(lblNewLabel_5);
  JButton btnNewButton_1=new JButton("X");
  btnNewButton_1.setCursor(cur);
  btnNewButton_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent exitevent){
      frameexit=new JFrame("Exit");
      if (JOptionPane.showConfirmDialog(frameexit,"Confirm if you want to exit","Login Systems",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        System.exit(0);
      }
    }
  }
);
  btnNewButton_1.setFont(new Font("Tahoma",Font.BOLD,17));
  btnNewButton_1.setBackground(Color.DARK_GRAY);
  btnNewButton_1.setForeground(Color.RED);
  btnNewButton_1.setBounds(1582,0,68,29);
  panel.add(btnNewButton_1);
  JButton button=new JButton("---");
  button.setCursor(cur);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent minimizeevent){
      frame.setState(JFrame.ICONIFIED);
    }
  }
);
  button.setForeground(Color.RED);
  button.setFont(new Font("Tahoma",Font.BOLD,19));
  button.setBackground(Color.DARK_GRAY);
  button.setBounds(1504,0,68,29);
  panel.add(button);
  JPanel panel_5=new JPanel();
  panel_5.setLayout(null);
  panel_5.setBounds(1304,0,178,142);
  panel.add(panel_5);
  JLabel label_17=new JLabel("New label");
  label_17.setIcon(new ImageIcon(main_p.class.getResource("/images/guy_190x142.png")));
  label_17.setBounds(0,0,178,142);
  panel_5.add(label_17);
  JButton btnContactUs=new JButton("Contact Us");
  btnContactUs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_38683474436453");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnContactUs.setForeground(Color.WHITE);
  btnContactUs.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnContactUs.setBackground(new Color(241,57,83));
  btnContactUs.setBounds(1304,142,178,46);
  panel.add(btnContactUs);
  btnNewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_19239371696803");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  submitbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitevent){
      if (genderval == 1) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Male");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      if (genderval == 2) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)  ";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Female");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      nametf.setText(null);
      yearcb.setSelectedIndex(0);
      monthcb.setSelectedIndex(0);
      datecb.setSelectedIndex(0);
      yearcb1.setSelectedIndex(0);
      monthcb1.setSelectedIndex(0);
      datecb1.setSelectedIndex(0);
      addressta.setText(null);
      mobiletf.setText(null);
      emailtf.setText(null);
      worketf.setText(null);
      aidtf.setText(null);
      cl2.show(panel_1,"name_11001346500172");
      panel_1.revalidate();
      addagentpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewagent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent viewagentevent){
      cl.show(grandfatherpanel,"name_19239332734906");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnCheckInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent checkinevent){
      String ans=caidtf.getText();
      int id=Integer.parseInt(ans);
      try {
        String insurancetype=null;
        Connection conn3=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        PreparedStatement stmt=conn3.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
        stmt.setInt(1,id);
        ResultSet rs=stmt.executeQuery();
        while (rs.next()) {
          insurancetype=rs.getString(1);
        }
        if (insurancetype.equals("Term Insurance")) {
          cl4.show(parentpanelc,"name_73735057972235");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from terminsurance");
          ResultSet rs1=stmt2.executeQuery();
          tinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          tinsurancetable.setRowHeight(225);
          tinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Child Plan Insurance")) {
          cl4.show(parentpanelc,"name_73791843709339");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from childinsurance");
          ResultSet rs1=stmt2.executeQuery();
          cinsurancetable.setRowHeight(225);
          cinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          cinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Whole Life Insurance")) {
          cl4.show(parentpanelc,"name_73812949494419");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from lifeinsurance");
          ResultSet rs1=stmt2.executeQuery();
          winsurancetable.setRowHeight(225);
          winsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          winsurancepanel.revalidate();
        }
      }
 catch (      Exception checkexception) {
        System.out.println(checkexception);
      }
    }
  }
);
  btnSubmitDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitaction){
      if (cgenderval == 1) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Male");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      if (cgenderval == 2) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?++)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Female");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      cnametf.setText(null);
      cyearcb.setSelectedIndex(0);
      cmonthcb.setSelectedIndex(0);
      cdatecb.setSelectedIndex(0);
      caddressta.setText(null);
      cmobtf.setText(null);
      ccidtf.setText(null);
      cemailtf.setText(null);
      caidtf.setText(null);
      csalarytf.setText(null);
      cl5.show(messagedisplaypanel,"name_4659622588556");
      addcustomerpanel.revalidate();
      frame.revalidate();
    }
  }
);
  frame.getContentPane().setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{panel,lblNewLabel}));
  frame.revalidate();
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$6198f1d2.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:230)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2800)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2848)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2800)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.model.ChildTargetCalculator.getLastTargetStatement(ChildTargetCalculator.java:202)
	at org.eclipse.wb.internal.core.model.ChildTargetCalculator.getTarget(ChildTargetCalculator.java:107)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.getTarget(JavaInfoUtils.java:1624)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.add(JavaInfoUtils.java:1288)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.setLayout(ContainerInfo.java:414)
	at org.eclipse.wb.internal.swing.gefTree.policy.DropLayoutEditPolicy$1.executeEdit(DropLayoutEditPolicy.java:72)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.gef.core.tools.Tool.executeCommand(Tool.java:209)
	at org.eclipse.wb.gef.core.tools.AbstractCreationTool.handleButtonUp(AbstractCreationTool.java:62)
	at org.eclipse.wb.gef.core.tools.Tool.mouseUp(Tool.java:395)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseUp(EditDomain.java:255)
	at org.eclipse.wb.internal.gef.tree.TreeEventManager.mouseUp(TreeEventManager.java:120)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.wb.internal.draw2d.EventManager$8.invoke(EventManager.java:325)
	at com.sun.proxy.$Proxy19.mouseUp(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:224)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage$5.run(ComponentsTreePage.java:166)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage.selectGraphicalViewer(ComponentsTreePage.java:148)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage.access$0(ComponentsTreePage.java:145)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage$1.selectionChanged(ComponentsTreePage.java:119)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3958)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3561)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)

!ENTRY org.eclipse.wb.core 4 4 2018-10-05 03:00:11.275
!MESSAGE Designer [1.10.0.201809061025.201810050259]: Execution flow problem. {
  initialize();
}
 expected, but {
  frame=new JFrame();
  frame.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      frameevent(e);
    }
  }
);
  frame.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    MouseEvent evt){
      mouseevent(evt);
    }
  }
);
  frame.setResizable(false);
  frame.setUndecorated(true);
  frame.setBounds(100,100,1650,1000);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  Cursor cur=new Cursor(Cursor.HAND_CURSOR);
  CardLayout cl5=new CardLayout(0,0);
  CardLayout cl4=new CardLayout(0,0);
  String[] dayarr=new String[31];
  for (int i=1; i < 32; i++) {
    dayarr[i - 1]=Integer.toString(i);
  }
  String monarr[]=new String[12];
  for (int i=1; i < 13; i++) {
    monarr[i - 1]=Integer.toString(i);
  }
  String yeararr[]=new String[78];
  for (int j=1940, k=0; j < 2018; j++, k++) {
    yeararr[k]=Integer.toString(j);
  }
  ButtonGroup btngrp1=new ButtonGroup();
  ImageIcon icon11=new ImageIcon("/java_project/src/images/VIR INSURANCE_cropped.jpg");
  frame.setIconImage(icon11.getImage());
  ButtonGroup btngrp=new ButtonGroup();
  frame.getContentPane().setLayout(null);
  JPanel panel=new JPanel();
  panel.setBounds(0,0,1650,188);
  panel.setBackground(Color.DARK_GRAY);
  frame.getContentPane().add(panel);
  panel.setLayout(null);
  JLabel lblNewLabel=new JLabel("New label");
  lblNewLabel.setIcon(new ImageIcon(main_p.class.getResource("/images/VIR INSURANCE.jpg")));
  lblNewLabel.setBounds(0,0,518,188);
  panel.add(lblNewLabel);
  JLabel lblNewLabel_2=new JLabel("resiz");
  lblNewLabel_2.setIcon(new ImageIcon(main_p.class.getResource("/images/security_agent_add_2_190x142.png")));
  lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
  lblNewLabel_2.setBounds(501,0,178,142);
  panel.add(lblNewLabel_2);
  JButton btnNewButton=new JButton("Add Agent");
  btnNewButton.setCursor(cur);
  btnNewButton.setBackground(new Color(241,57,83));
  btnNewButton.setForeground(Color.WHITE);
  btnNewButton.setBounds(501,142,178,46);
  panel.add(btnNewButton);
  JLabel label_10=new JLabel("resiz");
  label_10.setIcon(new ImageIcon(main_p.class.getResource("/images/Online_Agent_New_190x142.jpg")));
  label_10.setHorizontalAlignment(SwingConstants.CENTER);
  label_10.setBounds(701,0,178,142);
  panel.add(label_10);
  JButton btnViewagent=new JButton("View Agents");
  btnViewagent.setCursor(cur);
  btnViewagent.setForeground(Color.WHITE);
  btnViewagent.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewagent.setBackground(new Color(241,57,83));
  btnViewagent.setBounds(701,142,178,46);
  panel.add(btnViewagent);
  JPanel grandfatherpanel=new JPanel();
  grandfatherpanel.setBounds(0,189,1632,764);
  frame.getContentPane().add(grandfatherpanel);
  CardLayout cl=new CardLayout(0,0);
  grandfatherpanel.setLayout(cl);
  JPanel viewagentpanel=new JPanel();
  grandfatherpanel.add(viewagentpanel,"name_19239332734906");
  viewagentpanel.setLayout(null);
  JLabel lblagentDetails=new JLabel("<html><u>Agent Details <u><html>");
  lblagentDetails.setBounds(490,22,652,72);
  lblagentDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblagentDetails.setForeground(new Color(241,57,83));
  lblagentDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblagentDetails.setBackground(Color.WHITE);
  viewagentpanel.add(lblagentDetails);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setBounds(84,165,1480,556);
  viewagentpanel.add(scrollPane);
  table_4=new JTable();
  table_4.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  table_4.setRowHeight(50);
  scrollPane.setViewportView(table_4);
  JButton tablerefreshbtn=new JButton("Load Agent Details");
  tablerefreshbtn.setCursor(cur);
  tablerefreshbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  tablerefreshbtn.setBackground(new Color(241,57,83));
  tablerefreshbtn.setForeground(Color.WHITE);
  tablerefreshbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String tablepopulate="select * from agentinfo";
        PreparedStatement stmt=con.prepareStatement(tablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_4.setModel(DbUtils.resultSetToTableModel(rs));
        viewagentpanel.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  tablerefreshbtn.setBounds(1287,93,277,48);
  viewagentpanel.add(tablerefreshbtn);
  JPanel addagentpanel=new JPanel();
  addagentpanel.setForeground(new Color(241,57,83));
  grandfatherpanel.add(addagentpanel,"name_19239371696803");
  addagentpanel.setLayout(null);
  JLabel label=new JLabel("<html><u>Agent Details & Policies Sold<u><html>");
  label.setHorizontalAlignment(SwingConstants.CENTER);
  label.setForeground(new Color(241,57,83));
  label.setFont(new Font("Tahoma",Font.BOLD,45));
  label.setBackground(Color.WHITE);
  label.setBounds(488,13,664,98);
  addagentpanel.add(label);
  JLabel label_1=new JLabel("Name :");
  label_1.setForeground(new Color(241,57,83));
  label_1.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_1.setBounds(41,129,194,41);
  addagentpanel.add(label_1);
  nametf=new JTextField();
  nametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  nametf.setColumns(10);
  nametf.setBounds(41,169,319,41);
  addagentpanel.add(nametf);
  JLabel label_2=new JLabel("Gender :");
  label_2.setForeground(new Color(241,57,83));
  label_2.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_2.setBounds(41,242,194,41);
  addagentpanel.add(label_2);
  JLabel label_3=new JLabel("Date Of Birth :");
  label_3.setForeground(new Color(241,57,83));
  label_3.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_3.setBounds(41,363,194,41);
  addagentpanel.add(label_3);
  JLabel label_4=new JLabel("Address :");
  label_4.setForeground(new Color(241,57,83));
  label_4.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_4.setBounds(41,483,194,41);
  addagentpanel.add(label_4);
  JRadioButton malerd=new JRadioButton("Male");
  malerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent malerdevent){
      malerdbtn();
    }
  }
);
  malerd.setForeground(Color.DARK_GRAY);
  malerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerd.setBounds(41,290,142,41);
  addagentpanel.add(malerd);
  JRadioButton femalerd=new JRadioButton("Female");
  femalerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleevent){
      femalerdbtn();
    }
  }
);
  femalerd.setForeground(Color.DARK_GRAY);
  femalerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerd.setBounds(206,290,142,41);
  addagentpanel.add(femalerd);
  JComboBox datecb=new JComboBox(dayarr);
  datecb.setBounds(41,415,70,41);
  addagentpanel.add(datecb);
  JComboBox monthcb=new JComboBox(monarr);
  monthcb.setBounds(137,415,70,41);
  addagentpanel.add(monthcb);
  JComboBox yearcb=new JComboBox(yeararr);
  yearcb.setBounds(229,415,103,41);
  addagentpanel.add(yearcb);
  JTextArea addressta=new JTextArea();
  addressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  addressta.setBounds(41,535,319,165);
  addagentpanel.add(addressta);
  JLabel label_5=new JLabel("Work Experience (Yrs) :");
  label_5.setForeground(new Color(241,57,83));
  label_5.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_5.setBounds(488,129,295,41);
  addagentpanel.add(label_5);
  worketf=new JTextField();
  worketf.setFont(new Font("Tahoma",Font.PLAIN,17));
  worketf.setColumns(10);
  worketf.setBounds(488,169,319,41);
  addagentpanel.add(worketf);
  JLabel lblTelephone=new JLabel("Telephone :");
  lblTelephone.setForeground(new Color(241,57,83));
  lblTelephone.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblTelephone.setBounds(488,252,194,41);
  addagentpanel.add(lblTelephone);
  mobiletf=new JTextField();
  mobiletf.setFont(new Font("Tahoma",Font.PLAIN,17));
  mobiletf.setColumns(10);
  mobiletf.setBounds(488,291,319,41);
  addagentpanel.add(mobiletf);
  JLabel label_7=new JLabel("Email :");
  label_7.setForeground(new Color(241,57,83));
  label_7.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_7.setBounds(488,374,194,41);
  addagentpanel.add(label_7);
  emailtf=new JTextField();
  emailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  emailtf.setColumns(10);
  emailtf.setBounds(488,412,319,41);
  addagentpanel.add(emailtf);
  JLabel label_8=new JLabel("Policy Details");
  label_8.setHorizontalAlignment(SwingConstants.CENTER);
  label_8.setForeground(new Color(241,57,83));
  label_8.setFont(new Font("Tahoma",Font.BOLD,35));
  label_8.setBounds(1015,99,310,53);
  addagentpanel.add(label_8);
  JPanel insurancespanel=new JPanel();
  insurancespanel.setLayout(null);
  insurancespanel.setForeground(Color.WHITE);
  insurancespanel.setBounds(890,169,231,198);
  addagentpanel.add(insurancespanel);
  JButton button_1=new JButton("Child Plan Insurance");
  button_1.setCursor(cur);
  button_1.setForeground(Color.WHITE);
  button_1.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_1.setBackground(new Color(241,57,83));
  button_1.setBounds(0,79,231,42);
  insurancespanel.add(button_1);
  JButton button_2=new JButton("Whole Life Insurance");
  button_2.setCursor(cur);
  button_2.setForeground(Color.WHITE);
  button_2.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_2.setBackground(new Color(241,57,83));
  button_2.setBounds(0,156,231,42);
  insurancespanel.add(button_2);
  JButton btnTermLifeInsurance=new JButton("Term Life Insurance");
  btnTermLifeInsurance.setCursor(cur);
  btnTermLifeInsurance.setForeground(Color.WHITE);
  btnTermLifeInsurance.setFont(new Font("Tahoma",Font.PLAIN,15));
  btnTermLifeInsurance.setBackground(new Color(241,57,83));
  btnTermLifeInsurance.setBounds(0,0,231,42);
  insurancespanel.add(btnTermLifeInsurance);
  JPanel parentpanel=new JPanel();
  parentpanel.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanel.setBounds(1150,170,434,480);
  addagentpanel.add(parentpanel);
  CardLayout cl3=new CardLayout(0,0);
  parentpanel.setLayout(cl3);
  JPanel lifelinsurancepanel=new JPanel();
  parentpanel.add(lifelinsurancepanel,"name_131091957135037");
  lifelinsurancepanel.setLayout(null);
  JLabel lblWholeLife=new JLabel("* Whole Life Insurance is selected.");
  lblWholeLife.setForeground(new Color(241,57,83));
  lblWholeLife.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblWholeLife.setBackground(Color.WHITE);
  lblWholeLife.setBounds(0,420,430,56);
  lifelinsurancepanel.add(lblWholeLife);
  JPanel childinsurancepanel=new JPanel();
  parentpanel.add(childinsurancepanel,"name_130839478752224");
  childinsurancepanel.setLayout(null);
  JPanel terminsurancepanel=new JPanel();
  parentpanel.add(terminsurancepanel,"name_130515214938554");
  terminsurancepanel.setLayout(null);
  JPanel redundantpanel2=new JPanel();
  parentpanel.add(redundantpanel2,"name_63847240216221");
  cl3.show(parentpanel,"name_63847240216221");
  JComboBox datecb1=new JComboBox(dayarr);
  datecb1.setBounds(488,516,70,41);
  addagentpanel.add(datecb1);
  JComboBox monthcb1=new JComboBox(monarr);
  monthcb1.setBounds(585,516,70,41);
  addagentpanel.add(monthcb1);
  JComboBox yearcb1=new JComboBox(yeararr);
  yearcb1.setBounds(680,516,103,41);
  addagentpanel.add(yearcb1);
  JLabel label_9=new JLabel("Date Of Joining :");
  label_9.setForeground(new Color(241,57,83));
  label_9.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_9.setBounds(488,464,194,41);
  addagentpanel.add(label_9);
  String column[]={"AGE","TERM","SUM ASSURESD","PREMIMUM"};
  String data[][]={{"AGE","TERM","SUM ASSURESD","PREMIMUM"},{"25 Years","40 Years","Rs . 1 Cr."," Rs . 10,500"},{"35 Years","30 Years","Rs . 25 Lakhs","Rs . 8,800"}};
  String column1[]={"TERM","SUM ASSURED","PREMIUM"};
  String data1[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.3 Lakhs","Rs.10,000"},{"35 Years","Rs.4 Lakhs","Rs.18,000"}};
  String column2[]={"TERM","SUM ASSURED","PREMIUM"};
  String data2[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.18 Lakhs","Rs.1 Lakh"},{"35 Years","Rs.40 Lakhs","Rs.4 Lakhs"}};
  table_3=new JTable();
  table_3.setRowHeight(210);
  table_3.setBounds(0,0,430,420);
  lifelinsurancepanel.add(table_3);
  table=new JTable();
  table.setBounds(0,0,430,420);
  table.setRowHeight(210);
  terminsurancepanel.add(table);
  JLabel lblNewLabel_1=new JLabel("* Term Life Insurance is selected.");
  lblNewLabel_1.setForeground(new Color(241,57,83));
  lblNewLabel_1.setBackground(Color.WHITE);
  lblNewLabel_1.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblNewLabel_1.setBounds(0,420,430,56);
  terminsurancepanel.add(lblNewLabel_1);
  table_2=new JTable();
  table_2.setBounds(0,0,430,420);
  table_2.setRowHeight(210);
  childinsurancepanel.add(table_2);
  JLabel lblChildPlan=new JLabel("* Child Plan Insurance is selected.");
  lblChildPlan.setForeground(new Color(241,57,83));
  lblChildPlan.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblChildPlan.setBackground(Color.WHITE);
  lblChildPlan.setBounds(0,420,430,56);
  childinsurancepanel.add(lblChildPlan);
  JLabel lblAgentId=new JLabel("Agent ID :");
  lblAgentId.setForeground(new Color(241,57,83));
  lblAgentId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblAgentId.setBounds(488,568,194,41);
  addagentpanel.add(lblAgentId);
  aidtf=new JTextField();
  aidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  aidtf.setColumns(10);
  aidtf.setBounds(488,620,319,41);
  addagentpanel.add(aidtf);
  JButton submitbtn=new JButton("SUBMIT");
  submitbtn.setCursor(cur);
  submitbtn.setForeground(Color.WHITE);
  submitbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  submitbtn.setBackground(new Color(241,57,83));
  submitbtn.setBounds(532,687,231,42);
  addagentpanel.add(submitbtn);
  CardLayout cl2=new CardLayout(0,0);
  JPanel panel_1=new JPanel();
  panel_1.setBounds(890,687,461,53);
  addagentpanel.add(panel_1);
  panel_1.setLayout(cl2);
  JPanel panel_3=new JPanel();
  panel_1.add(panel_3,"name_11001346500172");
  panel_3.setLayout(null);
  JLabel lblNewLabel_3=new JLabel("* Agent details have been submitted.");
  lblNewLabel_3.setForeground(new Color(241,57,83));
  lblNewLabel_3.setFont(new Font("Tahoma",Font.BOLD,17));
  lblNewLabel_3.setBounds(0,0,451,53);
  panel_3.add(lblNewLabel_3);
  JPanel panel_4=new JPanel();
  panel_1.add(panel_4,"name_11082648641670");
  cl2.show(panel_1,"name_11082648641670");
  JLabel warninglabel=new JLabel("(8 Digit Number)");
  warninglabel.setForeground(new Color(241,57,83));
  warninglabel.setFont(new Font("Tahoma",Font.PLAIN,14));
  warninglabel.setBounds(488,336,224,20);
  addagentpanel.add(warninglabel);
  JPanel buttonpanel=new JPanel();
  buttonpanel.setBounds(890,415,231,218);
  addagentpanel.add(buttonpanel);
  buttonpanel.setLayout(new CardLayout(0,0));
  JPanel cibtnpanel=new JPanel();
  buttonpanel.add(cibtnpanel,"name_94240132484303");
  cibtnpanel.setLayout(null);
  JPanel tibtnpanel=new JPanel();
  buttonpanel.add(tibtnpanel,"name_94280454630953");
  JPanel libtnpanel=new JPanel();
  buttonpanel.add(libtnpanel,"name_94295818881193");
  JPanel redundantpanel=new JPanel();
  grandfatherpanel.add(redundantpanel,"name_19239387057142");
  JPanel addcustomerpanel=new JPanel();
  addcustomerpanel.setForeground(Color.WHITE);
  grandfatherpanel.add(addcustomerpanel,"name_19239433071790");
  addcustomerpanel.setLayout(null);
  JLabel label_11=new JLabel("Name :");
  label_11.setForeground(new Color(241,57,83));
  label_11.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_11.setBounds(34,206,194,41);
  addcustomerpanel.add(label_11);
  JLabel lblcustomerDetails=new JLabel("<html><u>Customer Details<u><html>");
  lblcustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblcustomerDetails.setForeground(new Color(241,57,83));
  lblcustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcustomerDetails.setBackground(Color.WHITE);
  lblcustomerDetails.setBounds(532,0,664,98);
  addcustomerpanel.add(lblcustomerDetails);
  cnametf=new JTextField();
  cnametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cnametf.setColumns(10);
  cnametf.setBounds(34,249,319,41);
  addcustomerpanel.add(cnametf);
  JLabel label_12=new JLabel("Gender :");
  label_12.setForeground(new Color(241,57,83));
  label_12.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_12.setBounds(34,314,194,41);
  addcustomerpanel.add(label_12);
  JRadioButton malerdbtn1=new JRadioButton("Male");
  malerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent maleactionc){
      malerdbtn1();
    }
  }
);
  malerdbtn1.setForeground(Color.DARK_GRAY);
  malerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerdbtn1.setBounds(34,348,142,41);
  addcustomerpanel.add(malerdbtn1);
  JRadioButton femalerdbtn1=new JRadioButton("Female");
  femalerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleaction1){
      femalerdbtn1();
    }
  }
);
  femalerdbtn1.setForeground(Color.DARK_GRAY);
  femalerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerdbtn1.setBounds(195,348,142,41);
  addcustomerpanel.add(femalerdbtn1);
  btngrp1.add(malerdbtn1);
  btngrp1.add(femalerdbtn1);
  JLabel label_13=new JLabel("Date Of Birth :");
  label_13.setForeground(new Color(241,57,83));
  label_13.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_13.setBounds(34,390,194,41);
  addcustomerpanel.add(label_13);
  JComboBox cdatecb=new JComboBox(dayarr);
  cdatecb.setBounds(34,444,70,41);
  addcustomerpanel.add(cdatecb);
  JComboBox cmonthcb=new JComboBox(monarr);
  cmonthcb.setBounds(131,444,70,41);
  addcustomerpanel.add(cmonthcb);
  JComboBox cyearcb=new JComboBox(yeararr);
  cyearcb.setBounds(222,444,103,41);
  addcustomerpanel.add(cyearcb);
  JLabel label_14=new JLabel("Address :");
  label_14.setForeground(new Color(241,57,83));
  label_14.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_14.setBounds(34,498,194,41);
  addcustomerpanel.add(label_14);
  JTextArea caddressta=new JTextArea();
  caddressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  caddressta.setBounds(34,537,319,165);
  addcustomerpanel.add(caddressta);
  JLabel label_15=new JLabel("Telephone :");
  label_15.setForeground(new Color(241,57,83));
  label_15.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_15.setBounds(438,113,194,41);
  addcustomerpanel.add(label_15);
  cmobtf=new JTextField();
  cmobtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cmobtf.setColumns(10);
  cmobtf.setBounds(438,152,319,41);
  addcustomerpanel.add(cmobtf);
  JLabel label_16=new JLabel("Email :");
  label_16.setForeground(new Color(241,57,83));
  label_16.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_16.setBounds(438,236,194,41);
  addcustomerpanel.add(label_16);
  cemailtf=new JTextField();
  cemailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cemailtf.setColumns(10);
  cemailtf.setBounds(438,274,319,41);
  addcustomerpanel.add(cemailtf);
  JLabel lblSalary=new JLabel("Salary :");
  lblSalary.setForeground(new Color(241,57,83));
  lblSalary.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblSalary.setBounds(438,346,194,41);
  addcustomerpanel.add(lblSalary);
  csalarytf=new JTextField();
  csalarytf.setFont(new Font("Tahoma",Font.PLAIN,17));
  csalarytf.setColumns(10);
  csalarytf.setBounds(438,384,319,41);
  addcustomerpanel.add(csalarytf);
  JLabel lblEnterYourAgent=new JLabel("Enter Your Agent ID :");
  lblEnterYourAgent.setForeground(new Color(241,57,83));
  lblEnterYourAgent.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblEnterYourAgent.setBounds(438,466,319,41);
  addcustomerpanel.add(lblEnterYourAgent);
  caidtf=new JTextField();
  caidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  caidtf.setColumns(10);
  caidtf.setBounds(438,510,319,41);
  addcustomerpanel.add(caidtf);
  JButton btnCheckInsurance=new JButton("Check Insurance");
  btnCheckInsurance.setCursor(cur);
  btnCheckInsurance.setForeground(Color.WHITE);
  btnCheckInsurance.setFont(new Font("Tahoma",Font.BOLD,20));
  btnCheckInsurance.setBackground(new Color(241,57,83));
  btnCheckInsurance.setBounds(438,576,319,55);
  addcustomerpanel.add(btnCheckInsurance);
  JPanel parentpanelc=new JPanel();
  parentpanelc.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanelc.setBounds(897,152,689,540);
  addcustomerpanel.add(parentpanelc);
  parentpanelc.setLayout(cl4);
  JPanel tinsurancepanel=new JPanel();
  parentpanelc.add(tinsurancepanel,"name_73735057972235");
  tinsurancepanel.setLayout(null);
  JScrollPane scrollPane_3=new JScrollPane();
  scrollPane_3.setBounds(0,0,685,466);
  tinsurancepanel.add(scrollPane_3);
  tinsurancetable=new JTable();
  scrollPane_3.setViewportView(tinsurancetable);
  JLabel tinsurancelabel=new JLabel("* Term Insurance has been selected.");
  tinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  tinsurancelabel.setForeground(new Color(241,57,83));
  tinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  tinsurancelabel.setBounds(0,466,685,70);
  tinsurancepanel.add(tinsurancelabel);
  JPanel cinsurancepanel=new JPanel();
  parentpanelc.add(cinsurancepanel,"name_73791843709339");
  cinsurancepanel.setLayout(null);
  JScrollPane scrollPane_2=new JScrollPane();
  scrollPane_2.setBounds(0,0,685,466);
  cinsurancepanel.add(scrollPane_2);
  cinsurancetable=new JTable();
  scrollPane_2.setViewportView(cinsurancetable);
  JLabel cinsurancelabel=new JLabel("* Child Plan Insurance has been selected.");
  cinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  cinsurancelabel.setForeground(new Color(241,57,83));
  cinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  cinsurancelabel.setBounds(0,466,685,70);
  cinsurancepanel.add(cinsurancelabel);
  JPanel winsurancepanel=new JPanel();
  parentpanelc.add(winsurancepanel,"name_73812949494419");
  winsurancepanel.setLayout(null);
  JScrollPane scrollPane_1=new JScrollPane();
  scrollPane_1.setBounds(0,0,685,466);
  winsurancepanel.add(scrollPane_1);
  winsurancetable=new JTable();
  scrollPane_1.setViewportView(winsurancetable);
  JLabel lblWholeLife_1=new JLabel("* Whole Life Insurance has been selected.");
  lblWholeLife_1.setHorizontalAlignment(SwingConstants.CENTER);
  lblWholeLife_1.setForeground(new Color(241,57,83));
  lblWholeLife_1.setFont(new Font("Tahoma",Font.ITALIC,20));
  lblWholeLife_1.setBounds(0,466,685,70);
  winsurancepanel.add(lblWholeLife_1);
  JPanel credundantpanel=new JPanel();
  parentpanelc.add(credundantpanel,"name_73862456257256");
  cl4.show(parentpanelc,"name_73862456257256");
  JButton btnSubmitDetails=new JButton("Submit Details");
  btnSubmitDetails.setCursor(cur);
  btnSubmitDetails.setForeground(Color.WHITE);
  btnSubmitDetails.setFont(new Font("Tahoma",Font.BOLD,20));
  btnSubmitDetails.setBackground(new Color(241,57,83));
  btnSubmitDetails.setBounds(438,662,319,55);
  addcustomerpanel.add(btnSubmitDetails);
  JLabel lblCustomerId=new JLabel("Customer ID :");
  lblCustomerId.setForeground(new Color(241,57,83));
  lblCustomerId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblCustomerId.setBounds(34,113,194,41);
  addcustomerpanel.add(lblCustomerId);
  ccidtf=new JTextField();
  ccidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  ccidtf.setColumns(10);
  ccidtf.setBounds(34,152,319,41);
  addcustomerpanel.add(ccidtf);
  JPanel messagedisplaypanel=new JPanel();
  messagedisplaypanel.setBounds(897,706,508,31);
  addcustomerpanel.add(messagedisplaypanel);
  messagedisplaypanel.setLayout(cl5);
  JPanel messagedisplay=new JPanel();
  messagedisplaypanel.add(messagedisplay,"name_4659622588556");
  messagedisplay.setLayout(null);
  JLabel lblNewLabel_4=new JLabel("* Details have been submitted.");
  lblNewLabel_4.setFont(new Font("Tahoma",Font.PLAIN,17));
  lblNewLabel_4.setForeground(new Color(241,57,83));
  lblNewLabel_4.setBounds(0,0,508,29);
  messagedisplay.add(lblNewLabel_4);
  JPanel messageredundantpanel=new JPanel();
  messagedisplaypanel.add(messageredundantpanel,"name_4667681966752");
  cl5.show(messagedisplaypanel,"name_4667681966752");
  cl.show(grandfatherpanel,"name_19239387057142");
  JPanel viewcustomerpanel=new JPanel();
  grandfatherpanel.add(viewcustomerpanel,"name_7105952272002");
  viewcustomerpanel.setLayout(null);
  JScrollPane scrollPane_4=new JScrollPane();
  scrollPane_4.setBounds(26,150,1575,585);
  viewcustomerpanel.add(scrollPane_4);
  custdetailstb=new JTable();
  custdetailstb.setRowHeight(50);
  scrollPane_4.setViewportView(custdetailstb);
  custdetailstb.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  JLabel lblviewCustomerDetails=new JLabel("<html><u>View Customer Details<u><html>");
  lblviewCustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblviewCustomerDetails.setForeground(new Color(241,57,83));
  lblviewCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblviewCustomerDetails.setBackground(Color.WHITE);
  lblviewCustomerDetails.setBounds(481,0,664,98);
  viewcustomerpanel.add(lblviewCustomerDetails);
  JButton btnLoadCustomerDetails=new JButton("Load Customer Details");
  btnLoadCustomerDetails.setCursor(cur);
  btnLoadCustomerDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent loadcustdetails){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from customerinfo";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        custdetailstb.setModel(DbUtils.resultSetToTableModel(rs));
        viewcustomerpanel.revalidate();
        frame.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  btnLoadCustomerDetails.setForeground(Color.WHITE);
  btnLoadCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,15));
  btnLoadCustomerDetails.setBackground(new Color(241,57,83));
  btnLoadCustomerDetails.setBounds(1271,85,277,48);
  viewcustomerpanel.add(btnLoadCustomerDetails);
  JPanel contactuspanel=new JPanel();
  grandfatherpanel.add(contactuspanel,"name_38683474436453");
  contactuspanel.setLayout(null);
  JLabel lblcontactUss=new JLabel("<html><u>Contact Us<u><html>");
  lblcontactUss.setHorizontalAlignment(SwingConstants.CENTER);
  lblcontactUss.setForeground(new Color(241,57,83));
  lblcontactUss.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcontactUss.setBackground(Color.WHITE);
  lblcontactUss.setBounds(497,0,664,98);
  contactuspanel.add(lblcontactUss);
  JButton btnNewButton_2=new JButton("");
  btnNewButton_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.gmail.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_2.setIcon(new ImageIcon(main_p.class.getResource("/images/2000px-New_Logo_Gmail.svg_99x87.png")));
  btnNewButton_2.setBounds(74,119,105,87);
  contactuspanel.add(btnNewButton_2);
  JButton button_3=new JButton("");
  button_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.twitter.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_3.setBackground(Color.WHITE);
  button_3.setIcon(new ImageIcon(main_p.class.getResource("/images/dezeen_twitter-bird_99x87.gif")));
  button_3.setBounds(74,255,105,87);
  contactuspanel.add(button_3);
  JButton button_4=new JButton("");
  button_4.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.facebook.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_4.setIcon(new ImageIcon(main_p.class.getResource("/images/flogo_rgb_hex-brc-site-250_99x87.png")));
  button_4.setBackground(Color.WHITE);
  button_4.setBounds(74,386,105,87);
  contactuspanel.add(button_4);
  JButton button_5=new JButton("");
  button_5.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.shahandanchor.com/home/");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_5.setIcon(new ImageIcon(main_p.class.getResource("/images/Shah-And-Anchor-Kutchhi-Engineering-College_99x87.jpg")));
  button_5.setBackground(Color.WHITE);
  button_5.setBounds(74,513,105,87);
  contactuspanel.add(button_5);
  JPanel panel_6=new JPanel();
  panel_6.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  panel_6.setBounds(234,119,969,439);
  contactuspanel.add(panel_6);
  panel_6.setLayout(null);
  JButton btnNewButton_3=new JButton("New button");
  btnNewButton_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("https://www.google.com/maps/place/Shah+%26+Anchor+Kutchhi+Engineering+College/@19.048219,72.91165,14z/data=!4m5!3m4!1s0x0:0x9ebbdeaea9ec24ae!8m2!3d19.0482157!4d72.9116581?hl=en");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_3.setIcon(new ImageIcon(main_p.class.getResource("/images/Screenshot_2018-10-03 Contact Us - SAKEC-Shah Anchor Kutchhi Engineering College.png")));
  btnNewButton_3.setBounds(10,55,950,328);
  panel_6.add(btnNewButton_3);
  JLabel lblNewLabel_7=new JLabel("<html>Postal Address<br/>\r\n\r\nShah & Anchor Kutchhi Engineering College\r\n\r\nMahavir Education Trust\u2019s Chowk,<br/> Waman Tukaram Patil Marg,<br/> Next to Dukes Co.,<br/> Chembur, Mumbai \u2013 400 088.\r\n<br/>\r\n<br/><br/><br/>\r\nContact Details\r\n\r\n<br/>Contact-No: 022-25580854\r\n\r\n<br/>Fax-No:25568100\r\n\r\n<br/>Email-Id: info@sakec.ac.in </html>");
  lblNewLabel_7.setVerticalAlignment(SwingConstants.TOP);
  lblNewLabel_7.setFont(new Font("Tahoma",Font.BOLD,20));
  lblNewLabel_7.setForeground(new Color(241,57,83));
  lblNewLabel_7.setBounds(1228,119,374,439);
  contactuspanel.add(lblNewLabel_7);
  btnTermLifeInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      cl3.show(parentpanel,"name_130515214938554");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Term Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      frame.revalidate();
      parentpanel.revalidate();
      insurance1();
    }
  }
);
  button_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event3){
      cl3.show(parentpanel,"name_131091957135037");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Whole Life Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance3();
    }
  }
);
  button_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event2){
      cl3.show(parentpanel,"name_130839478752224");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Child Plan Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance2();
    }
  }
);
  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,16));
  JLabel label_6=new JLabel("resiz");
  label_6.setIcon(new ImageIcon(main_p.class.getResource("/images/Customer_Female_Add_190x142.jpg")));
  label_6.setHorizontalAlignment(SwingConstants.CENTER);
  label_6.setBounds(900,0,178,142);
  panel.add(label_6);
  JButton btnAddCustomer=new JButton("Add Customer");
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent customeraddevent){
      cl.show(grandfatherpanel,"name_19239433071790");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnAddCustomer.setForeground(Color.WHITE);
  btnAddCustomer.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.setBackground(new Color(241,57,83));
  btnAddCustomer.setBounds(900,142,178,46);
  panel.add(btnAddCustomer);
  JButton btnViewCustomers=new JButton("View Customers");
  btnViewCustomers.setCursor(cur);
  btnViewCustomers.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e7){
      cl.show(grandfatherpanel,"name_7105952272002");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewCustomers.setForeground(Color.WHITE);
  btnViewCustomers.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewCustomers.setBackground(new Color(241,57,83));
  btnViewCustomers.setBounds(1102,142,178,46);
  panel.add(btnViewCustomers);
  JPanel panel_2=new JPanel();
  panel_2.setBounds(1102,0,178,142);
  panel.add(panel_2);
  panel_2.setLayout(null);
  JLabel lblNewLabel_5=new JLabel("New label");
  lblNewLabel_5.setIcon(new ImageIcon(main_p.class.getResource("/images/User_info_man_male_profile_information_190x142.png")));
  lblNewLabel_5.setBounds(0,0,178,142);
  panel_2.add(lblNewLabel_5);
  JButton btnNewButton_1=new JButton("X");
  btnNewButton_1.setCursor(cur);
  btnNewButton_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent exitevent){
      frameexit=new JFrame("Exit");
      if (JOptionPane.showConfirmDialog(frameexit,"Confirm if you want to exit","Login Systems",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        System.exit(0);
      }
    }
  }
);
  btnNewButton_1.setFont(new Font("Tahoma",Font.BOLD,17));
  btnNewButton_1.setBackground(Color.DARK_GRAY);
  btnNewButton_1.setForeground(Color.RED);
  btnNewButton_1.setBounds(1582,0,68,29);
  panel.add(btnNewButton_1);
  JButton button=new JButton("---");
  button.setCursor(cur);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent minimizeevent){
      frame.setState(JFrame.ICONIFIED);
    }
  }
);
  button.setForeground(Color.RED);
  button.setFont(new Font("Tahoma",Font.BOLD,19));
  button.setBackground(Color.DARK_GRAY);
  button.setBounds(1504,0,68,29);
  panel.add(button);
  JPanel panel_5=new JPanel();
  panel_5.setLayout(null);
  panel_5.setBounds(1304,0,178,142);
  panel.add(panel_5);
  JLabel label_17=new JLabel("New label");
  label_17.setIcon(new ImageIcon(main_p.class.getResource("/images/guy_190x142.png")));
  label_17.setBounds(0,0,178,142);
  panel_5.add(label_17);
  JButton btnContactUs=new JButton("Contact Us");
  btnContactUs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_38683474436453");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnContactUs.setForeground(Color.WHITE);
  btnContactUs.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnContactUs.setBackground(new Color(241,57,83));
  btnContactUs.setBounds(1304,142,178,46);
  panel.add(btnContactUs);
  btnNewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_19239371696803");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  submitbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitevent){
      if (genderval == 1) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Male");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      if (genderval == 2) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)  ";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Female");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      nametf.setText(null);
      yearcb.setSelectedIndex(0);
      monthcb.setSelectedIndex(0);
      datecb.setSelectedIndex(0);
      yearcb1.setSelectedIndex(0);
      monthcb1.setSelectedIndex(0);
      datecb1.setSelectedIndex(0);
      addressta.setText(null);
      mobiletf.setText(null);
      emailtf.setText(null);
      worketf.setText(null);
      aidtf.setText(null);
      cl2.show(panel_1,"name_11001346500172");
      panel_1.revalidate();
      addagentpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewagent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent viewagentevent){
      cl.show(grandfatherpanel,"name_19239332734906");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnCheckInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent checkinevent){
      String ans=caidtf.getText();
      int id=Integer.parseInt(ans);
      try {
        String insurancetype=null;
        Connection conn3=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        PreparedStatement stmt=conn3.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
        stmt.setInt(1,id);
        ResultSet rs=stmt.executeQuery();
        while (rs.next()) {
          insurancetype=rs.getString(1);
        }
        if (insurancetype.equals("Term Insurance")) {
          cl4.show(parentpanelc,"name_73735057972235");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from terminsurance");
          ResultSet rs1=stmt2.executeQuery();
          tinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          tinsurancetable.setRowHeight(225);
          tinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Child Plan Insurance")) {
          cl4.show(parentpanelc,"name_73791843709339");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from childinsurance");
          ResultSet rs1=stmt2.executeQuery();
          cinsurancetable.setRowHeight(225);
          cinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          cinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Whole Life Insurance")) {
          cl4.show(parentpanelc,"name_73812949494419");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from lifeinsurance");
          ResultSet rs1=stmt2.executeQuery();
          winsurancetable.setRowHeight(225);
          winsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          winsurancepanel.revalidate();
        }
      }
 catch (      Exception checkexception) {
        System.out.println(checkexception);
      }
    }
  }
);
  btnSubmitDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitaction){
      if (cgenderval == 1) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Male");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      if (cgenderval == 2) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?++)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Female");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      cnametf.setText(null);
      cyearcb.setSelectedIndex(0);
      cmonthcb.setSelectedIndex(0);
      cdatecb.setSelectedIndex(0);
      caddressta.setText(null);
      cmobtf.setText(null);
      ccidtf.setText(null);
      cemailtf.setText(null);
      caidtf.setText(null);
      csalarytf.setText(null);
      cl5.show(messagedisplaypanel,"name_4659622588556");
      addcustomerpanel.revalidate();
      frame.revalidate();
    }
  }
);
  frame.getContentPane().setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{panel,lblNewLabel}));
  frame.revalidate();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  initialize();
}
 expected, but {
  frame=new JFrame();
  frame.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      frameevent(e);
    }
  }
);
  frame.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    MouseEvent evt){
      mouseevent(evt);
    }
  }
);
  frame.setResizable(false);
  frame.setUndecorated(true);
  frame.setBounds(100,100,1650,1000);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  Cursor cur=new Cursor(Cursor.HAND_CURSOR);
  CardLayout cl5=new CardLayout(0,0);
  CardLayout cl4=new CardLayout(0,0);
  String[] dayarr=new String[31];
  for (int i=1; i < 32; i++) {
    dayarr[i - 1]=Integer.toString(i);
  }
  String monarr[]=new String[12];
  for (int i=1; i < 13; i++) {
    monarr[i - 1]=Integer.toString(i);
  }
  String yeararr[]=new String[78];
  for (int j=1940, k=0; j < 2018; j++, k++) {
    yeararr[k]=Integer.toString(j);
  }
  ButtonGroup btngrp1=new ButtonGroup();
  ImageIcon icon11=new ImageIcon("/java_project/src/images/VIR INSURANCE_cropped.jpg");
  frame.setIconImage(icon11.getImage());
  ButtonGroup btngrp=new ButtonGroup();
  frame.getContentPane().setLayout(null);
  JPanel panel=new JPanel();
  panel.setBounds(0,0,1650,188);
  panel.setBackground(Color.DARK_GRAY);
  frame.getContentPane().add(panel);
  panel.setLayout(null);
  JLabel lblNewLabel=new JLabel("New label");
  lblNewLabel.setIcon(new ImageIcon(main_p.class.getResource("/images/VIR INSURANCE.jpg")));
  lblNewLabel.setBounds(0,0,518,188);
  panel.add(lblNewLabel);
  JLabel lblNewLabel_2=new JLabel("resiz");
  lblNewLabel_2.setIcon(new ImageIcon(main_p.class.getResource("/images/security_agent_add_2_190x142.png")));
  lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
  lblNewLabel_2.setBounds(501,0,178,142);
  panel.add(lblNewLabel_2);
  JButton btnNewButton=new JButton("Add Agent");
  btnNewButton.setCursor(cur);
  btnNewButton.setBackground(new Color(241,57,83));
  btnNewButton.setForeground(Color.WHITE);
  btnNewButton.setBounds(501,142,178,46);
  panel.add(btnNewButton);
  JLabel label_10=new JLabel("resiz");
  label_10.setIcon(new ImageIcon(main_p.class.getResource("/images/Online_Agent_New_190x142.jpg")));
  label_10.setHorizontalAlignment(SwingConstants.CENTER);
  label_10.setBounds(701,0,178,142);
  panel.add(label_10);
  JButton btnViewagent=new JButton("View Agents");
  btnViewagent.setCursor(cur);
  btnViewagent.setForeground(Color.WHITE);
  btnViewagent.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewagent.setBackground(new Color(241,57,83));
  btnViewagent.setBounds(701,142,178,46);
  panel.add(btnViewagent);
  JPanel grandfatherpanel=new JPanel();
  grandfatherpanel.setBounds(0,189,1632,764);
  frame.getContentPane().add(grandfatherpanel);
  CardLayout cl=new CardLayout(0,0);
  grandfatherpanel.setLayout(cl);
  JPanel viewagentpanel=new JPanel();
  grandfatherpanel.add(viewagentpanel,"name_19239332734906");
  viewagentpanel.setLayout(null);
  JLabel lblagentDetails=new JLabel("<html><u>Agent Details <u><html>");
  lblagentDetails.setBounds(490,22,652,72);
  lblagentDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblagentDetails.setForeground(new Color(241,57,83));
  lblagentDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblagentDetails.setBackground(Color.WHITE);
  viewagentpanel.add(lblagentDetails);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setBounds(84,165,1480,556);
  viewagentpanel.add(scrollPane);
  table_4=new JTable();
  table_4.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  table_4.setRowHeight(50);
  scrollPane.setViewportView(table_4);
  JButton tablerefreshbtn=new JButton("Load Agent Details");
  tablerefreshbtn.setCursor(cur);
  tablerefreshbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  tablerefreshbtn.setBackground(new Color(241,57,83));
  tablerefreshbtn.setForeground(Color.WHITE);
  tablerefreshbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String tablepopulate="select * from agentinfo";
        PreparedStatement stmt=con.prepareStatement(tablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_4.setModel(DbUtils.resultSetToTableModel(rs));
        viewagentpanel.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  tablerefreshbtn.setBounds(1287,93,277,48);
  viewagentpanel.add(tablerefreshbtn);
  JPanel addagentpanel=new JPanel();
  addagentpanel.setForeground(new Color(241,57,83));
  grandfatherpanel.add(addagentpanel,"name_19239371696803");
  addagentpanel.setLayout(null);
  JLabel label=new JLabel("<html><u>Agent Details & Policies Sold<u><html>");
  label.setHorizontalAlignment(SwingConstants.CENTER);
  label.setForeground(new Color(241,57,83));
  label.setFont(new Font("Tahoma",Font.BOLD,45));
  label.setBackground(Color.WHITE);
  label.setBounds(488,13,664,98);
  addagentpanel.add(label);
  JLabel label_1=new JLabel("Name :");
  label_1.setForeground(new Color(241,57,83));
  label_1.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_1.setBounds(41,129,194,41);
  addagentpanel.add(label_1);
  nametf=new JTextField();
  nametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  nametf.setColumns(10);
  nametf.setBounds(41,169,319,41);
  addagentpanel.add(nametf);
  JLabel label_2=new JLabel("Gender :");
  label_2.setForeground(new Color(241,57,83));
  label_2.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_2.setBounds(41,242,194,41);
  addagentpanel.add(label_2);
  JLabel label_3=new JLabel("Date Of Birth :");
  label_3.setForeground(new Color(241,57,83));
  label_3.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_3.setBounds(41,363,194,41);
  addagentpanel.add(label_3);
  JLabel label_4=new JLabel("Address :");
  label_4.setForeground(new Color(241,57,83));
  label_4.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_4.setBounds(41,483,194,41);
  addagentpanel.add(label_4);
  JRadioButton malerd=new JRadioButton("Male");
  malerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent malerdevent){
      malerdbtn();
    }
  }
);
  malerd.setForeground(Color.DARK_GRAY);
  malerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerd.setBounds(41,290,142,41);
  addagentpanel.add(malerd);
  JRadioButton femalerd=new JRadioButton("Female");
  femalerd.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleevent){
      femalerdbtn();
    }
  }
);
  femalerd.setForeground(Color.DARK_GRAY);
  femalerd.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerd.setBounds(206,290,142,41);
  addagentpanel.add(femalerd);
  JComboBox datecb=new JComboBox(dayarr);
  datecb.setBounds(41,415,70,41);
  addagentpanel.add(datecb);
  JComboBox monthcb=new JComboBox(monarr);
  monthcb.setBounds(137,415,70,41);
  addagentpanel.add(monthcb);
  JComboBox yearcb=new JComboBox(yeararr);
  yearcb.setBounds(229,415,103,41);
  addagentpanel.add(yearcb);
  JTextArea addressta=new JTextArea();
  addressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  addressta.setBounds(41,535,319,165);
  addagentpanel.add(addressta);
  JLabel label_5=new JLabel("Work Experience (Yrs) :");
  label_5.setForeground(new Color(241,57,83));
  label_5.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_5.setBounds(488,129,295,41);
  addagentpanel.add(label_5);
  worketf=new JTextField();
  worketf.setFont(new Font("Tahoma",Font.PLAIN,17));
  worketf.setColumns(10);
  worketf.setBounds(488,169,319,41);
  addagentpanel.add(worketf);
  JLabel lblTelephone=new JLabel("Telephone :");
  lblTelephone.setForeground(new Color(241,57,83));
  lblTelephone.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblTelephone.setBounds(488,252,194,41);
  addagentpanel.add(lblTelephone);
  mobiletf=new JTextField();
  mobiletf.setFont(new Font("Tahoma",Font.PLAIN,17));
  mobiletf.setColumns(10);
  mobiletf.setBounds(488,291,319,41);
  addagentpanel.add(mobiletf);
  JLabel label_7=new JLabel("Email :");
  label_7.setForeground(new Color(241,57,83));
  label_7.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_7.setBounds(488,374,194,41);
  addagentpanel.add(label_7);
  emailtf=new JTextField();
  emailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  emailtf.setColumns(10);
  emailtf.setBounds(488,412,319,41);
  addagentpanel.add(emailtf);
  JLabel label_8=new JLabel("Policy Details");
  label_8.setHorizontalAlignment(SwingConstants.CENTER);
  label_8.setForeground(new Color(241,57,83));
  label_8.setFont(new Font("Tahoma",Font.BOLD,35));
  label_8.setBounds(1015,99,310,53);
  addagentpanel.add(label_8);
  JPanel insurancespanel=new JPanel();
  insurancespanel.setLayout(null);
  insurancespanel.setForeground(Color.WHITE);
  insurancespanel.setBounds(890,169,231,198);
  addagentpanel.add(insurancespanel);
  JButton button_1=new JButton("Child Plan Insurance");
  button_1.setCursor(cur);
  button_1.setForeground(Color.WHITE);
  button_1.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_1.setBackground(new Color(241,57,83));
  button_1.setBounds(0,79,231,42);
  insurancespanel.add(button_1);
  JButton button_2=new JButton("Whole Life Insurance");
  button_2.setCursor(cur);
  button_2.setForeground(Color.WHITE);
  button_2.setFont(new Font("Tahoma",Font.PLAIN,15));
  button_2.setBackground(new Color(241,57,83));
  button_2.setBounds(0,156,231,42);
  insurancespanel.add(button_2);
  JButton btnTermLifeInsurance=new JButton("Term Life Insurance");
  btnTermLifeInsurance.setCursor(cur);
  btnTermLifeInsurance.setForeground(Color.WHITE);
  btnTermLifeInsurance.setFont(new Font("Tahoma",Font.PLAIN,15));
  btnTermLifeInsurance.setBackground(new Color(241,57,83));
  btnTermLifeInsurance.setBounds(0,0,231,42);
  insurancespanel.add(btnTermLifeInsurance);
  JPanel parentpanel=new JPanel();
  parentpanel.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanel.setBounds(1150,170,434,480);
  addagentpanel.add(parentpanel);
  CardLayout cl3=new CardLayout(0,0);
  parentpanel.setLayout(cl3);
  JPanel lifelinsurancepanel=new JPanel();
  parentpanel.add(lifelinsurancepanel,"name_131091957135037");
  lifelinsurancepanel.setLayout(null);
  JLabel lblWholeLife=new JLabel("* Whole Life Insurance is selected.");
  lblWholeLife.setForeground(new Color(241,57,83));
  lblWholeLife.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblWholeLife.setBackground(Color.WHITE);
  lblWholeLife.setBounds(0,420,430,56);
  lifelinsurancepanel.add(lblWholeLife);
  JPanel childinsurancepanel=new JPanel();
  parentpanel.add(childinsurancepanel,"name_130839478752224");
  childinsurancepanel.setLayout(null);
  JPanel terminsurancepanel=new JPanel();
  parentpanel.add(terminsurancepanel,"name_130515214938554");
  terminsurancepanel.setLayout(null);
  JPanel redundantpanel2=new JPanel();
  parentpanel.add(redundantpanel2,"name_63847240216221");
  cl3.show(parentpanel,"name_63847240216221");
  JComboBox datecb1=new JComboBox(dayarr);
  datecb1.setBounds(488,516,70,41);
  addagentpanel.add(datecb1);
  JComboBox monthcb1=new JComboBox(monarr);
  monthcb1.setBounds(585,516,70,41);
  addagentpanel.add(monthcb1);
  JComboBox yearcb1=new JComboBox(yeararr);
  yearcb1.setBounds(680,516,103,41);
  addagentpanel.add(yearcb1);
  JLabel label_9=new JLabel("Date Of Joining :");
  label_9.setForeground(new Color(241,57,83));
  label_9.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_9.setBounds(488,464,194,41);
  addagentpanel.add(label_9);
  String column[]={"AGE","TERM","SUM ASSURESD","PREMIMUM"};
  String data[][]={{"AGE","TERM","SUM ASSURESD","PREMIMUM"},{"25 Years","40 Years","Rs . 1 Cr."," Rs . 10,500"},{"35 Years","30 Years","Rs . 25 Lakhs","Rs . 8,800"}};
  String column1[]={"TERM","SUM ASSURED","PREMIUM"};
  String data1[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.3 Lakhs","Rs.10,000"},{"35 Years","Rs.4 Lakhs","Rs.18,000"}};
  String column2[]={"TERM","SUM ASSURED","PREMIUM"};
  String data2[][]={{"TERM","SUM ASSURED","PREMIUM"},{"20 Years","Rs.18 Lakhs","Rs.1 Lakh"},{"35 Years","Rs.40 Lakhs","Rs.4 Lakhs"}};
  table_3=new JTable();
  table_3.setRowHeight(210);
  table_3.setBounds(0,0,430,420);
  lifelinsurancepanel.add(table_3);
  table=new JTable();
  table.setBounds(0,0,430,420);
  table.setRowHeight(210);
  terminsurancepanel.add(table);
  JLabel lblNewLabel_1=new JLabel("* Term Life Insurance is selected.");
  lblNewLabel_1.setForeground(new Color(241,57,83));
  lblNewLabel_1.setBackground(Color.WHITE);
  lblNewLabel_1.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblNewLabel_1.setBounds(0,420,430,56);
  terminsurancepanel.add(lblNewLabel_1);
  table_2=new JTable();
  table_2.setBounds(0,0,430,420);
  table_2.setRowHeight(210);
  childinsurancepanel.add(table_2);
  JLabel lblChildPlan=new JLabel("* Child Plan Insurance is selected.");
  lblChildPlan.setForeground(new Color(241,57,83));
  lblChildPlan.setFont(new Font("Tahoma",Font.PLAIN,20));
  lblChildPlan.setBackground(Color.WHITE);
  lblChildPlan.setBounds(0,420,430,56);
  childinsurancepanel.add(lblChildPlan);
  JLabel lblAgentId=new JLabel("Agent ID :");
  lblAgentId.setForeground(new Color(241,57,83));
  lblAgentId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblAgentId.setBounds(488,568,194,41);
  addagentpanel.add(lblAgentId);
  aidtf=new JTextField();
  aidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  aidtf.setColumns(10);
  aidtf.setBounds(488,620,319,41);
  addagentpanel.add(aidtf);
  JButton submitbtn=new JButton("SUBMIT");
  submitbtn.setCursor(cur);
  submitbtn.setForeground(Color.WHITE);
  submitbtn.setFont(new Font("Tahoma",Font.BOLD,15));
  submitbtn.setBackground(new Color(241,57,83));
  submitbtn.setBounds(532,687,231,42);
  addagentpanel.add(submitbtn);
  CardLayout cl2=new CardLayout(0,0);
  JPanel panel_1=new JPanel();
  panel_1.setBounds(890,687,461,53);
  addagentpanel.add(panel_1);
  panel_1.setLayout(cl2);
  JPanel panel_3=new JPanel();
  panel_1.add(panel_3,"name_11001346500172");
  panel_3.setLayout(null);
  JLabel lblNewLabel_3=new JLabel("* Agent details have been submitted.");
  lblNewLabel_3.setForeground(new Color(241,57,83));
  lblNewLabel_3.setFont(new Font("Tahoma",Font.BOLD,17));
  lblNewLabel_3.setBounds(0,0,451,53);
  panel_3.add(lblNewLabel_3);
  JPanel panel_4=new JPanel();
  panel_1.add(panel_4,"name_11082648641670");
  cl2.show(panel_1,"name_11082648641670");
  JLabel warninglabel=new JLabel("(8 Digit Number)");
  warninglabel.setForeground(new Color(241,57,83));
  warninglabel.setFont(new Font("Tahoma",Font.PLAIN,14));
  warninglabel.setBounds(488,336,224,20);
  addagentpanel.add(warninglabel);
  JPanel buttonpanel=new JPanel();
  buttonpanel.setBounds(890,415,231,218);
  addagentpanel.add(buttonpanel);
  buttonpanel.setLayout(new CardLayout(0,0));
  JPanel cibtnpanel=new JPanel();
  buttonpanel.add(cibtnpanel,"name_94240132484303");
  cibtnpanel.setLayout(null);
  JPanel tibtnpanel=new JPanel();
  buttonpanel.add(tibtnpanel,"name_94280454630953");
  JPanel libtnpanel=new JPanel();
  buttonpanel.add(libtnpanel,"name_94295818881193");
  JPanel redundantpanel=new JPanel();
  grandfatherpanel.add(redundantpanel,"name_19239387057142");
  JPanel addcustomerpanel=new JPanel();
  addcustomerpanel.setForeground(Color.WHITE);
  grandfatherpanel.add(addcustomerpanel,"name_19239433071790");
  addcustomerpanel.setLayout(null);
  JLabel label_11=new JLabel("Name :");
  label_11.setForeground(new Color(241,57,83));
  label_11.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_11.setBounds(34,206,194,41);
  addcustomerpanel.add(label_11);
  JLabel lblcustomerDetails=new JLabel("<html><u>Customer Details<u><html>");
  lblcustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblcustomerDetails.setForeground(new Color(241,57,83));
  lblcustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcustomerDetails.setBackground(Color.WHITE);
  lblcustomerDetails.setBounds(532,0,664,98);
  addcustomerpanel.add(lblcustomerDetails);
  cnametf=new JTextField();
  cnametf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cnametf.setColumns(10);
  cnametf.setBounds(34,249,319,41);
  addcustomerpanel.add(cnametf);
  JLabel label_12=new JLabel("Gender :");
  label_12.setForeground(new Color(241,57,83));
  label_12.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_12.setBounds(34,314,194,41);
  addcustomerpanel.add(label_12);
  JRadioButton malerdbtn1=new JRadioButton("Male");
  malerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent maleactionc){
      malerdbtn1();
    }
  }
);
  malerdbtn1.setForeground(Color.DARK_GRAY);
  malerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  malerdbtn1.setBounds(34,348,142,41);
  addcustomerpanel.add(malerdbtn1);
  JRadioButton femalerdbtn1=new JRadioButton("Female");
  femalerdbtn1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent femaleaction1){
      femalerdbtn1();
    }
  }
);
  femalerdbtn1.setForeground(Color.DARK_GRAY);
  femalerdbtn1.setFont(new Font("Tahoma",Font.PLAIN,20));
  femalerdbtn1.setBounds(195,348,142,41);
  addcustomerpanel.add(femalerdbtn1);
  btngrp1.add(malerdbtn1);
  btngrp1.add(femalerdbtn1);
  JLabel label_13=new JLabel("Date Of Birth :");
  label_13.setForeground(new Color(241,57,83));
  label_13.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_13.setBounds(34,390,194,41);
  addcustomerpanel.add(label_13);
  JComboBox cdatecb=new JComboBox(dayarr);
  cdatecb.setBounds(34,444,70,41);
  addcustomerpanel.add(cdatecb);
  JComboBox cmonthcb=new JComboBox(monarr);
  cmonthcb.setBounds(131,444,70,41);
  addcustomerpanel.add(cmonthcb);
  JComboBox cyearcb=new JComboBox(yeararr);
  cyearcb.setBounds(222,444,103,41);
  addcustomerpanel.add(cyearcb);
  JLabel label_14=new JLabel("Address :");
  label_14.setForeground(new Color(241,57,83));
  label_14.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_14.setBounds(34,498,194,41);
  addcustomerpanel.add(label_14);
  JTextArea caddressta=new JTextArea();
  caddressta.setFont(new Font("Monospaced",Font.PLAIN,17));
  caddressta.setBounds(34,537,319,165);
  addcustomerpanel.add(caddressta);
  JLabel label_15=new JLabel("Telephone :");
  label_15.setForeground(new Color(241,57,83));
  label_15.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_15.setBounds(438,113,194,41);
  addcustomerpanel.add(label_15);
  cmobtf=new JTextField();
  cmobtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cmobtf.setColumns(10);
  cmobtf.setBounds(438,152,319,41);
  addcustomerpanel.add(cmobtf);
  JLabel label_16=new JLabel("Email :");
  label_16.setForeground(new Color(241,57,83));
  label_16.setFont(new Font("Tahoma",Font.PLAIN,25));
  label_16.setBounds(438,236,194,41);
  addcustomerpanel.add(label_16);
  cemailtf=new JTextField();
  cemailtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  cemailtf.setColumns(10);
  cemailtf.setBounds(438,274,319,41);
  addcustomerpanel.add(cemailtf);
  JLabel lblSalary=new JLabel("Salary :");
  lblSalary.setForeground(new Color(241,57,83));
  lblSalary.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblSalary.setBounds(438,346,194,41);
  addcustomerpanel.add(lblSalary);
  csalarytf=new JTextField();
  csalarytf.setFont(new Font("Tahoma",Font.PLAIN,17));
  csalarytf.setColumns(10);
  csalarytf.setBounds(438,384,319,41);
  addcustomerpanel.add(csalarytf);
  JLabel lblEnterYourAgent=new JLabel("Enter Your Agent ID :");
  lblEnterYourAgent.setForeground(new Color(241,57,83));
  lblEnterYourAgent.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblEnterYourAgent.setBounds(438,466,319,41);
  addcustomerpanel.add(lblEnterYourAgent);
  caidtf=new JTextField();
  caidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  caidtf.setColumns(10);
  caidtf.setBounds(438,510,319,41);
  addcustomerpanel.add(caidtf);
  JButton btnCheckInsurance=new JButton("Check Insurance");
  btnCheckInsurance.setCursor(cur);
  btnCheckInsurance.setForeground(Color.WHITE);
  btnCheckInsurance.setFont(new Font("Tahoma",Font.BOLD,20));
  btnCheckInsurance.setBackground(new Color(241,57,83));
  btnCheckInsurance.setBounds(438,576,319,55);
  addcustomerpanel.add(btnCheckInsurance);
  JPanel parentpanelc=new JPanel();
  parentpanelc.setBorder(new EtchedBorder(EtchedBorder.RAISED,(new Color(241,57,83)),null));
  parentpanelc.setBounds(897,152,689,540);
  addcustomerpanel.add(parentpanelc);
  parentpanelc.setLayout(cl4);
  JPanel tinsurancepanel=new JPanel();
  parentpanelc.add(tinsurancepanel,"name_73735057972235");
  tinsurancepanel.setLayout(null);
  JScrollPane scrollPane_3=new JScrollPane();
  scrollPane_3.setBounds(0,0,685,466);
  tinsurancepanel.add(scrollPane_3);
  tinsurancetable=new JTable();
  scrollPane_3.setViewportView(tinsurancetable);
  JLabel tinsurancelabel=new JLabel("* Term Insurance has been selected.");
  tinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  tinsurancelabel.setForeground(new Color(241,57,83));
  tinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  tinsurancelabel.setBounds(0,466,685,70);
  tinsurancepanel.add(tinsurancelabel);
  JPanel cinsurancepanel=new JPanel();
  parentpanelc.add(cinsurancepanel,"name_73791843709339");
  cinsurancepanel.setLayout(null);
  JScrollPane scrollPane_2=new JScrollPane();
  scrollPane_2.setBounds(0,0,685,466);
  cinsurancepanel.add(scrollPane_2);
  cinsurancetable=new JTable();
  scrollPane_2.setViewportView(cinsurancetable);
  JLabel cinsurancelabel=new JLabel("* Child Plan Insurance has been selected.");
  cinsurancelabel.setHorizontalAlignment(SwingConstants.CENTER);
  cinsurancelabel.setForeground(new Color(241,57,83));
  cinsurancelabel.setFont(new Font("Tahoma",Font.ITALIC,20));
  cinsurancelabel.setBounds(0,466,685,70);
  cinsurancepanel.add(cinsurancelabel);
  JPanel winsurancepanel=new JPanel();
  parentpanelc.add(winsurancepanel,"name_73812949494419");
  winsurancepanel.setLayout(null);
  JScrollPane scrollPane_1=new JScrollPane();
  scrollPane_1.setBounds(0,0,685,466);
  winsurancepanel.add(scrollPane_1);
  winsurancetable=new JTable();
  scrollPane_1.setViewportView(winsurancetable);
  JLabel lblWholeLife_1=new JLabel("* Whole Life Insurance has been selected.");
  lblWholeLife_1.setHorizontalAlignment(SwingConstants.CENTER);
  lblWholeLife_1.setForeground(new Color(241,57,83));
  lblWholeLife_1.setFont(new Font("Tahoma",Font.ITALIC,20));
  lblWholeLife_1.setBounds(0,466,685,70);
  winsurancepanel.add(lblWholeLife_1);
  JPanel credundantpanel=new JPanel();
  parentpanelc.add(credundantpanel,"name_73862456257256");
  cl4.show(parentpanelc,"name_73862456257256");
  JButton btnSubmitDetails=new JButton("Submit Details");
  btnSubmitDetails.setCursor(cur);
  btnSubmitDetails.setForeground(Color.WHITE);
  btnSubmitDetails.setFont(new Font("Tahoma",Font.BOLD,20));
  btnSubmitDetails.setBackground(new Color(241,57,83));
  btnSubmitDetails.setBounds(438,662,319,55);
  addcustomerpanel.add(btnSubmitDetails);
  JLabel lblCustomerId=new JLabel("Customer ID :");
  lblCustomerId.setForeground(new Color(241,57,83));
  lblCustomerId.setFont(new Font("Tahoma",Font.PLAIN,25));
  lblCustomerId.setBounds(34,113,194,41);
  addcustomerpanel.add(lblCustomerId);
  ccidtf=new JTextField();
  ccidtf.setFont(new Font("Tahoma",Font.PLAIN,17));
  ccidtf.setColumns(10);
  ccidtf.setBounds(34,152,319,41);
  addcustomerpanel.add(ccidtf);
  JPanel messagedisplaypanel=new JPanel();
  messagedisplaypanel.setBounds(897,706,508,31);
  addcustomerpanel.add(messagedisplaypanel);
  messagedisplaypanel.setLayout(cl5);
  JPanel messagedisplay=new JPanel();
  messagedisplaypanel.add(messagedisplay,"name_4659622588556");
  messagedisplay.setLayout(null);
  JLabel lblNewLabel_4=new JLabel("* Details have been submitted.");
  lblNewLabel_4.setFont(new Font("Tahoma",Font.PLAIN,17));
  lblNewLabel_4.setForeground(new Color(241,57,83));
  lblNewLabel_4.setBounds(0,0,508,29);
  messagedisplay.add(lblNewLabel_4);
  JPanel messageredundantpanel=new JPanel();
  messagedisplaypanel.add(messageredundantpanel,"name_4667681966752");
  cl5.show(messagedisplaypanel,"name_4667681966752");
  cl.show(grandfatherpanel,"name_19239387057142");
  JPanel viewcustomerpanel=new JPanel();
  grandfatherpanel.add(viewcustomerpanel,"name_7105952272002");
  viewcustomerpanel.setLayout(null);
  JScrollPane scrollPane_4=new JScrollPane();
  scrollPane_4.setBounds(26,150,1575,585);
  viewcustomerpanel.add(scrollPane_4);
  custdetailstb=new JTable();
  custdetailstb.setRowHeight(50);
  scrollPane_4.setViewportView(custdetailstb);
  custdetailstb.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  JLabel lblviewCustomerDetails=new JLabel("<html><u>View Customer Details<u><html>");
  lblviewCustomerDetails.setHorizontalAlignment(SwingConstants.CENTER);
  lblviewCustomerDetails.setForeground(new Color(241,57,83));
  lblviewCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,45));
  lblviewCustomerDetails.setBackground(Color.WHITE);
  lblviewCustomerDetails.setBounds(481,0,664,98);
  viewcustomerpanel.add(lblviewCustomerDetails);
  JButton btnLoadCustomerDetails=new JButton("Load Customer Details");
  btnLoadCustomerDetails.setCursor(cur);
  btnLoadCustomerDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent loadcustdetails){
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from customerinfo";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        custdetailstb.setModel(DbUtils.resultSetToTableModel(rs));
        viewcustomerpanel.revalidate();
        frame.revalidate();
      }
 catch (      Exception except) {
        System.out.println(except);
      }
    }
  }
);
  btnLoadCustomerDetails.setForeground(Color.WHITE);
  btnLoadCustomerDetails.setFont(new Font("Tahoma",Font.BOLD,15));
  btnLoadCustomerDetails.setBackground(new Color(241,57,83));
  btnLoadCustomerDetails.setBounds(1271,85,277,48);
  viewcustomerpanel.add(btnLoadCustomerDetails);
  JPanel contactuspanel=new JPanel();
  grandfatherpanel.add(contactuspanel,"name_38683474436453");
  contactuspanel.setLayout(null);
  JLabel lblcontactUss=new JLabel("<html><u>Contact Us<u><html>");
  lblcontactUss.setHorizontalAlignment(SwingConstants.CENTER);
  lblcontactUss.setForeground(new Color(241,57,83));
  lblcontactUss.setFont(new Font("Tahoma",Font.BOLD,45));
  lblcontactUss.setBackground(Color.WHITE);
  lblcontactUss.setBounds(497,0,664,98);
  contactuspanel.add(lblcontactUss);
  JButton btnNewButton_2=new JButton("");
  btnNewButton_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.gmail.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_2.setIcon(new ImageIcon(main_p.class.getResource("/images/2000px-New_Logo_Gmail.svg_99x87.png")));
  btnNewButton_2.setBounds(74,119,105,87);
  contactuspanel.add(btnNewButton_2);
  JButton button_3=new JButton("");
  button_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.twitter.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_3.setBackground(Color.WHITE);
  button_3.setIcon(new ImageIcon(main_p.class.getResource("/images/dezeen_twitter-bird_99x87.gif")));
  button_3.setBounds(74,255,105,87);
  contactuspanel.add(button_3);
  JButton button_4=new JButton("");
  button_4.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.facebook.com");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_4.setIcon(new ImageIcon(main_p.class.getResource("/images/flogo_rgb_hex-brc-site-250_99x87.png")));
  button_4.setBackground(Color.WHITE);
  button_4.setBounds(74,386,105,87);
  contactuspanel.add(button_4);
  JButton button_5=new JButton("");
  button_5.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("http://www.shahandanchor.com/home/");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  button_5.setIcon(new ImageIcon(main_p.class.getResource("/images/Shah-And-Anchor-Kutchhi-Engineering-College_99x87.jpg")));
  button_5.setBackground(Color.WHITE);
  button_5.setBounds(74,513,105,87);
  contactuspanel.add(button_5);
  JPanel panel_6=new JPanel();
  panel_6.setBorder(new EtchedBorder(EtchedBorder.LOWERED,new Color(241,57,83),null));
  panel_6.setBounds(234,119,969,439);
  contactuspanel.add(panel_6);
  panel_6.setLayout(null);
  JButton btnNewButton_3=new JButton("New button");
  btnNewButton_3.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      openWebpage("https://www.google.com/maps/place/Shah+%26+Anchor+Kutchhi+Engineering+College/@19.048219,72.91165,14z/data=!4m5!3m4!1s0x0:0x9ebbdeaea9ec24ae!8m2!3d19.0482157!4d72.9116581?hl=en");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnNewButton_3.setIcon(new ImageIcon(main_p.class.getResource("/images/Screenshot_2018-10-03 Contact Us - SAKEC-Shah Anchor Kutchhi Engineering College.png")));
  btnNewButton_3.setBounds(10,55,950,328);
  panel_6.add(btnNewButton_3);
  JLabel lblNewLabel_7=new JLabel("<html>Postal Address<br/>\r\n\r\nShah & Anchor Kutchhi Engineering College\r\n\r\nMahavir Education Trust\u2019s Chowk,<br/> Waman Tukaram Patil Marg,<br/> Next to Dukes Co.,<br/> Chembur, Mumbai \u2013 400 088.\r\n<br/>\r\n<br/><br/><br/>\r\nContact Details\r\n\r\n<br/>Contact-No: 022-25580854\r\n\r\n<br/>Fax-No:25568100\r\n\r\n<br/>Email-Id: info@sakec.ac.in </html>");
  lblNewLabel_7.setVerticalAlignment(SwingConstants.TOP);
  lblNewLabel_7.setFont(new Font("Tahoma",Font.BOLD,20));
  lblNewLabel_7.setForeground(new Color(241,57,83));
  lblNewLabel_7.setBounds(1228,119,374,439);
  contactuspanel.add(lblNewLabel_7);
  btnTermLifeInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event1){
      cl3.show(parentpanel,"name_130515214938554");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Term Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      frame.revalidate();
      parentpanel.revalidate();
      insurance1();
    }
  }
);
  button_2.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event3){
      cl3.show(parentpanel,"name_131091957135037");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Whole Life Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance3();
    }
  }
);
  button_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event2){
      cl3.show(parentpanel,"name_130839478752224");
      try {
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        String ctablepopulate="select * from insurance where type='Child Plan Insurance'";
        PreparedStatement stmt=con.prepareStatement(ctablepopulate);
        ResultSet rs=stmt.executeQuery();
        table_2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (      Exception except) {
        System.out.println(except);
      }
      addagentpanel.revalidate();
      insurancespanel.revalidate();
      parentpanel.revalidate();
      frame.revalidate();
      insurance2();
    }
  }
);
  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,16));
  JLabel label_6=new JLabel("resiz");
  label_6.setIcon(new ImageIcon(main_p.class.getResource("/images/Customer_Female_Add_190x142.jpg")));
  label_6.setHorizontalAlignment(SwingConstants.CENTER);
  label_6.setBounds(900,0,178,142);
  panel.add(label_6);
  JButton btnAddCustomer=new JButton("Add Customer");
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent customeraddevent){
      cl.show(grandfatherpanel,"name_19239433071790");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnAddCustomer.setForeground(Color.WHITE);
  btnAddCustomer.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnAddCustomer.setCursor(cur);
  btnAddCustomer.setBackground(new Color(241,57,83));
  btnAddCustomer.setBounds(900,142,178,46);
  panel.add(btnAddCustomer);
  JButton btnViewCustomers=new JButton("View Customers");
  btnViewCustomers.setCursor(cur);
  btnViewCustomers.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e7){
      cl.show(grandfatherpanel,"name_7105952272002");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewCustomers.setForeground(Color.WHITE);
  btnViewCustomers.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnViewCustomers.setBackground(new Color(241,57,83));
  btnViewCustomers.setBounds(1102,142,178,46);
  panel.add(btnViewCustomers);
  JPanel panel_2=new JPanel();
  panel_2.setBounds(1102,0,178,142);
  panel.add(panel_2);
  panel_2.setLayout(null);
  JLabel lblNewLabel_5=new JLabel("New label");
  lblNewLabel_5.setIcon(new ImageIcon(main_p.class.getResource("/images/User_info_man_male_profile_information_190x142.png")));
  lblNewLabel_5.setBounds(0,0,178,142);
  panel_2.add(lblNewLabel_5);
  JButton btnNewButton_1=new JButton("X");
  btnNewButton_1.setCursor(cur);
  btnNewButton_1.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent exitevent){
      frameexit=new JFrame("Exit");
      if (JOptionPane.showConfirmDialog(frameexit,"Confirm if you want to exit","Login Systems",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        System.exit(0);
      }
    }
  }
);
  btnNewButton_1.setFont(new Font("Tahoma",Font.BOLD,17));
  btnNewButton_1.setBackground(Color.DARK_GRAY);
  btnNewButton_1.setForeground(Color.RED);
  btnNewButton_1.setBounds(1582,0,68,29);
  panel.add(btnNewButton_1);
  JButton button=new JButton("---");
  button.setCursor(cur);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent minimizeevent){
      frame.setState(JFrame.ICONIFIED);
    }
  }
);
  button.setForeground(Color.RED);
  button.setFont(new Font("Tahoma",Font.BOLD,19));
  button.setBackground(Color.DARK_GRAY);
  button.setBounds(1504,0,68,29);
  panel.add(button);
  JPanel panel_5=new JPanel();
  panel_5.setLayout(null);
  panel_5.setBounds(1304,0,178,142);
  panel.add(panel_5);
  JLabel label_17=new JLabel("New label");
  label_17.setIcon(new ImageIcon(main_p.class.getResource("/images/guy_190x142.png")));
  label_17.setBounds(0,0,178,142);
  panel_5.add(label_17);
  JButton btnContactUs=new JButton("Contact Us");
  btnContactUs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_38683474436453");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnContactUs.setForeground(Color.WHITE);
  btnContactUs.setFont(new Font("Tahoma",Font.PLAIN,16));
  btnContactUs.setBackground(new Color(241,57,83));
  btnContactUs.setBounds(1304,142,178,46);
  panel.add(btnContactUs);
  btnNewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cl.show(grandfatherpanel,"name_19239371696803");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  submitbtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitevent){
      if (genderval == 1) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Male");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      if (genderval == 2) {
        try {
          Connection conn1=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          String updatequery="insert into agentinfo values (?,?,?,?,?,?,?,?,?,?)  ";
          PreparedStatement stmt=conn1.prepareStatement(updatequery);
          stmt.setString(1,nametf.getText());
          stmt.setString(2,"Female");
          String dob;
          String s1=(String)yearcb.getSelectedItem();
          String s2=(String)monthcb.getSelectedItem();
          String s3=(String)datecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(3,dob);
          String address=addressta.getText();
          stmt.setString(4,address);
          try {
            int mob=Integer.parseInt(mobiletf.getText());
            stmt.setInt(5,mob);
          }
 catch (          Exception e) {
            warninglabel.setText("Enter a telephone number");
          }
          stmt.setString(6,emailtf.getText());
          String doj;
          String s4=(String)yearcb1.getSelectedItem();
          String s5=(String)monthcb1.getSelectedItem();
          String s6=(String)datecb1.getSelectedItem();
          doj=s4 + "-" + s5+ "-"+ s6;
          stmt.setString(7,doj);
          stmt.setInt(8,Integer.parseInt(aidtf.getText()));
          stmt.setInt(9,Integer.parseInt(worketf.getText()));
          if (insuranceval == 1) {
            stmt.setString(10,"Term Insurance");
          }
          if (insuranceval == 2) {
            stmt.setString(10,"Child Plan Insurance");
          }
          if (insuranceval == 3) {
            stmt.setString(10,"Whole Life Insurance");
          }
          stmt.executeUpdate();
        }
 catch (        SQLException except1) {
          System.out.println(except1);
        }
      }
      nametf.setText(null);
      yearcb.setSelectedIndex(0);
      monthcb.setSelectedIndex(0);
      datecb.setSelectedIndex(0);
      yearcb1.setSelectedIndex(0);
      monthcb1.setSelectedIndex(0);
      datecb1.setSelectedIndex(0);
      addressta.setText(null);
      mobiletf.setText(null);
      emailtf.setText(null);
      worketf.setText(null);
      aidtf.setText(null);
      cl2.show(panel_1,"name_11001346500172");
      panel_1.revalidate();
      addagentpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnViewagent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent viewagentevent){
      cl.show(grandfatherpanel,"name_19239332734906");
      grandfatherpanel.revalidate();
      frame.revalidate();
    }
  }
);
  btnCheckInsurance.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent checkinevent){
      String ans=caidtf.getText();
      int id=Integer.parseInt(ans);
      try {
        String insurancetype=null;
        Connection conn3=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
        PreparedStatement stmt=conn3.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
        stmt.setInt(1,id);
        ResultSet rs=stmt.executeQuery();
        while (rs.next()) {
          insurancetype=rs.getString(1);
        }
        if (insurancetype.equals("Term Insurance")) {
          cl4.show(parentpanelc,"name_73735057972235");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from terminsurance");
          ResultSet rs1=stmt2.executeQuery();
          tinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          tinsurancetable.setRowHeight(225);
          tinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Child Plan Insurance")) {
          cl4.show(parentpanelc,"name_73791843709339");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from childinsurance");
          ResultSet rs1=stmt2.executeQuery();
          cinsurancetable.setRowHeight(225);
          cinsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          cinsurancepanel.revalidate();
        }
        if (insurancetype.equals("Whole Life Insurance")) {
          cl4.show(parentpanelc,"name_73812949494419");
          Connection conn4=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt2=conn4.prepareStatement(" Select * from lifeinsurance");
          ResultSet rs1=stmt2.executeQuery();
          winsurancetable.setRowHeight(225);
          winsurancetable.setModel(DbUtils.resultSetToTableModel(rs1));
          winsurancepanel.revalidate();
        }
      }
 catch (      Exception checkexception) {
        System.out.println(checkexception);
      }
    }
  }
);
  btnSubmitDetails.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent submitaction){
      if (cgenderval == 1) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Male");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      if (cgenderval == 2) {
        try {
          Connection conn5=DriverManager.getConnection("jdbc:mysql://localhost:3306/mini_project?verifyServerCertificate=false&useSSL=true","root","");
          PreparedStatement stmt1=conn5.prepareStatement(" Select Insurance from agentinfo where agent_id=? ");
          stmt1.setInt(1,Integer.parseInt(caidtf.getText()));
          ResultSet rs=stmt1.executeQuery();
          String insurance="";
          while (rs.next()) {
            insurance=rs.getString(1);
          }
          String updatequery="insert into customerinfo values (?,?,?,?,?,?,?,?,?,?++)";
          PreparedStatement stmt=conn5.prepareStatement(updatequery);
          stmt.setInt(1,Integer.parseInt(ccidtf.getText()));
          stmt.setString(2,cnametf.getText());
          stmt.setString(3,"Female");
          String dob;
          String s1=(String)cyearcb.getSelectedItem();
          String s2=(String)cmonthcb.getSelectedItem();
          String s3=(String)cdatecb.getSelectedItem();
          dob=s1 + "-" + s2+ "-"+ s3;
          stmt.setString(4,dob);
          String address=caddressta.getText();
          stmt.setString(5,address);
          int mob=Integer.parseInt(cmobtf.getText());
          stmt.setInt(6,mob);
          stmt.setString(8,cemailtf.getText());
          stmt.setFloat(7,Float.parseFloat(csalarytf.getText()));
          stmt.setInt(9,Integer.parseInt(caidtf.getText()));
          stmt.setString(10,insurance);
          stmt.executeUpdate();
        }
 catch (        Exception c) {
          System.out.println(c);
        }
      }
      cnametf.setText(null);
      cyearcb.setSelectedIndex(0);
      cmonthcb.setSelectedIndex(0);
      cdatecb.setSelectedIndex(0);
      caddressta.setText(null);
      cmobtf.setText(null);
      ccidtf.setText(null);
      cemailtf.setText(null);
      caidtf.setText(null);
      csalarytf.setText(null);
      cl5.show(messagedisplaypanel,"name_4659622588556");
      addcustomerpanel.revalidate();
      frame.revalidate();
    }
  }
);
  frame.getContentPane().setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{panel,lblNewLabel}));
  frame.revalidate();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
	at java.awt.EventQueue.access$500(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.awt.EventQueue$3.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
!SESSION 2018-10-05 15:37:24.403 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-05 15:38:01.343
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-05 21:16:07.572 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-05 21:16:28.079
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-05 22:19:04.559 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-05 22:19:18.840
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-06 03:15:45.137 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-06 03:15:54.513
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-06 10:12:44.587 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-06 10:13:02.064
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 4 0 2018-10-06 10:15:26.104
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IndexOutOfBoundsException: Index: 15, Size: 7
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1406)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.verifyKey(CompletionProposalPopup.java:1346)
	at org.eclipse.jface.text.contentassist.ContentAssistant$InternalListener.verifyKey(ContentAssistant.java:809)
	at org.eclipse.jface.text.TextViewer$VerifyKeyListenersManager.verifyKey(TextViewer.java:480)
	at org.eclipse.swt.custom.StyledTextListener.handleEvent(StyledTextListener.java:69)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1064)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:6040)
	at org.eclipse.swt.custom.StyledText.lambda$1(StyledText.java:5743)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1064)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1106)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1102)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1745)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5160)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:414)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4800)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:348)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2309)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3559)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)
!SESSION 2018-10-09 03:31:43.028 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-09 03:31:59.419
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-09 12:37:21.871 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-09 12:37:50.254
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 4 0 2018-10-09 13:44:51.423
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Graphic is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4595)
	at org.eclipse.swt.SWT.error(SWT.java:4510)
	at org.eclipse.swt.SWT.error(SWT.java:4481)
	at org.eclipse.swt.graphics.Font.getFontData(Font.java:195)
	at org.eclipse.swt.custom.CTabFolderRenderer.drawChevron(CTabFolderRenderer.java:912)
	at org.eclipse.swt.custom.CTabFolderRenderer.draw(CTabFolderRenderer.java:608)
	at org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering.draw(CTabRendering.java:254)
	at org.eclipse.swt.custom.CTabFolder.createButtonImage(CTabFolder.java:738)
	at org.eclipse.swt.custom.CTabFolder.setButtonBounds(CTabFolder.java:2572)
	at org.eclipse.swt.custom.CTabFolder.updateItems(CTabFolder.java:3798)
	at org.eclipse.swt.custom.CTabFolder.updateItems(CTabFolder.java:3729)
	at org.eclipse.swt.custom.CTabFolder.onResize(CTabFolder.java:2121)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:338)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Control.sendResize(Control.java:3066)
	at org.eclipse.swt.widgets.Composite.sendResize(Composite.java:1036)
	at org.eclipse.swt.widgets.Composite.setBoundsInPixels(Composite.java:1086)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3235)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3231)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:3226)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:207)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1362)
	at org.eclipse.swt.widgets.Composite.sendResize(Composite.java:1040)
	at org.eclipse.swt.widgets.Composite.setBoundsInPixels(Composite.java:1086)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3235)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3231)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:3226)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:207)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1362)
	at org.eclipse.swt.widgets.Composite.sendResize(Composite.java:1040)
	at org.eclipse.swt.widgets.Composite.setBoundsInPixels(Composite.java:1086)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3235)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3231)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3307)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:3303)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.setRectangle(SashLayout.java:286)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.tileSubNodes(SashLayout.java:231)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.tileSubNodes(SashLayout.java:274)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.tileSubNodes(SashLayout.java:274)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.tileSubNodes(SashLayout.java:274)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.layout(SashLayout.java:148)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1362)
	at org.eclipse.swt.widgets.Composite.sendResize(Composite.java:1040)
	at org.eclipse.swt.widgets.Composite.setBoundsInPixels(Composite.java:1086)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3235)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3231)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:3226)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:207)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1362)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:1764)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:2304)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:91)
	at org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGED(Control.java:5687)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4856)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3274)
	at org.eclipse.swt.widgets.Composite.setBoundsInPixels(Composite.java:1080)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3235)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3231)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3307)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:3303)
	at org.eclipse.swt.custom.StackLayout.layout(StackLayout.java:126)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1362)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:1764)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:2304)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:91)
	at org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGED(Control.java:5687)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4856)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3274)
	at org.eclipse.swt.widgets.Composite.setBoundsInPixels(Composite.java:1080)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3235)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3231)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3307)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:3303)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.setRectangle(SashLayout.java:286)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.tileSubNodes(SashLayout.java:231)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.tileSubNodes(SashLayout.java:274)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashLayout.layout(SashLayout.java:148)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1362)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:1764)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:2304)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:91)
	at org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGED(Control.java:5687)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4856)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3274)
	at org.eclipse.swt.widgets.Composite.setBoundsInPixels(Composite.java:1080)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3235)
	at org.eclipse.swt.widgets.Control.setBoundsInPixels(Control.java:3231)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:3226)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:207)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1362)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:1764)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:2304)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:91)
	at org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGED(Control.java:5687)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4856)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4792)
	at org.eclipse.swt.internal.win32.OS.EndDeferWindowPos(Native Method)
	at org.eclipse.swt.widgets.Composite.resizeChildren(Composite.java:1010)
	at org.eclipse.swt.widgets.Composite.resizeChildren(Composite.java:976)
	at org.eclipse.swt.widgets.Composite.setResizeChildren(Composite.java:1188)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:1768)
	at org.eclipse.swt.widgets.Canvas.WM_SIZE(Canvas.java:452)
	at org.eclipse.swt.widgets.Decorations.WM_SIZE(Decorations.java:1668)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:348)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1502)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2162)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4792)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:2304)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:508)
	at org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGED(Control.java:5687)
	at org.eclipse.swt.widgets.Canvas.WM_WINDOWPOSCHANGED(Canvas.java:459)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4856)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:348)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1502)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2162)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4784)
	at org.eclipse.swt.internal.win32.OS.SetMenu(Native Method)
	at org.eclipse.swt.widgets.Decorations.setMenuBar(Decorations.java:1059)
	at org.eclipse.swt.widgets.Menu.releaseParent(Menu.java:943)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.dispose(Widget.java:429)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.disposeWidget(SWTPartRenderer.java:175)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:958)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:886)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:881)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:865)
	at org.eclipse.ui.internal.WorkbenchWindow$1.handleEvent(WorkbenchWindow.java:334)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:147)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4594)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application$1.syncExec(E4Application.java:215)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:204)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:199)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:233)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:138)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:81)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:42)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setWidget(UIElementImpl.java:265)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.unbindWidget(SWTPartRenderer.java:150)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.lambda$0(SWTPartRenderer.java:139)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1055)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:812)
	at org.eclipse.swt.widgets.Widget.dispose(Widget.java:429)
	at org.eclipse.swt.widgets.Decorations.dispose(Decorations.java:408)
	at org.eclipse.swt.widgets.Shell.dispose(Shell.java:732)
	at org.eclipse.swt.widgets.Display.release(Display.java:3612)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:300)
	at org.eclipse.swt.widgets.Display.messageProc(Display.java:3143)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:2304)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:508)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4867)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:348)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1502)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2162)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4792)
	at org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.PeekMessage(OS.java:2793)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3556)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:821)
	at org.eclipse.jface.window.Window.open(Window.java:797)
	at org.eclipse.ui.internal.ide.application.IDEWorkbenchWindowAdvisor.promptOnExit(IDEWorkbenchWindowAdvisor.java:227)
	at org.eclipse.ui.internal.ide.application.IDEWorkbenchAdvisor$1.handleEvent(IDEWorkbenchAdvisor.java:167)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4145)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4137)
	at org.eclipse.swt.widgets.Display.messageProc(Display.java:3156)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2203)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:485)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2148)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4792)
	at org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.PeekMessage(OS.java:2793)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3556)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1501)
!SESSION 2018-10-10 18:46:20.299 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-10 18:46:40.327
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-11 13:14:42.649 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-11 13:15:10.319
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-11 14:24:53.813 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-11 14:25:19.583
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-11 14:42:48.892 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-11 14:43:12.962
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-12 14:54:32.284 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-12 14:54:53.993
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-25 02:06:11.508 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-25 02:07:29.075
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-25 08:30:08.204 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-25 08:30:37.354
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-27 16:37:36.851 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-27 16:37:56.586
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-11-02 06:24:23.039 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-11-02 06:24:43.969
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2019-03-05 18:09:12.249 -----------------------------------------------
eclipse.buildId=4.9.0.I20180906-0745
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2019-03-05 18:13:49.984
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rohit Mutalik'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
